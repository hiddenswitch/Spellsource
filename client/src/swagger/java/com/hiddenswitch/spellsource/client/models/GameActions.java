/*
 * Hidden Switch Spellsource API
 * The Spellsource API for matchmaking, user accounts, collections management and more.  To get started, create a user account and make sure to include the entirety of the returned login token as the X-Auth-Token header. You can reuse this token, or login for a new one.  ClientToServerMessage and ServerToClientMessage are used for the realtime game state and actions two-way websocket interface for actually playing a game. Envelope is used for the realtime API services.  For the routes that correspond to the paths in this file, visit the Gateway.java file in the Spellsource-Server GitHub repository located in this definition file. 
 *
 * OpenAPI spec version: 4.0.1
 * Contact: ben@hiddenswitch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hiddenswitch.spellsource.client.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hiddenswitch.spellsource.client.models.SpellAction;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * An object representing all valid game actions in this action request. 
 */
@ApiModel(description = "An object representing all valid game actions in this action request. ")
@JsonInclude(JsonInclude.Include.NON_DEFAULT)

public class GameActions implements Serializable {
  private static final long serialVersionUID = 1L;

  @JsonProperty("compatibility")
  private List<Integer> compatibility = null;

  @JsonProperty("all")
  private List<SpellAction> all = null;

  public GameActions compatibility(List<Integer> compatibility) {
    this.compatibility = compatibility;
    return this;
  }

  public GameActions addCompatibilityItem(Integer compatibilityItem) {
    if (this.compatibility == null) {
      this.compatibility = new ArrayList<>();
    }
    this.compatibility.add(compatibilityItem);
    return this;
  }

   /**
   * An array of game action indices. Choose one at random for compatibility purposes until the client can support all actions 
   * @return compatibility
  **/
  @ApiModelProperty(value = "An array of game action indices. Choose one at random for compatibility purposes until the client can support all actions ")
  public List<Integer> getCompatibility() {
    return compatibility;
  }

  public void setCompatibility(List<Integer> compatibility) {
    this.compatibility = compatibility;
  }

  public GameActions all(List<SpellAction> all) {
    this.all = all;
    return this;
  }

  public GameActions addAllItem(SpellAction allItem) {
    if (this.all == null) {
      this.all = new ArrayList<>();
    }
    this.all.add(allItem);
    return this;
  }

   /**
   * An array of actions containing source, target, type and a short description of the action. Some actions make come with additional display data like a specific card, card ID or other content. 
   * @return all
  **/
  @ApiModelProperty(value = "An array of actions containing source, target, type and a short description of the action. Some actions make come with additional display data like a specific card, card ID or other content. ")
  public List<SpellAction> getAll() {
    return all;
  }

  public void setAll(List<SpellAction> all) {
    this.all = all;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameActions gameActions = (GameActions) o;
    return Objects.equals(this.compatibility, gameActions.compatibility) &&
        Objects.equals(this.all, gameActions.all);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compatibility, all);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameActions {\n");
    
    sb.append("    compatibility: ").append(toIndentedString(compatibility)).append("\n");
    sb.append("    all: ").append(toIndentedString(all)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

