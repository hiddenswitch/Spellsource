/*
 * Hidden Switch Spellsource API
 * The Spellsource API for matchmaking, user accounts, collections management and more.  To get started, create a user account and make sure to include the entirety of the returned login token as the X-Auth-Token header. You can reuse this token, or login for a new one.  ClientToServerMessage and ServerToClientMessage are used for the realtime game state and actions two-way websocket interface for actually playing a game. Envelope is used for the realtime API services.  For the routes that correspond to the paths in this file, visit the Gateway.java file in the Spellsource-Server GitHub repository located in this definition file. 
 *
 * OpenAPI spec version: 4.0.1
 * Contact: ben@hiddenswitch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hiddenswitch.spellsource.client.models;

import java.util.Objects;
import io.swagger.annotations.ApiModel;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonInclude;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * The different types of cards.   - HERO: A hero card can represent both the base heroes that are set at the beginning of the game and a playable hero card          from the hand.  - MINION: A minion card summons a minion onto the battlefield.  - SPELL: A spell card puts the text on the card into play as a one-time effect.  - WEAPON: A weapon puts an actor (targetable entity) called a Weapon into play, which gives the Hero that weapon and its            attack.  - HERO_POWER: A hero power behaves like a spell card that is permanently in your hand. It can only be used once per turn.  - GROUP: A group card represents multiple cards that are referenced together.  - CHOOSE_ONE: A choose one card is a spell card that can assume the identity of two others. The base choose one card is put into                your graveyard and returned to your hand by return hand effects. The chosen card is cast, and therefore is the card                that interacts with spell casting effects and triggers.  - ENCHANTMENT: An enchantment card stores data used by effects like [AddEnchantmentSpell](https://www.playspellsource.com/javadoc/net/demilich/metastone/game/spells/AddEnchantmentSpell.html)    and [AddDeathrattleSpell](https://www.playspellsource.com/javadoc/net/demilich/metastone/game/spells/AddDeathrattleSpell.html), copying the values from it to the target.  - CLASS: A class card contains the properties to associate a specific hero-class String with, like it&#39;s name, hero, color, etc  - FORMAT: A format card lists sets to include as a collection 
 */
public enum CardType {
  
  HERO("HERO"),
  
  MINION("MINION"),
  
  SPELL("SPELL"),
  
  WEAPON("WEAPON"),
  
  HERO_POWER("HERO_POWER"),
  
  GROUP("GROUP"),
  
  CHOOSE_ONE("CHOOSE_ONE"),
  
  ENCHANTMENT("ENCHANTMENT"),
  
  CLASS("CLASS"),
  
  FORMAT("FORMAT");

  private String value;

  CardType(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static CardType fromValue(String text) {
    for (CardType b : CardType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }
}

