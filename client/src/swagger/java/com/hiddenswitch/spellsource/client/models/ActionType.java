/*
 * Hidden Switch Spellsource API
 * The Spellsource API for matchmaking, user accounts, collections management and more.  To get started, create a user account and make sure to include the entirety of the returned login token as the X-Auth-Token header. You can reuse this token, or login for a new one.  ClientToServerMessage and ServerToClientMessage are used for the realtime game state and actions two-way websocket interface for actually playing a game. Envelope is used for the realtime API services.  For the routes that correspond to the paths in this file, visit the Gateway.java file in the Spellsource-Server GitHub repository located in this definition file. 
 *
 * OpenAPI spec version: 4.0.1
 * Contact: ben@hiddenswitch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hiddenswitch.spellsource.client.models;

import java.util.Objects;
import io.swagger.annotations.ApiModel;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonInclude;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * Action types correspond to things the player can do.   - SYSTEM: Indicates the action isn&#39;t player-initiated and is of a special system type. Currently unused.  - END_TURN: Indicates the action ends the turn.  - PHYSICAL_ATTACK: Indicates the action is an attack of one entity against another.  - SPELL: Indicates the action is casting a spell, possibly with a target.  - SUMMON: Indicates the action is summoning a minion, possibly with a minion targeted to summon it \&quot;next to.\&quot;  - HERO_POWER: Indicates the action is to use a hero power, possibly with a target.  - BATTLECRY: Indicates the action is an opener. When not targeted, the opener action is executed automatically.  - EQUIP_WEAPON: Indicates the action resulted in equipping a weapon.  - DISCOVER: Indicates the action is to discover among choices.  - HERO: Indicates the action is playing a hero card, replacing the current hero. 
 */
public enum ActionType {
  
  SYSTEM("SYSTEM"),
  
  END_TURN("END_TURN"),
  
  PHYSICAL_ATTACK("PHYSICAL_ATTACK"),
  
  SPELL("SPELL"),
  
  SUMMON("SUMMON"),
  
  HERO_POWER("HERO_POWER"),
  
  BATTLECRY("BATTLECRY"),
  
  EQUIP_WEAPON("EQUIP_WEAPON"),
  
  DISCOVER("DISCOVER"),
  
  HERO("HERO");

  private String value;

  ActionType(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static ActionType fromValue(String text) {
    for (ActionType b : ActionType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }
}

