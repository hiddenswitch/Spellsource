/**
 * Hidden Switch Minionate API
 * The Minionate API for matchmaking, user accounts, collections management and more
 *
 * OpenAPI spec version: 1.0.1
 * Contact: benjamin.s.berman@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.hiddenswitch.proto3.net.client.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.hiddenswitch.proto3.net.client.models.ClientToServerMessageFirstMessage;
import com.hiddenswitch.proto3.net.client.models.Emote;
import com.hiddenswitch.proto3.net.client.models.MessageType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

import java.io.Serializable;
/**
 * ClientToServerMessage
 */

public class ClientToServerMessage  implements Serializable {
  @SerializedName("messageType")
  private MessageType messageType = null;

  @SerializedName("repliesTo")
  private String repliesTo = null;

  @SerializedName("firstMessage")
  private ClientToServerMessageFirstMessage firstMessage = null;

  @SerializedName("actionIndex")
  private Integer actionIndex = null;

  @SerializedName("discardedCardIndices")
  private List<Integer> discardedCardIndices = new ArrayList<Integer>();

  @SerializedName("emote")
  private Emote emote = null;

  public ClientToServerMessage messageType(MessageType messageType) {
    this.messageType = messageType;
    return this;
  }

   /**
   * Get messageType
   * @return messageType
  **/
  @ApiModelProperty(example = "null", value = "")
  public MessageType getMessageType() {
    return messageType;
  }

  public void setMessageType(MessageType messageType) {
    this.messageType = messageType;
  }

  public ClientToServerMessage repliesTo(String repliesTo) {
    this.repliesTo = repliesTo;
    return this;
  }

   /**
   * The ID of the server message this client message is replying to. 
   * @return repliesTo
  **/
  @ApiModelProperty(example = "null", value = "The ID of the server message this client message is replying to. ")
  public String getRepliesTo() {
    return repliesTo;
  }

  public void setRepliesTo(String repliesTo) {
    this.repliesTo = repliesTo;
  }

  public ClientToServerMessage firstMessage(ClientToServerMessageFirstMessage firstMessage) {
    this.firstMessage = firstMessage;
    return this;
  }

   /**
   * Get firstMessage
   * @return firstMessage
  **/
  @ApiModelProperty(example = "null", value = "")
  public ClientToServerMessageFirstMessage getFirstMessage() {
    return firstMessage;
  }

  public void setFirstMessage(ClientToServerMessageFirstMessage firstMessage) {
    this.firstMessage = firstMessage;
  }

  public ClientToServerMessage actionIndex(Integer actionIndex) {
    this.actionIndex = actionIndex;
    return this;
  }

   /**
   * The index of the available actions to use. 
   * @return actionIndex
  **/
  @ApiModelProperty(example = "null", value = "The index of the available actions to use. ")
  public Integer getActionIndex() {
    return actionIndex;
  }

  public void setActionIndex(Integer actionIndex) {
    this.actionIndex = actionIndex;
  }

  public ClientToServerMessage discardedCardIndices(List<Integer> discardedCardIndices) {
    this.discardedCardIndices = discardedCardIndices;
    return this;
  }

  public ClientToServerMessage addDiscardedCardIndicesItem(Integer discardedCardIndicesItem) {
    this.discardedCardIndices.add(discardedCardIndicesItem);
    return this;
  }

   /**
   * The indices of cards to discard in a mulligan.
   * @return discardedCardIndices
  **/
  @ApiModelProperty(example = "null", value = "The indices of cards to discard in a mulligan.")
  public List<Integer> getDiscardedCardIndices() {
    return discardedCardIndices;
  }

  public void setDiscardedCardIndices(List<Integer> discardedCardIndices) {
    this.discardedCardIndices = discardedCardIndices;
  }

  public ClientToServerMessage emote(Emote emote) {
    this.emote = emote;
    return this;
  }

   /**
   * Get emote
   * @return emote
  **/
  @ApiModelProperty(example = "null", value = "")
  public Emote getEmote() {
    return emote;
  }

  public void setEmote(Emote emote) {
    this.emote = emote;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientToServerMessage clientToServerMessage = (ClientToServerMessage) o;
    return Objects.equals(this.messageType, clientToServerMessage.messageType) &&
        Objects.equals(this.repliesTo, clientToServerMessage.repliesTo) &&
        Objects.equals(this.firstMessage, clientToServerMessage.firstMessage) &&
        Objects.equals(this.actionIndex, clientToServerMessage.actionIndex) &&
        Objects.equals(this.discardedCardIndices, clientToServerMessage.discardedCardIndices) &&
        Objects.equals(this.emote, clientToServerMessage.emote);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageType, repliesTo, firstMessage, actionIndex, discardedCardIndices, emote);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientToServerMessage {\n");
    
    sb.append("    messageType: ").append(toIndentedString(messageType)).append("\n");
    sb.append("    repliesTo: ").append(toIndentedString(repliesTo)).append("\n");
    sb.append("    firstMessage: ").append(toIndentedString(firstMessage)).append("\n");
    sb.append("    actionIndex: ").append(toIndentedString(actionIndex)).append("\n");
    sb.append("    discardedCardIndices: ").append(toIndentedString(discardedCardIndices)).append("\n");
    sb.append("    emote: ").append(toIndentedString(emote)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

