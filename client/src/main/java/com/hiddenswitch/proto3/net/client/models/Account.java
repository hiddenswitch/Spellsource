/**
 * Hidden Switch Minionate API
 * The Minionate API for matchmaking, user accounts, collections management and more
 *
 * OpenAPI spec version: 1.0.1
 * Contact: benjamin.s.berman@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.hiddenswitch.proto3.net.client.models;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.hiddenswitch.proto3.net.client.models.Friend;
import com.hiddenswitch.proto3.net.client.models.InventoryCollection;
import com.hiddenswitch.proto3.net.client.models.MatchmakingQueuePutResponseUnityConnection;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

import java.io.Serializable;
/**
 * Account
 */

public class Account  implements Serializable {
  @SerializedName("_id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("friends")
  private List<Friend> friends = new ArrayList<Friend>();

  @SerializedName("decks")
  private List<InventoryCollection> decks = new ArrayList<InventoryCollection>();

  @SerializedName("connection")
  private MatchmakingQueuePutResponseUnityConnection connection = null;

  @SerializedName("personalCollection")
  private InventoryCollection personalCollection = null;

  public Account id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Account name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Account email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Account friends(List<Friend> friends) {
    this.friends = friends;
    return this;
  }

  public Account addFriendsItem(Friend friendsItem) {
    this.friends.add(friendsItem);
    return this;
  }

   /**
   * Get friends
   * @return friends
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Friend> getFriends() {
    return friends;
  }

  public void setFriends(List<Friend> friends) {
    this.friends = friends;
  }

  public Account decks(List<InventoryCollection> decks) {
    this.decks = decks;
    return this;
  }

  public Account addDecksItem(InventoryCollection decksItem) {
    this.decks.add(decksItem);
    return this;
  }

   /**
   * Get decks
   * @return decks
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<InventoryCollection> getDecks() {
    return decks;
  }

  public void setDecks(List<InventoryCollection> decks) {
    this.decks = decks;
  }

  public Account connection(MatchmakingQueuePutResponseUnityConnection connection) {
    this.connection = connection;
    return this;
  }

   /**
   * Get connection
   * @return connection
  **/
  @ApiModelProperty(example = "null", value = "")
  public MatchmakingQueuePutResponseUnityConnection getConnection() {
    return connection;
  }

  public void setConnection(MatchmakingQueuePutResponseUnityConnection connection) {
    this.connection = connection;
  }

  public Account personalCollection(InventoryCollection personalCollection) {
    this.personalCollection = personalCollection;
    return this;
  }

   /**
   * Get personalCollection
   * @return personalCollection
  **/
  @ApiModelProperty(example = "null", value = "")
  public InventoryCollection getPersonalCollection() {
    return personalCollection;
  }

  public void setPersonalCollection(InventoryCollection personalCollection) {
    this.personalCollection = personalCollection;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return Objects.equals(this.id, account.id) &&
        Objects.equals(this.name, account.name) &&
        Objects.equals(this.email, account.email) &&
        Objects.equals(this.friends, account.friends) &&
        Objects.equals(this.decks, account.decks) &&
        Objects.equals(this.connection, account.connection) &&
        Objects.equals(this.personalCollection, account.personalCollection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, email, friends, decks, connection, personalCollection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    friends: ").append(toIndentedString(friends)).append("\n");
    sb.append("    decks: ").append(toIndentedString(decks)).append("\n");
    sb.append("    connection: ").append(toIndentedString(connection)).append("\n");
    sb.append("    personalCollection: ").append(toIndentedString(personalCollection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

