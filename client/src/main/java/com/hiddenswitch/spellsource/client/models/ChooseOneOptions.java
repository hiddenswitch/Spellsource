/*
 * Hidden Switch Spellsource API
 * The Spellsource API for matchmaking, user accounts, collections management and more.  To get started, create a user account and make sure to include the entirety of the returned login token as the X-Auth-Token header. You can reuse this token, or login for a new one.  ClientToServerMessage and ServerToClientMessage are used for the realtime game state and actions two-way websocket interface for actually playing a game. Envelope is used for the realtime API services.  For the routes that correspond to the paths in this file, visit the Gateway.java file in the Spellsource-Server GitHub repository located in this definition file. 
 *
 * OpenAPI spec version: 3.0.4
 * Contact: ben@hiddenswitch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hiddenswitch.spellsource.client.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.hiddenswitch.spellsource.client.models.Entity;
import com.hiddenswitch.spellsource.client.models.SpellAction;
import com.hiddenswitch.spellsource.client.models.SummonAction;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * A prompt to choose from specified options. 
 */
@ApiModel(description = "A prompt to choose from specified options. ")
@JsonInclude(JsonInclude.Include.NON_DEFAULT)

public class ChooseOneOptions implements Serializable {
  private static final long serialVersionUID = 1L;

  @JsonProperty("cardInHandId")
  private Integer cardInHandId = null;

  @JsonProperty("entities")
  private List<Entity> entities = null;

  @JsonProperty("spells")
  private List<SpellAction> spells = null;

  @JsonProperty("summons")
  private List<SummonAction> summons = null;

  @JsonProperty("heroPowers")
  private List<SpellAction> heroPowers = null;

  @JsonProperty("heroes")
  private List<SpellAction> heroes = null;

  public ChooseOneOptions cardInHandId(Integer cardInHandId) {
    this.cardInHandId = cardInHandId;
    return this;
  }

   /**
   * The card in the hand that corresponds to these two options. 
   * @return cardInHandId
  **/
  @ApiModelProperty(value = "The card in the hand that corresponds to these two options. ")
  public Integer getCardInHandId() {
    return cardInHandId;
  }

  public void setCardInHandId(Integer cardInHandId) {
    this.cardInHandId = cardInHandId;
  }

  public ChooseOneOptions entities(List<Entity> entities) {
    this.entities = entities;
    return this;
  }

  public ChooseOneOptions addEntitiesItem(Entity entitiesItem) {
    if (this.entities == null) {
      this.entities = new ArrayList<>();
    }
    this.entities.add(entitiesItem);
    return this;
  }

   /**
   * The virtual cards used to render the options. 
   * @return entities
  **/
  @ApiModelProperty(value = "The virtual cards used to render the options. ")
  public List<Entity> getEntities() {
    return entities;
  }

  public void setEntities(List<Entity> entities) {
    this.entities = entities;
  }

  public ChooseOneOptions spells(List<SpellAction> spells) {
    this.spells = spells;
    return this;
  }

  public ChooseOneOptions addSpellsItem(SpellAction spellsItem) {
    if (this.spells == null) {
      this.spells = new ArrayList<>();
    }
    this.spells.add(spellsItem);
    return this;
  }

   /**
   * The spells that correspond to the virtual entities. Their sourceId is set to the corresponding virtual entity. 
   * @return spells
  **/
  @ApiModelProperty(value = "The spells that correspond to the virtual entities. Their sourceId is set to the corresponding virtual entity. ")
  public List<SpellAction> getSpells() {
    return spells;
  }

  public void setSpells(List<SpellAction> spells) {
    this.spells = spells;
  }

  public ChooseOneOptions summons(List<SummonAction> summons) {
    this.summons = summons;
    return this;
  }

  public ChooseOneOptions addSummonsItem(SummonAction summonsItem) {
    if (this.summons == null) {
      this.summons = new ArrayList<>();
    }
    this.summons.add(summonsItem);
    return this;
  }

   /**
   * The summons that correspond to the virtual entities. Their sourceId is set to the corresponding virtual entity. 
   * @return summons
  **/
  @ApiModelProperty(value = "The summons that correspond to the virtual entities. Their sourceId is set to the corresponding virtual entity. ")
  public List<SummonAction> getSummons() {
    return summons;
  }

  public void setSummons(List<SummonAction> summons) {
    this.summons = summons;
  }

  public ChooseOneOptions heroPowers(List<SpellAction> heroPowers) {
    this.heroPowers = heroPowers;
    return this;
  }

  public ChooseOneOptions addHeroPowersItem(SpellAction heroPowersItem) {
    if (this.heroPowers == null) {
      this.heroPowers = new ArrayList<>();
    }
    this.heroPowers.add(heroPowersItem);
    return this;
  }

   /**
   * The spells that correspond to virtual hero power entities. 
   * @return heroPowers
  **/
  @ApiModelProperty(value = "The spells that correspond to virtual hero power entities. ")
  public List<SpellAction> getHeroPowers() {
    return heroPowers;
  }

  public void setHeroPowers(List<SpellAction> heroPowers) {
    this.heroPowers = heroPowers;
  }

  public ChooseOneOptions heroes(List<SpellAction> heroes) {
    this.heroes = heroes;
    return this;
  }

  public ChooseOneOptions addHeroesItem(SpellAction heroesItem) {
    if (this.heroes == null) {
      this.heroes = new ArrayList<>();
    }
    this.heroes.add(heroesItem);
    return this;
  }

   /**
   * Choose one hero cards corresponding to their virtual entities. 
   * @return heroes
  **/
  @ApiModelProperty(value = "Choose one hero cards corresponding to their virtual entities. ")
  public List<SpellAction> getHeroes() {
    return heroes;
  }

  public void setHeroes(List<SpellAction> heroes) {
    this.heroes = heroes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChooseOneOptions chooseOneOptions = (ChooseOneOptions) o;
    return Objects.equals(this.cardInHandId, chooseOneOptions.cardInHandId) &&
        Objects.equals(this.entities, chooseOneOptions.entities) &&
        Objects.equals(this.spells, chooseOneOptions.spells) &&
        Objects.equals(this.summons, chooseOneOptions.summons) &&
        Objects.equals(this.heroPowers, chooseOneOptions.heroPowers) &&
        Objects.equals(this.heroes, chooseOneOptions.heroes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardInHandId, entities, spells, summons, heroPowers, heroes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChooseOneOptions {\n");
    
    sb.append("    cardInHandId: ").append(toIndentedString(cardInHandId)).append("\n");
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("    spells: ").append(toIndentedString(spells)).append("\n");
    sb.append("    summons: ").append(toIndentedString(summons)).append("\n");
    sb.append("    heroPowers: ").append(toIndentedString(heroPowers)).append("\n");
    sb.append("    heroes: ").append(toIndentedString(heroes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

