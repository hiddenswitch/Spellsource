/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.vertx.core.json.JsonObject;

import java.io.Serializable;
import java.time.OffsetDateTime;

import org.w3c.dom.Element;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ICards extends VertxPojo, Serializable {

    /**
     * Setter for <code>spellsource.cards.id</code>.
     */
    public ICards setId(String value);

    /**
     * Getter for <code>spellsource.cards.id</code>.
     */
    public String getId();

    /**
     * Setter for <code>spellsource.cards.created_by</code>.
     */
    public ICards setCreatedBy(String value);

    /**
     * Getter for <code>spellsource.cards.created_by</code>.
     */
    public String getCreatedBy();

    /**
     * Setter for <code>spellsource.cards.uri</code>.
     */
    public ICards setUri(String value);

    /**
     * Getter for <code>spellsource.cards.uri</code>.
     */
    public String getUri();

    /**
     * Setter for <code>spellsource.cards.blockly_workspace</code>.
     */
    public ICards setBlocklyWorkspace(Element value);

    /**
     * Getter for <code>spellsource.cards.blockly_workspace</code>.
     */
    public Element getBlocklyWorkspace();

    /**
     * Setter for <code>spellsource.cards.card_script</code>.
     */
    public ICards setCardScript(JsonObject value);

    /**
     * Getter for <code>spellsource.cards.card_script</code>.
     */
    public JsonObject getCardScript();

    /**
     * Setter for <code>spellsource.cards.created_at</code>.
     */
    public ICards setCreatedAt(OffsetDateTime value);

    /**
     * Getter for <code>spellsource.cards.created_at</code>.
     */
    public OffsetDateTime getCreatedAt();

    /**
     * Setter for <code>spellsource.cards.last_modified</code>.
     */
    public ICards setLastModified(OffsetDateTime value);

    /**
     * Getter for <code>spellsource.cards.last_modified</code>.
     */
    public OffsetDateTime getLastModified();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ICards
     */
    public void from(ICards from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ICards
     */
    public <E extends ICards> E into(E into);

    @Override
    public default ICards fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setId(json.getString("id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("id","java.lang.String",e);
        }
        try {
            setCreatedBy(json.getString("created_by"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("created_by","java.lang.String",e);
        }
        try {
            setUri(json.getString("uri"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("uri","java.lang.String",e);
        }
        try {
            // Omitting unrecognized type org.w3c.dom.Element for column blockly_workspace!
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("blockly_workspace","org.w3c.dom.Element",e);
        }
        try {
            setCardScript(com.hiddenswitch.framework.schema.spellsource.tables.converters.Converters.IO_GITHUB_JKLINGSPORN_VERTX_JOOQ_SHARED_POSTGRES_JSONBTOJSONOBJECTCONVERTER_INSTANCE.pgConverter().from(json.getJsonObject("card_script")));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("card_script","io.vertx.core.json.JsonObject",e);
        }
        try {
            String created_atString = json.getString("created_at");
            setCreatedAt(created_atString == null?null:java.time.OffsetDateTime.parse(created_atString));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("created_at","java.time.OffsetDateTime",e);
        }
        try {
            String last_modifiedString = json.getString("last_modified");
            setLastModified(last_modifiedString == null?null:java.time.OffsetDateTime.parse(last_modifiedString));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("last_modified","java.time.OffsetDateTime",e);
        }
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("created_by",getCreatedBy());
        json.put("uri",getUri());
        // Omitting unrecognized type org.w3c.dom.Element for column blockly_workspace!
        json.put("card_script",com.hiddenswitch.framework.schema.spellsource.tables.converters.Converters.IO_GITHUB_JKLINGSPORN_VERTX_JOOQ_SHARED_POSTGRES_JSONBTOJSONOBJECTCONVERTER_INSTANCE.pgConverter().to(getCardScript()));
        json.put("created_at",getCreatedAt()==null?null:getCreatedAt().toString());
        json.put("last_modified",getLastModified()==null?null:getLastModified().toString());
        return json;
    }

}
