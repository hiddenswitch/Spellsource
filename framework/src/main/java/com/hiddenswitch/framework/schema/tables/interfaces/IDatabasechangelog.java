/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IDatabasechangelog extends VertxPojo, Serializable {

    /**
     * Setter for <code>public.databasechangelog.id</code>.
     */
    public IDatabasechangelog setId(String value);

    /**
     * Getter for <code>public.databasechangelog.id</code>.
     */
    public String getId();

    /**
     * Setter for <code>public.databasechangelog.author</code>.
     */
    public IDatabasechangelog setAuthor(String value);

    /**
     * Getter for <code>public.databasechangelog.author</code>.
     */
    public String getAuthor();

    /**
     * Setter for <code>public.databasechangelog.filename</code>.
     */
    public IDatabasechangelog setFilename(String value);

    /**
     * Getter for <code>public.databasechangelog.filename</code>.
     */
    public String getFilename();

    /**
     * Setter for <code>public.databasechangelog.dateexecuted</code>.
     */
    public IDatabasechangelog setDateexecuted(LocalDateTime value);

    /**
     * Getter for <code>public.databasechangelog.dateexecuted</code>.
     */
    public LocalDateTime getDateexecuted();

    /**
     * Setter for <code>public.databasechangelog.orderexecuted</code>.
     */
    public IDatabasechangelog setOrderexecuted(Integer value);

    /**
     * Getter for <code>public.databasechangelog.orderexecuted</code>.
     */
    public Integer getOrderexecuted();

    /**
     * Setter for <code>public.databasechangelog.exectype</code>.
     */
    public IDatabasechangelog setExectype(String value);

    /**
     * Getter for <code>public.databasechangelog.exectype</code>.
     */
    public String getExectype();

    /**
     * Setter for <code>public.databasechangelog.md5sum</code>.
     */
    public IDatabasechangelog setMd5sum(String value);

    /**
     * Getter for <code>public.databasechangelog.md5sum</code>.
     */
    public String getMd5sum();

    /**
     * Setter for <code>public.databasechangelog.description</code>.
     */
    public IDatabasechangelog setDescription(String value);

    /**
     * Getter for <code>public.databasechangelog.description</code>.
     */
    public String getDescription();

    /**
     * Setter for <code>public.databasechangelog.comments</code>.
     */
    public IDatabasechangelog setComments(String value);

    /**
     * Getter for <code>public.databasechangelog.comments</code>.
     */
    public String getComments();

    /**
     * Setter for <code>public.databasechangelog.tag</code>.
     */
    public IDatabasechangelog setTag(String value);

    /**
     * Getter for <code>public.databasechangelog.tag</code>.
     */
    public String getTag();

    /**
     * Setter for <code>public.databasechangelog.liquibase</code>.
     */
    public IDatabasechangelog setLiquibase(String value);

    /**
     * Getter for <code>public.databasechangelog.liquibase</code>.
     */
    public String getLiquibase();

    /**
     * Setter for <code>public.databasechangelog.contexts</code>.
     */
    public IDatabasechangelog setContexts(String value);

    /**
     * Getter for <code>public.databasechangelog.contexts</code>.
     */
    public String getContexts();

    /**
     * Setter for <code>public.databasechangelog.labels</code>.
     */
    public IDatabasechangelog setLabels(String value);

    /**
     * Getter for <code>public.databasechangelog.labels</code>.
     */
    public String getLabels();

    /**
     * Setter for <code>public.databasechangelog.deployment_id</code>.
     */
    public IDatabasechangelog setDeploymentId(String value);

    /**
     * Getter for <code>public.databasechangelog.deployment_id</code>.
     */
    public String getDeploymentId();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IDatabasechangelog
     */
    public void from(IDatabasechangelog from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IDatabasechangelog
     */
    public <E extends IDatabasechangelog> E into(E into);

    @Override
    public default IDatabasechangelog fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setId(json.getString("id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("id","java.lang.String",e);
        }
        try {
            setAuthor(json.getString("author"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("author","java.lang.String",e);
        }
        try {
            setFilename(json.getString("filename"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("filename","java.lang.String",e);
        }
        try {
            String dateexecutedString = json.getString("dateexecuted");
            setDateexecuted(dateexecutedString == null?null:java.time.LocalDateTime.parse(dateexecutedString));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("dateexecuted","java.time.LocalDateTime",e);
        }
        try {
            setOrderexecuted(json.getInteger("orderexecuted"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("orderexecuted","java.lang.Integer",e);
        }
        try {
            setExectype(json.getString("exectype"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("exectype","java.lang.String",e);
        }
        try {
            setMd5sum(json.getString("md5sum"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("md5sum","java.lang.String",e);
        }
        try {
            setDescription(json.getString("description"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("description","java.lang.String",e);
        }
        try {
            setComments(json.getString("comments"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("comments","java.lang.String",e);
        }
        try {
            setTag(json.getString("tag"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("tag","java.lang.String",e);
        }
        try {
            setLiquibase(json.getString("liquibase"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("liquibase","java.lang.String",e);
        }
        try {
            setContexts(json.getString("contexts"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("contexts","java.lang.String",e);
        }
        try {
            setLabels(json.getString("labels"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("labels","java.lang.String",e);
        }
        try {
            setDeploymentId(json.getString("deployment_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("deployment_id","java.lang.String",e);
        }
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("author",getAuthor());
        json.put("filename",getFilename());
        json.put("dateexecuted",getDateexecuted()==null?null:getDateexecuted().toString());
        json.put("orderexecuted",getOrderexecuted());
        json.put("exectype",getExectype());
        json.put("md5sum",getMd5sum());
        json.put("description",getDescription());
        json.put("comments",getComments());
        json.put("tag",getTag());
        json.put("liquibase",getLiquibase());
        json.put("contexts",getContexts());
        json.put("labels",getLabels());
        json.put("deployment_id",getDeploymentId());
        return json;
    }

}
