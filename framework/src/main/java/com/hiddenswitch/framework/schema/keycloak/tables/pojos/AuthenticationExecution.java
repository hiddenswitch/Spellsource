/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IAuthenticationExecution;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthenticationExecution implements VertxPojo, IAuthenticationExecution {

    private static final long serialVersionUID = -978787883;

    private String  id;
    private String  alias;
    private String  authenticator;
    private String  realmId;
    private String  flowId;
    private Integer requirement;
    private Integer priority;
    private Boolean authenticatorFlow;
    private String  authFlowId;
    private String  authConfig;

    public AuthenticationExecution() {}

    public AuthenticationExecution(IAuthenticationExecution value) {
        this.id = value.getId();
        this.alias = value.getAlias();
        this.authenticator = value.getAuthenticator();
        this.realmId = value.getRealmId();
        this.flowId = value.getFlowId();
        this.requirement = value.getRequirement();
        this.priority = value.getPriority();
        this.authenticatorFlow = value.getAuthenticatorFlow();
        this.authFlowId = value.getAuthFlowId();
        this.authConfig = value.getAuthConfig();
    }

    public AuthenticationExecution(
        String  id,
        String  alias,
        String  authenticator,
        String  realmId,
        String  flowId,
        Integer requirement,
        Integer priority,
        Boolean authenticatorFlow,
        String  authFlowId,
        String  authConfig
    ) {
        this.id = id;
        this.alias = alias;
        this.authenticator = authenticator;
        this.realmId = realmId;
        this.flowId = flowId;
        this.requirement = requirement;
        this.priority = priority;
        this.authenticatorFlow = authenticatorFlow;
        this.authFlowId = authFlowId;
        this.authConfig = authConfig;
    }

    public AuthenticationExecution(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    @Override
    public String getId() {
        return this.id;
    }

    @Override
    public AuthenticationExecution setId(String id) {
        this.id = id;
        return this;
    }

    @Override
    public String getAlias() {
        return this.alias;
    }

    @Override
    public AuthenticationExecution setAlias(String alias) {
        this.alias = alias;
        return this;
    }

    @Override
    public String getAuthenticator() {
        return this.authenticator;
    }

    @Override
    public AuthenticationExecution setAuthenticator(String authenticator) {
        this.authenticator = authenticator;
        return this;
    }

    @Override
    public String getRealmId() {
        return this.realmId;
    }

    @Override
    public AuthenticationExecution setRealmId(String realmId) {
        this.realmId = realmId;
        return this;
    }

    @Override
    public String getFlowId() {
        return this.flowId;
    }

    @Override
    public AuthenticationExecution setFlowId(String flowId) {
        this.flowId = flowId;
        return this;
    }

    @Override
    public Integer getRequirement() {
        return this.requirement;
    }

    @Override
    public AuthenticationExecution setRequirement(Integer requirement) {
        this.requirement = requirement;
        return this;
    }

    @Override
    public Integer getPriority() {
        return this.priority;
    }

    @Override
    public AuthenticationExecution setPriority(Integer priority) {
        this.priority = priority;
        return this;
    }

    @Override
    public Boolean getAuthenticatorFlow() {
        return this.authenticatorFlow;
    }

    @Override
    public AuthenticationExecution setAuthenticatorFlow(Boolean authenticatorFlow) {
        this.authenticatorFlow = authenticatorFlow;
        return this;
    }

    @Override
    public String getAuthFlowId() {
        return this.authFlowId;
    }

    @Override
    public AuthenticationExecution setAuthFlowId(String authFlowId) {
        this.authFlowId = authFlowId;
        return this;
    }

    @Override
    public String getAuthConfig() {
        return this.authConfig;
    }

    @Override
    public AuthenticationExecution setAuthConfig(String authConfig) {
        this.authConfig = authConfig;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AuthenticationExecution (");

        sb.append(id);
        sb.append(", ").append(alias);
        sb.append(", ").append(authenticator);
        sb.append(", ").append(realmId);
        sb.append(", ").append(flowId);
        sb.append(", ").append(requirement);
        sb.append(", ").append(priority);
        sb.append(", ").append(authenticatorFlow);
        sb.append(", ").append(authFlowId);
        sb.append(", ").append(authConfig);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IAuthenticationExecution from) {
        setId(from.getId());
        setAlias(from.getAlias());
        setAuthenticator(from.getAuthenticator());
        setRealmId(from.getRealmId());
        setFlowId(from.getFlowId());
        setRequirement(from.getRequirement());
        setPriority(from.getPriority());
        setAuthenticatorFlow(from.getAuthenticatorFlow());
        setAuthFlowId(from.getAuthFlowId());
        setAuthConfig(from.getAuthConfig());
    }

    @Override
    public <E extends IAuthenticationExecution> E into(E into) {
        into.from(this);
        return into;
    }
}
