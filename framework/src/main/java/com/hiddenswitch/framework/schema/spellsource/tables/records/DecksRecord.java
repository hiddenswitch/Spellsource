/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.records;


import com.hiddenswitch.framework.schema.spellsource.tables.Decks;
import com.hiddenswitch.framework.schema.spellsource.tables.interfaces.IDecks;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DecksRecord extends UpdatableRecordImpl<DecksRecord> implements VertxPojo, Record7<String, String, String, String, String, Boolean, String>, IDecks {

    private static final long serialVersionUID = -1624198219;

    /**
     * Setter for <code>spellsource.decks.id</code>.
     */
    @Override
    public DecksRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.decks.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>spellsource.decks.created_by</code>. who created this deck originally
     */
    @Override
    public DecksRecord setCreatedBy(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.decks.created_by</code>. who created this deck originally
     */
    @Override
    public String getCreatedBy() {
        return (String) get(1);
    }

    /**
     * Setter for <code>spellsource.decks.last_edited_by</code>. who last edited this deck
     */
    @Override
    public DecksRecord setLastEditedBy(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.decks.last_edited_by</code>. who last edited this deck
     */
    @Override
    public String getLastEditedBy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>spellsource.decks.name</code>.
     */
    @Override
    public DecksRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.decks.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>spellsource.decks.hero_class</code>.
     */
    @Override
    public DecksRecord setHeroClass(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.decks.hero_class</code>.
     */
    @Override
    public String getHeroClass() {
        return (String) get(4);
    }

    /**
     * Setter for <code>spellsource.decks.trashed</code>.
     */
    @Override
    public DecksRecord setTrashed(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.decks.trashed</code>.
     */
    @Override
    public Boolean getTrashed() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>spellsource.decks.format</code>.
     */
    @Override
    public DecksRecord setFormat(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.decks.format</code>.
     */
    @Override
    public String getFormat() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, Boolean, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, String, Boolean, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Decks.DECKS.ID;
    }

    @Override
    public Field<String> field2() {
        return Decks.DECKS.CREATED_BY;
    }

    @Override
    public Field<String> field3() {
        return Decks.DECKS.LAST_EDITED_BY;
    }

    @Override
    public Field<String> field4() {
        return Decks.DECKS.NAME;
    }

    @Override
    public Field<String> field5() {
        return Decks.DECKS.HERO_CLASS;
    }

    @Override
    public Field<Boolean> field6() {
        return Decks.DECKS.TRASHED;
    }

    @Override
    public Field<String> field7() {
        return Decks.DECKS.FORMAT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCreatedBy();
    }

    @Override
    public String component3() {
        return getLastEditedBy();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getHeroClass();
    }

    @Override
    public Boolean component6() {
        return getTrashed();
    }

    @Override
    public String component7() {
        return getFormat();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCreatedBy();
    }

    @Override
    public String value3() {
        return getLastEditedBy();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getHeroClass();
    }

    @Override
    public Boolean value6() {
        return getTrashed();
    }

    @Override
    public String value7() {
        return getFormat();
    }

    @Override
    public DecksRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public DecksRecord value2(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public DecksRecord value3(String value) {
        setLastEditedBy(value);
        return this;
    }

    @Override
    public DecksRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public DecksRecord value5(String value) {
        setHeroClass(value);
        return this;
    }

    @Override
    public DecksRecord value6(Boolean value) {
        setTrashed(value);
        return this;
    }

    @Override
    public DecksRecord value7(String value) {
        setFormat(value);
        return this;
    }

    @Override
    public DecksRecord values(String value1, String value2, String value3, String value4, String value5, Boolean value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDecks from) {
        setId(from.getId());
        setCreatedBy(from.getCreatedBy());
        setLastEditedBy(from.getLastEditedBy());
        setName(from.getName());
        setHeroClass(from.getHeroClass());
        setTrashed(from.getTrashed());
        setFormat(from.getFormat());
    }

    @Override
    public <E extends IDecks> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DecksRecord
     */
    public DecksRecord() {
        super(Decks.DECKS);
    }

    /**
     * Create a detached, initialised DecksRecord
     */
    public DecksRecord(String id, String createdBy, String lastEditedBy, String name, String heroClass, Boolean trashed, String format) {
        super(Decks.DECKS);

        set(0, id);
        set(1, createdBy);
        set(2, lastEditedBy);
        set(3, name);
        set(4, heroClass);
        set(5, trashed);
        set(6, format);
    }

    public DecksRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
