/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.pojos;


import com.hiddenswitch.framework.schema.spellsource.tables.interfaces.IDeckShares;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


/**
 * indicates a deck shared to a player
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeckShares implements VertxPojo, IDeckShares {

    private static final long serialVersionUID = -1221837258;

    private Long    id;
    private String  deckId;
    private String  shareRecipientId;
    private Boolean trashed;

    public DeckShares() {}

    public DeckShares(IDeckShares value) {
        this.id = value.getId();
        this.deckId = value.getDeckId();
        this.shareRecipientId = value.getShareRecipientId();
        this.trashed = value.getTrashed();
    }

    public DeckShares(
        Long    id,
        String  deckId,
        String  shareRecipientId,
        Boolean trashed
    ) {
        this.id = id;
        this.deckId = deckId;
        this.shareRecipientId = shareRecipientId;
        this.trashed = trashed;
    }

    public DeckShares(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    @Override
    public Long getId() {
        return this.id;
    }

    @Override
    public DeckShares setId(Long id) {
        this.id = id;
        return this;
    }

    @Override
    public String getDeckId() {
        return this.deckId;
    }

    @Override
    public DeckShares setDeckId(String deckId) {
        this.deckId = deckId;
        return this;
    }

    @Override
    public String getShareRecipientId() {
        return this.shareRecipientId;
    }

    @Override
    public DeckShares setShareRecipientId(String shareRecipientId) {
        this.shareRecipientId = shareRecipientId;
        return this;
    }

    @Override
    public Boolean getTrashed() {
        return this.trashed;
    }

    @Override
    public DeckShares setTrashed(Boolean trashed) {
        this.trashed = trashed;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DeckShares (");

        sb.append(id);
        sb.append(", ").append(deckId);
        sb.append(", ").append(shareRecipientId);
        sb.append(", ").append(trashed);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDeckShares from) {
        setId(from.getId());
        setDeckId(from.getDeckId());
        setShareRecipientId(from.getShareRecipientId());
        setTrashed(from.getTrashed());
    }

    @Override
    public <E extends IDeckShares> E into(E into) {
        into.from(this);
        return into;
    }
}
