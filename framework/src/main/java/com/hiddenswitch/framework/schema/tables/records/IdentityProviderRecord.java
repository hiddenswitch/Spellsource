/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables.records;


import com.hiddenswitch.framework.schema.tables.IdentityProvider;
import com.hiddenswitch.framework.schema.tables.interfaces.IIdentityProvider;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdentityProviderRecord extends UpdatableRecordImpl<IdentityProviderRecord> implements VertxPojo, Record13<String, Boolean, String, String, Boolean, Boolean, String, Boolean, Boolean, String, String, String, Boolean>, IIdentityProvider {

    private static final long serialVersionUID = -989057050;

    /**
     * Setter for <code>public.identity_provider.internal_id</code>.
     */
    @Override
    public IdentityProviderRecord setInternalId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.internal_id</code>.
     */
    @Override
    public String getInternalId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.identity_provider.enabled</code>.
     */
    @Override
    public IdentityProviderRecord setEnabled(Boolean value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.enabled</code>.
     */
    @Override
    public Boolean getEnabled() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.identity_provider.provider_alias</code>.
     */
    @Override
    public IdentityProviderRecord setProviderAlias(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.provider_alias</code>.
     */
    @Override
    public String getProviderAlias() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.identity_provider.provider_id</code>.
     */
    @Override
    public IdentityProviderRecord setProviderId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.provider_id</code>.
     */
    @Override
    public String getProviderId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.identity_provider.store_token</code>.
     */
    @Override
    public IdentityProviderRecord setStoreToken(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.store_token</code>.
     */
    @Override
    public Boolean getStoreToken() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.identity_provider.authenticate_by_default</code>.
     */
    @Override
    public IdentityProviderRecord setAuthenticateByDefault(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.authenticate_by_default</code>.
     */
    @Override
    public Boolean getAuthenticateByDefault() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.identity_provider.realm_id</code>.
     */
    @Override
    public IdentityProviderRecord setRealmId(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.identity_provider.add_token_role</code>.
     */
    @Override
    public IdentityProviderRecord setAddTokenRole(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.add_token_role</code>.
     */
    @Override
    public Boolean getAddTokenRole() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.identity_provider.trust_email</code>.
     */
    @Override
    public IdentityProviderRecord setTrustEmail(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.trust_email</code>.
     */
    @Override
    public Boolean getTrustEmail() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.identity_provider.first_broker_login_flow_id</code>.
     */
    @Override
    public IdentityProviderRecord setFirstBrokerLoginFlowId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.first_broker_login_flow_id</code>.
     */
    @Override
    public String getFirstBrokerLoginFlowId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.identity_provider.post_broker_login_flow_id</code>.
     */
    @Override
    public IdentityProviderRecord setPostBrokerLoginFlowId(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.post_broker_login_flow_id</code>.
     */
    @Override
    public String getPostBrokerLoginFlowId() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.identity_provider.provider_display_name</code>.
     */
    @Override
    public IdentityProviderRecord setProviderDisplayName(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.provider_display_name</code>.
     */
    @Override
    public String getProviderDisplayName() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.identity_provider.link_only</code>.
     */
    @Override
    public IdentityProviderRecord setLinkOnly(Boolean value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.identity_provider.link_only</code>.
     */
    @Override
    public Boolean getLinkOnly() {
        return (Boolean) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<String, Boolean, String, String, Boolean, Boolean, String, Boolean, Boolean, String, String, String, Boolean> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<String, Boolean, String, String, Boolean, Boolean, String, Boolean, Boolean, String, String, String, Boolean> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return IdentityProvider.IDENTITY_PROVIDER.INTERNAL_ID;
    }

    @Override
    public Field<Boolean> field2() {
        return IdentityProvider.IDENTITY_PROVIDER.ENABLED;
    }

    @Override
    public Field<String> field3() {
        return IdentityProvider.IDENTITY_PROVIDER.PROVIDER_ALIAS;
    }

    @Override
    public Field<String> field4() {
        return IdentityProvider.IDENTITY_PROVIDER.PROVIDER_ID;
    }

    @Override
    public Field<Boolean> field5() {
        return IdentityProvider.IDENTITY_PROVIDER.STORE_TOKEN;
    }

    @Override
    public Field<Boolean> field6() {
        return IdentityProvider.IDENTITY_PROVIDER.AUTHENTICATE_BY_DEFAULT;
    }

    @Override
    public Field<String> field7() {
        return IdentityProvider.IDENTITY_PROVIDER.REALM_ID;
    }

    @Override
    public Field<Boolean> field8() {
        return IdentityProvider.IDENTITY_PROVIDER.ADD_TOKEN_ROLE;
    }

    @Override
    public Field<Boolean> field9() {
        return IdentityProvider.IDENTITY_PROVIDER.TRUST_EMAIL;
    }

    @Override
    public Field<String> field10() {
        return IdentityProvider.IDENTITY_PROVIDER.FIRST_BROKER_LOGIN_FLOW_ID;
    }

    @Override
    public Field<String> field11() {
        return IdentityProvider.IDENTITY_PROVIDER.POST_BROKER_LOGIN_FLOW_ID;
    }

    @Override
    public Field<String> field12() {
        return IdentityProvider.IDENTITY_PROVIDER.PROVIDER_DISPLAY_NAME;
    }

    @Override
    public Field<Boolean> field13() {
        return IdentityProvider.IDENTITY_PROVIDER.LINK_ONLY;
    }

    @Override
    public String component1() {
        return getInternalId();
    }

    @Override
    public Boolean component2() {
        return getEnabled();
    }

    @Override
    public String component3() {
        return getProviderAlias();
    }

    @Override
    public String component4() {
        return getProviderId();
    }

    @Override
    public Boolean component5() {
        return getStoreToken();
    }

    @Override
    public Boolean component6() {
        return getAuthenticateByDefault();
    }

    @Override
    public String component7() {
        return getRealmId();
    }

    @Override
    public Boolean component8() {
        return getAddTokenRole();
    }

    @Override
    public Boolean component9() {
        return getTrustEmail();
    }

    @Override
    public String component10() {
        return getFirstBrokerLoginFlowId();
    }

    @Override
    public String component11() {
        return getPostBrokerLoginFlowId();
    }

    @Override
    public String component12() {
        return getProviderDisplayName();
    }

    @Override
    public Boolean component13() {
        return getLinkOnly();
    }

    @Override
    public String value1() {
        return getInternalId();
    }

    @Override
    public Boolean value2() {
        return getEnabled();
    }

    @Override
    public String value3() {
        return getProviderAlias();
    }

    @Override
    public String value4() {
        return getProviderId();
    }

    @Override
    public Boolean value5() {
        return getStoreToken();
    }

    @Override
    public Boolean value6() {
        return getAuthenticateByDefault();
    }

    @Override
    public String value7() {
        return getRealmId();
    }

    @Override
    public Boolean value8() {
        return getAddTokenRole();
    }

    @Override
    public Boolean value9() {
        return getTrustEmail();
    }

    @Override
    public String value10() {
        return getFirstBrokerLoginFlowId();
    }

    @Override
    public String value11() {
        return getPostBrokerLoginFlowId();
    }

    @Override
    public String value12() {
        return getProviderDisplayName();
    }

    @Override
    public Boolean value13() {
        return getLinkOnly();
    }

    @Override
    public IdentityProviderRecord value1(String value) {
        setInternalId(value);
        return this;
    }

    @Override
    public IdentityProviderRecord value2(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public IdentityProviderRecord value3(String value) {
        setProviderAlias(value);
        return this;
    }

    @Override
    public IdentityProviderRecord value4(String value) {
        setProviderId(value);
        return this;
    }

    @Override
    public IdentityProviderRecord value5(Boolean value) {
        setStoreToken(value);
        return this;
    }

    @Override
    public IdentityProviderRecord value6(Boolean value) {
        setAuthenticateByDefault(value);
        return this;
    }

    @Override
    public IdentityProviderRecord value7(String value) {
        setRealmId(value);
        return this;
    }

    @Override
    public IdentityProviderRecord value8(Boolean value) {
        setAddTokenRole(value);
        return this;
    }

    @Override
    public IdentityProviderRecord value9(Boolean value) {
        setTrustEmail(value);
        return this;
    }

    @Override
    public IdentityProviderRecord value10(String value) {
        setFirstBrokerLoginFlowId(value);
        return this;
    }

    @Override
    public IdentityProviderRecord value11(String value) {
        setPostBrokerLoginFlowId(value);
        return this;
    }

    @Override
    public IdentityProviderRecord value12(String value) {
        setProviderDisplayName(value);
        return this;
    }

    @Override
    public IdentityProviderRecord value13(Boolean value) {
        setLinkOnly(value);
        return this;
    }

    @Override
    public IdentityProviderRecord values(String value1, Boolean value2, String value3, String value4, Boolean value5, Boolean value6, String value7, Boolean value8, Boolean value9, String value10, String value11, String value12, Boolean value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IIdentityProvider from) {
        setInternalId(from.getInternalId());
        setEnabled(from.getEnabled());
        setProviderAlias(from.getProviderAlias());
        setProviderId(from.getProviderId());
        setStoreToken(from.getStoreToken());
        setAuthenticateByDefault(from.getAuthenticateByDefault());
        setRealmId(from.getRealmId());
        setAddTokenRole(from.getAddTokenRole());
        setTrustEmail(from.getTrustEmail());
        setFirstBrokerLoginFlowId(from.getFirstBrokerLoginFlowId());
        setPostBrokerLoginFlowId(from.getPostBrokerLoginFlowId());
        setProviderDisplayName(from.getProviderDisplayName());
        setLinkOnly(from.getLinkOnly());
    }

    @Override
    public <E extends IIdentityProvider> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IdentityProviderRecord
     */
    public IdentityProviderRecord() {
        super(IdentityProvider.IDENTITY_PROVIDER);
    }

    /**
     * Create a detached, initialised IdentityProviderRecord
     */
    public IdentityProviderRecord(String internalId, Boolean enabled, String providerAlias, String providerId, Boolean storeToken, Boolean authenticateByDefault, String realmId, Boolean addTokenRole, Boolean trustEmail, String firstBrokerLoginFlowId, String postBrokerLoginFlowId, String providerDisplayName, Boolean linkOnly) {
        super(IdentityProvider.IDENTITY_PROVIDER);

        set(0, internalId);
        set(1, enabled);
        set(2, providerAlias);
        set(3, providerId);
        set(4, storeToken);
        set(5, authenticateByDefault);
        set(6, realmId);
        set(7, addTokenRole);
        set(8, trustEmail);
        set(9, firstBrokerLoginFlowId);
        set(10, postBrokerLoginFlowId);
        set(11, providerDisplayName);
        set(12, linkOnly);
    }

    public IdentityProviderRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
