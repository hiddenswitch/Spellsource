/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;

import org.jooq.JSONB;


/**
 * a particular instance of a card desc, which may be referenced by a card
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ICardDesc extends VertxPojo, Serializable {

    /**
     * Setter for <code>spellsource.card_desc.id</code>.
     */
    public ICardDesc setId(Long value);

    /**
     * Getter for <code>spellsource.card_desc.id</code>.
     */
    public Long getId();

    /**
     * Setter for <code>spellsource.card_desc.uri</code>.
     */
    public ICardDesc setUri(String value);

    /**
     * Getter for <code>spellsource.card_desc.uri</code>.
     */
    public String getUri();

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public ICardDesc setBlocklyWorkspace(Object value);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getBlocklyWorkspace();

    /**
     * Setter for <code>spellsource.card_desc.card_script</code>.
     */
    public ICardDesc setCardScript(JSONB value);

    /**
     * Getter for <code>spellsource.card_desc.card_script</code>.
     */
    public JSONB getCardScript();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ICardDesc
     */
    public void from(ICardDesc from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ICardDesc
     */
    public <E extends ICardDesc> E into(E into);

    @Override
    public default ICardDesc fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setId(json.getLong("id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("id","java.lang.Long",e);
        }
        try {
            setUri(json.getString("uri"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("uri","java.lang.String",e);
        }
        try {
            // Omitting unrecognized type java.lang.Object for column blockly_workspace!
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("blockly_workspace","java.lang.Object",e);
        }
        try {
            // Omitting unrecognized type org.jooq.JSONB for column card_script!
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("card_script","org.jooq.JSONB",e);
        }
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("uri",getUri());
        // Omitting unrecognized type java.lang.Object for column blockly_workspace!
        // Omitting unrecognized type org.jooq.JSONB for column card_script!
        return json;
    }

}
