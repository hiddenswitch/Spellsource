/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables.records;


import com.hiddenswitch.framework.schema.tables.ClientScopeRoleMapping;
import com.hiddenswitch.framework.schema.tables.interfaces.IClientScopeRoleMapping;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientScopeRoleMappingRecord extends UpdatableRecordImpl<ClientScopeRoleMappingRecord> implements VertxPojo, Record2<String, String>, IClientScopeRoleMapping {

    private static final long serialVersionUID = -1881356343;

    /**
     * Setter for <code>public.client_scope_role_mapping.scope_id</code>.
     */
    @Override
    public ClientScopeRoleMappingRecord setScopeId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.client_scope_role_mapping.scope_id</code>.
     */
    @Override
    public String getScopeId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.client_scope_role_mapping.role_id</code>.
     */
    @Override
    public ClientScopeRoleMappingRecord setRoleId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.client_scope_role_mapping.role_id</code>.
     */
    @Override
    public String getRoleId() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ClientScopeRoleMapping.CLIENT_SCOPE_ROLE_MAPPING.SCOPE_ID;
    }

    @Override
    public Field<String> field2() {
        return ClientScopeRoleMapping.CLIENT_SCOPE_ROLE_MAPPING.ROLE_ID;
    }

    @Override
    public String component1() {
        return getScopeId();
    }

    @Override
    public String component2() {
        return getRoleId();
    }

    @Override
    public String value1() {
        return getScopeId();
    }

    @Override
    public String value2() {
        return getRoleId();
    }

    @Override
    public ClientScopeRoleMappingRecord value1(String value) {
        setScopeId(value);
        return this;
    }

    @Override
    public ClientScopeRoleMappingRecord value2(String value) {
        setRoleId(value);
        return this;
    }

    @Override
    public ClientScopeRoleMappingRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IClientScopeRoleMapping from) {
        setScopeId(from.getScopeId());
        setRoleId(from.getRoleId());
    }

    @Override
    public <E extends IClientScopeRoleMapping> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientScopeRoleMappingRecord
     */
    public ClientScopeRoleMappingRecord() {
        super(ClientScopeRoleMapping.CLIENT_SCOPE_ROLE_MAPPING);
    }

    /**
     * Create a detached, initialised ClientScopeRoleMappingRecord
     */
    public ClientScopeRoleMappingRecord(String scopeId, String roleId) {
        super(ClientScopeRoleMapping.CLIENT_SCOPE_ROLE_MAPPING);

        set(0, scopeId);
        set(1, roleId);
    }

    public ClientScopeRoleMappingRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
