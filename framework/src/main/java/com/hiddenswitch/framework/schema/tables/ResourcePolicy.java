/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables;


import com.hiddenswitch.framework.schema.Indexes;
import com.hiddenswitch.framework.schema.Keys;
import com.hiddenswitch.framework.schema.Public;
import com.hiddenswitch.framework.schema.tables.records.ResourcePolicyRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourcePolicy extends TableImpl<ResourcePolicyRecord> {

    private static final long serialVersionUID = 550812435;

    /**
     * The reference instance of <code>public.resource_policy</code>
     */
    public static final ResourcePolicy RESOURCE_POLICY = new ResourcePolicy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourcePolicyRecord> getRecordType() {
        return ResourcePolicyRecord.class;
    }

    /**
     * The column <code>public.resource_policy.resource_id</code>.
     */
    public final TableField<ResourcePolicyRecord, String> RESOURCE_ID = createField(DSL.name("resource_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.resource_policy.policy_id</code>.
     */
    public final TableField<ResourcePolicyRecord, String> POLICY_ID = createField(DSL.name("policy_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * Create a <code>public.resource_policy</code> table reference
     */
    public ResourcePolicy() {
        this(DSL.name("resource_policy"), null);
    }

    /**
     * Create an aliased <code>public.resource_policy</code> table reference
     */
    public ResourcePolicy(String alias) {
        this(DSL.name(alias), RESOURCE_POLICY);
    }

    /**
     * Create an aliased <code>public.resource_policy</code> table reference
     */
    public ResourcePolicy(Name alias) {
        this(alias, RESOURCE_POLICY);
    }

    private ResourcePolicy(Name alias, Table<ResourcePolicyRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResourcePolicy(Name alias, Table<ResourcePolicyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ResourcePolicy(Table<O> child, ForeignKey<O, ResourcePolicyRecord> key) {
        super(child, key, RESOURCE_POLICY);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_RES_POLICY_POLICY);
    }

    @Override
    public UniqueKey<ResourcePolicyRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_FARSRPP;
    }

    @Override
    public List<UniqueKey<ResourcePolicyRecord>> getKeys() {
        return Arrays.<UniqueKey<ResourcePolicyRecord>>asList(Keys.CONSTRAINT_FARSRPP);
    }

    @Override
    public List<ForeignKey<ResourcePolicyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ResourcePolicyRecord, ?>>asList(Keys.RESOURCE_POLICY__FK_FRSRPOS53XCX4WNKOG82SSRFY, Keys.RESOURCE_POLICY__FK_FRSRPP213XCX4WNKOG82SSRFY);
    }

    public ResourceServerResource resourceServerResource() {
        return new ResourceServerResource(this, Keys.RESOURCE_POLICY__FK_FRSRPOS53XCX4WNKOG82SSRFY);
    }

    public ResourceServerPolicy resourceServerPolicy() {
        return new ResourceServerPolicy(this, Keys.RESOURCE_POLICY__FK_FRSRPP213XCX4WNKOG82SSRFY);
    }

    @Override
    public ResourcePolicy as(String alias) {
        return new ResourcePolicy(DSL.name(alias), this);
    }

    @Override
    public ResourcePolicy as(Name alias) {
        return new ResourcePolicy(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourcePolicy rename(String name) {
        return new ResourcePolicy(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourcePolicy rename(Name name) {
        return new ResourcePolicy(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
