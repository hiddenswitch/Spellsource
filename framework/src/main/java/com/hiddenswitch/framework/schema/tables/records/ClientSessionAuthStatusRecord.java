/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables.records;


import com.hiddenswitch.framework.schema.tables.ClientSessionAuthStatus;
import com.hiddenswitch.framework.schema.tables.interfaces.IClientSessionAuthStatus;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientSessionAuthStatusRecord extends UpdatableRecordImpl<ClientSessionAuthStatusRecord> implements VertxPojo, Record3<String, Integer, String>, IClientSessionAuthStatus {

    private static final long serialVersionUID = -1490794323;

    /**
     * Setter for <code>public.client_session_auth_status.authenticator</code>.
     */
    @Override
    public ClientSessionAuthStatusRecord setAuthenticator(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.client_session_auth_status.authenticator</code>.
     */
    @Override
    public String getAuthenticator() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.client_session_auth_status.status</code>.
     */
    @Override
    public ClientSessionAuthStatusRecord setStatus(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.client_session_auth_status.status</code>.
     */
    @Override
    public Integer getStatus() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.client_session_auth_status.client_session</code>.
     */
    @Override
    public ClientSessionAuthStatusRecord setClientSession(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.client_session_auth_status.client_session</code>.
     */
    @Override
    public String getClientSession() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ClientSessionAuthStatus.CLIENT_SESSION_AUTH_STATUS.AUTHENTICATOR;
    }

    @Override
    public Field<Integer> field2() {
        return ClientSessionAuthStatus.CLIENT_SESSION_AUTH_STATUS.STATUS;
    }

    @Override
    public Field<String> field3() {
        return ClientSessionAuthStatus.CLIENT_SESSION_AUTH_STATUS.CLIENT_SESSION;
    }

    @Override
    public String component1() {
        return getAuthenticator();
    }

    @Override
    public Integer component2() {
        return getStatus();
    }

    @Override
    public String component3() {
        return getClientSession();
    }

    @Override
    public String value1() {
        return getAuthenticator();
    }

    @Override
    public Integer value2() {
        return getStatus();
    }

    @Override
    public String value3() {
        return getClientSession();
    }

    @Override
    public ClientSessionAuthStatusRecord value1(String value) {
        setAuthenticator(value);
        return this;
    }

    @Override
    public ClientSessionAuthStatusRecord value2(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public ClientSessionAuthStatusRecord value3(String value) {
        setClientSession(value);
        return this;
    }

    @Override
    public ClientSessionAuthStatusRecord values(String value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IClientSessionAuthStatus from) {
        setAuthenticator(from.getAuthenticator());
        setStatus(from.getStatus());
        setClientSession(from.getClientSession());
    }

    @Override
    public <E extends IClientSessionAuthStatus> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientSessionAuthStatusRecord
     */
    public ClientSessionAuthStatusRecord() {
        super(ClientSessionAuthStatus.CLIENT_SESSION_AUTH_STATUS);
    }

    /**
     * Create a detached, initialised ClientSessionAuthStatusRecord
     */
    public ClientSessionAuthStatusRecord(String authenticator, Integer status, String clientSession) {
        super(ClientSessionAuthStatus.CLIENT_SESSION_AUTH_STATUS);

        set(0, authenticator);
        set(1, status);
        set(2, clientSession);
    }

    public ClientSessionAuthStatusRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
