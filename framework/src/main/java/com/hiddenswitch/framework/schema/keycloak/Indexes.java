/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak;


import com.hiddenswitch.framework.schema.keycloak.tables.AssociatedPolicy;
import com.hiddenswitch.framework.schema.keycloak.tables.AuthenticationExecution;
import com.hiddenswitch.framework.schema.keycloak.tables.AuthenticationFlow;
import com.hiddenswitch.framework.schema.keycloak.tables.AuthenticatorConfig;
import com.hiddenswitch.framework.schema.keycloak.tables.Client;
import com.hiddenswitch.framework.schema.keycloak.tables.ClientDefaultRoles;
import com.hiddenswitch.framework.schema.keycloak.tables.ClientInitialAccess;
import com.hiddenswitch.framework.schema.keycloak.tables.ClientSession;
import com.hiddenswitch.framework.schema.keycloak.tables.Component;
import com.hiddenswitch.framework.schema.keycloak.tables.ComponentConfig;
import com.hiddenswitch.framework.schema.keycloak.tables.CompositeRole;
import com.hiddenswitch.framework.schema.keycloak.tables.Credential;
import com.hiddenswitch.framework.schema.keycloak.tables.EventEntity;
import com.hiddenswitch.framework.schema.keycloak.tables.FedUserAttribute;
import com.hiddenswitch.framework.schema.keycloak.tables.FedUserConsent;
import com.hiddenswitch.framework.schema.keycloak.tables.FedUserCredential;
import com.hiddenswitch.framework.schema.keycloak.tables.FedUserGroupMembership;
import com.hiddenswitch.framework.schema.keycloak.tables.FedUserRequiredAction;
import com.hiddenswitch.framework.schema.keycloak.tables.FedUserRoleMapping;
import com.hiddenswitch.framework.schema.keycloak.tables.FederatedIdentity;
import com.hiddenswitch.framework.schema.keycloak.tables.GroupAttribute;
import com.hiddenswitch.framework.schema.keycloak.tables.GroupRoleMapping;
import com.hiddenswitch.framework.schema.keycloak.tables.IdentityProvider;
import com.hiddenswitch.framework.schema.keycloak.tables.IdentityProviderMapper;
import com.hiddenswitch.framework.schema.keycloak.tables.KeycloakRole;
import com.hiddenswitch.framework.schema.keycloak.tables.OfflineClientSession;
import com.hiddenswitch.framework.schema.keycloak.tables.ProtocolMapper;
import com.hiddenswitch.framework.schema.keycloak.tables.Realm;
import com.hiddenswitch.framework.schema.keycloak.tables.RealmAttribute;
import com.hiddenswitch.framework.schema.keycloak.tables.RealmDefaultGroups;
import com.hiddenswitch.framework.schema.keycloak.tables.RealmDefaultRoles;
import com.hiddenswitch.framework.schema.keycloak.tables.RealmEnabledEventTypes;
import com.hiddenswitch.framework.schema.keycloak.tables.RealmEventsListeners;
import com.hiddenswitch.framework.schema.keycloak.tables.RealmSupportedLocales;
import com.hiddenswitch.framework.schema.keycloak.tables.RedirectUris;
import com.hiddenswitch.framework.schema.keycloak.tables.RequiredActionProvider;
import com.hiddenswitch.framework.schema.keycloak.tables.ResourcePolicy;
import com.hiddenswitch.framework.schema.keycloak.tables.ResourceScope;
import com.hiddenswitch.framework.schema.keycloak.tables.ResourceServerPolicy;
import com.hiddenswitch.framework.schema.keycloak.tables.ResourceServerResource;
import com.hiddenswitch.framework.schema.keycloak.tables.ResourceServerScope;
import com.hiddenswitch.framework.schema.keycloak.tables.ScopeMapping;
import com.hiddenswitch.framework.schema.keycloak.tables.ScopePolicy;
import com.hiddenswitch.framework.schema.keycloak.tables.UserAttribute;
import com.hiddenswitch.framework.schema.keycloak.tables.UserConsent;
import com.hiddenswitch.framework.schema.keycloak.tables.UserEntity;
import com.hiddenswitch.framework.schema.keycloak.tables.UserFederationMapper;
import com.hiddenswitch.framework.schema.keycloak.tables.UserFederationProvider;
import com.hiddenswitch.framework.schema.keycloak.tables.UserGroupMembership;
import com.hiddenswitch.framework.schema.keycloak.tables.UserRequiredAction;
import com.hiddenswitch.framework.schema.keycloak.tables.UserRoleMapping;
import com.hiddenswitch.framework.schema.keycloak.tables.WebOrigins;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>keycloak</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index IDX_ASSOC_POL_ASSOC_POL_ID = Indexes0.IDX_ASSOC_POL_ASSOC_POL_ID;
    public static final Index IDX_AUTH_CONFIG_REALM = Indexes0.IDX_AUTH_CONFIG_REALM;
    public static final Index IDX_AUTH_EXEC_FLOW = Indexes0.IDX_AUTH_EXEC_FLOW;
    public static final Index IDX_AUTH_EXEC_REALM_FLOW = Indexes0.IDX_AUTH_EXEC_REALM_FLOW;
    public static final Index IDX_AUTH_FLOW_REALM = Indexes0.IDX_AUTH_FLOW_REALM;
    public static final Index IDX_CLIENT_DEF_ROLES_CLIENT = Indexes0.IDX_CLIENT_DEF_ROLES_CLIENT;
    public static final Index IDX_CLIENT_ID = Indexes0.IDX_CLIENT_ID;
    public static final Index IDX_CLIENT_INIT_ACC_REALM = Indexes0.IDX_CLIENT_INIT_ACC_REALM;
    public static final Index IDX_CLIENT_SESSION_SESSION = Indexes0.IDX_CLIENT_SESSION_SESSION;
    public static final Index IDX_CLSCOPE_PROTMAP = Indexes0.IDX_CLSCOPE_PROTMAP;
    public static final Index IDX_COMPO_CONFIG_COMPO = Indexes0.IDX_COMPO_CONFIG_COMPO;
    public static final Index IDX_COMPONENT_PROVIDER_TYPE = Indexes0.IDX_COMPONENT_PROVIDER_TYPE;
    public static final Index IDX_COMPONENT_REALM = Indexes0.IDX_COMPONENT_REALM;
    public static final Index IDX_COMPOSITE = Indexes0.IDX_COMPOSITE;
    public static final Index IDX_COMPOSITE_CHILD = Indexes0.IDX_COMPOSITE_CHILD;
    public static final Index IDX_EVENT_TIME = Indexes0.IDX_EVENT_TIME;
    public static final Index IDX_FEDIDENTITY_FEDUSER = Indexes0.IDX_FEDIDENTITY_FEDUSER;
    public static final Index IDX_FEDIDENTITY_USER = Indexes0.IDX_FEDIDENTITY_USER;
    public static final Index IDX_FU_ATTRIBUTE = Indexes0.IDX_FU_ATTRIBUTE;
    public static final Index IDX_FU_CNSNT_EXT = Indexes0.IDX_FU_CNSNT_EXT;
    public static final Index IDX_FU_CONSENT = Indexes0.IDX_FU_CONSENT;
    public static final Index IDX_FU_CONSENT_RU = Indexes0.IDX_FU_CONSENT_RU;
    public static final Index IDX_FU_CREDENTIAL = Indexes0.IDX_FU_CREDENTIAL;
    public static final Index IDX_FU_CREDENTIAL_RU = Indexes0.IDX_FU_CREDENTIAL_RU;
    public static final Index IDX_FU_GROUP_MEMBERSHIP = Indexes0.IDX_FU_GROUP_MEMBERSHIP;
    public static final Index IDX_FU_GROUP_MEMBERSHIP_RU = Indexes0.IDX_FU_GROUP_MEMBERSHIP_RU;
    public static final Index IDX_FU_REQUIRED_ACTION = Indexes0.IDX_FU_REQUIRED_ACTION;
    public static final Index IDX_FU_REQUIRED_ACTION_RU = Indexes0.IDX_FU_REQUIRED_ACTION_RU;
    public static final Index IDX_FU_ROLE_MAPPING = Indexes0.IDX_FU_ROLE_MAPPING;
    public static final Index IDX_FU_ROLE_MAPPING_RU = Indexes0.IDX_FU_ROLE_MAPPING_RU;
    public static final Index IDX_GROUP_ATTR_GROUP = Indexes0.IDX_GROUP_ATTR_GROUP;
    public static final Index IDX_GROUP_ROLE_MAPP_GROUP = Indexes0.IDX_GROUP_ROLE_MAPP_GROUP;
    public static final Index IDX_ID_PROV_MAPP_REALM = Indexes0.IDX_ID_PROV_MAPP_REALM;
    public static final Index IDX_IDENT_PROV_REALM = Indexes0.IDX_IDENT_PROV_REALM;
    public static final Index IDX_KEYCLOAK_ROLE_CLIENT = Indexes0.IDX_KEYCLOAK_ROLE_CLIENT;
    public static final Index IDX_KEYCLOAK_ROLE_REALM = Indexes0.IDX_KEYCLOAK_ROLE_REALM;
    public static final Index IDX_PROTOCOL_MAPPER_CLIENT = Indexes0.IDX_PROTOCOL_MAPPER_CLIENT;
    public static final Index IDX_REALM_ATTR_REALM = Indexes0.IDX_REALM_ATTR_REALM;
    public static final Index IDX_REALM_DEF_GRP_REALM = Indexes0.IDX_REALM_DEF_GRP_REALM;
    public static final Index IDX_REALM_DEF_ROLES_REALM = Indexes0.IDX_REALM_DEF_ROLES_REALM;
    public static final Index IDX_REALM_EVT_LIST_REALM = Indexes0.IDX_REALM_EVT_LIST_REALM;
    public static final Index IDX_REALM_EVT_TYPES_REALM = Indexes0.IDX_REALM_EVT_TYPES_REALM;
    public static final Index IDX_REALM_MASTER_ADM_CLI = Indexes0.IDX_REALM_MASTER_ADM_CLI;
    public static final Index IDX_REALM_SUPP_LOCAL_REALM = Indexes0.IDX_REALM_SUPP_LOCAL_REALM;
    public static final Index IDX_REDIR_URI_CLIENT = Indexes0.IDX_REDIR_URI_CLIENT;
    public static final Index IDX_REQ_ACT_PROV_REALM = Indexes0.IDX_REQ_ACT_PROV_REALM;
    public static final Index IDX_RES_POLICY_POLICY = Indexes0.IDX_RES_POLICY_POLICY;
    public static final Index IDX_RES_SCOPE_SCOPE = Indexes0.IDX_RES_SCOPE_SCOPE;
    public static final Index IDX_RES_SERV_POL_RES_SERV = Indexes0.IDX_RES_SERV_POL_RES_SERV;
    public static final Index IDX_RES_SRV_RES_RES_SRV = Indexes0.IDX_RES_SRV_RES_RES_SRV;
    public static final Index IDX_RES_SRV_SCOPE_RES_SRV = Indexes0.IDX_RES_SRV_SCOPE_RES_SRV;
    public static final Index IDX_SCOPE_MAPPING_ROLE = Indexes0.IDX_SCOPE_MAPPING_ROLE;
    public static final Index IDX_SCOPE_POLICY_POLICY = Indexes0.IDX_SCOPE_POLICY_POLICY;
    public static final Index IDX_US_SESS_ID_ON_CL_SESS = Indexes0.IDX_US_SESS_ID_ON_CL_SESS;
    public static final Index IDX_USER_ATTRIBUTE = Indexes0.IDX_USER_ATTRIBUTE;
    public static final Index IDX_USER_CONSENT = Indexes0.IDX_USER_CONSENT;
    public static final Index IDX_USER_CREDENTIAL = Indexes0.IDX_USER_CREDENTIAL;
    public static final Index IDX_USER_EMAIL = Indexes0.IDX_USER_EMAIL;
    public static final Index IDX_USER_GROUP_MAPPING = Indexes0.IDX_USER_GROUP_MAPPING;
    public static final Index IDX_USER_REQACTIONS = Indexes0.IDX_USER_REQACTIONS;
    public static final Index IDX_USER_ROLE_MAPPING = Indexes0.IDX_USER_ROLE_MAPPING;
    public static final Index IDX_USR_FED_MAP_FED_PRV = Indexes0.IDX_USR_FED_MAP_FED_PRV;
    public static final Index IDX_USR_FED_MAP_REALM = Indexes0.IDX_USR_FED_MAP_REALM;
    public static final Index IDX_USR_FED_PRV_REALM = Indexes0.IDX_USR_FED_PRV_REALM;
    public static final Index IDX_WEB_ORIG_CLIENT = Indexes0.IDX_WEB_ORIG_CLIENT;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index IDX_ASSOC_POL_ASSOC_POL_ID = Internal.createIndex("idx_assoc_pol_assoc_pol_id", AssociatedPolicy.ASSOCIATED_POLICY, new OrderField[] { AssociatedPolicy.ASSOCIATED_POLICY.ASSOCIATED_POLICY_ID }, false);
        public static Index IDX_AUTH_CONFIG_REALM = Internal.createIndex("idx_auth_config_realm", AuthenticatorConfig.AUTHENTICATOR_CONFIG, new OrderField[] { AuthenticatorConfig.AUTHENTICATOR_CONFIG.REALM_ID }, false);
        public static Index IDX_AUTH_EXEC_FLOW = Internal.createIndex("idx_auth_exec_flow", AuthenticationExecution.AUTHENTICATION_EXECUTION, new OrderField[] { AuthenticationExecution.AUTHENTICATION_EXECUTION.FLOW_ID }, false);
        public static Index IDX_AUTH_EXEC_REALM_FLOW = Internal.createIndex("idx_auth_exec_realm_flow", AuthenticationExecution.AUTHENTICATION_EXECUTION, new OrderField[] { AuthenticationExecution.AUTHENTICATION_EXECUTION.REALM_ID, AuthenticationExecution.AUTHENTICATION_EXECUTION.FLOW_ID }, false);
        public static Index IDX_AUTH_FLOW_REALM = Internal.createIndex("idx_auth_flow_realm", AuthenticationFlow.AUTHENTICATION_FLOW, new OrderField[] { AuthenticationFlow.AUTHENTICATION_FLOW.REALM_ID }, false);
        public static Index IDX_CLIENT_DEF_ROLES_CLIENT = Internal.createIndex("idx_client_def_roles_client", ClientDefaultRoles.CLIENT_DEFAULT_ROLES, new OrderField[] { ClientDefaultRoles.CLIENT_DEFAULT_ROLES.CLIENT_ID }, false);
        public static Index IDX_CLIENT_ID = Internal.createIndex("idx_client_id", Client.CLIENT, new OrderField[] { Client.CLIENT.CLIENT_ID }, false);
        public static Index IDX_CLIENT_INIT_ACC_REALM = Internal.createIndex("idx_client_init_acc_realm", ClientInitialAccess.CLIENT_INITIAL_ACCESS, new OrderField[] { ClientInitialAccess.CLIENT_INITIAL_ACCESS.REALM_ID }, false);
        public static Index IDX_CLIENT_SESSION_SESSION = Internal.createIndex("idx_client_session_session", ClientSession.CLIENT_SESSION, new OrderField[] { ClientSession.CLIENT_SESSION.SESSION_ID }, false);
        public static Index IDX_CLSCOPE_PROTMAP = Internal.createIndex("idx_clscope_protmap", ProtocolMapper.PROTOCOL_MAPPER, new OrderField[] { ProtocolMapper.PROTOCOL_MAPPER.CLIENT_SCOPE_ID }, false);
        public static Index IDX_COMPO_CONFIG_COMPO = Internal.createIndex("idx_compo_config_compo", ComponentConfig.COMPONENT_CONFIG, new OrderField[] { ComponentConfig.COMPONENT_CONFIG.COMPONENT_ID }, false);
        public static Index IDX_COMPONENT_PROVIDER_TYPE = Internal.createIndex("idx_component_provider_type", Component.COMPONENT, new OrderField[] { Component.COMPONENT.PROVIDER_TYPE }, false);
        public static Index IDX_COMPONENT_REALM = Internal.createIndex("idx_component_realm", Component.COMPONENT, new OrderField[] { Component.COMPONENT.REALM_ID }, false);
        public static Index IDX_COMPOSITE = Internal.createIndex("idx_composite", CompositeRole.COMPOSITE_ROLE, new OrderField[] { CompositeRole.COMPOSITE_ROLE.COMPOSITE }, false);
        public static Index IDX_COMPOSITE_CHILD = Internal.createIndex("idx_composite_child", CompositeRole.COMPOSITE_ROLE, new OrderField[] { CompositeRole.COMPOSITE_ROLE.CHILD_ROLE }, false);
        public static Index IDX_EVENT_TIME = Internal.createIndex("idx_event_time", EventEntity.EVENT_ENTITY, new OrderField[] { EventEntity.EVENT_ENTITY.REALM_ID, EventEntity.EVENT_ENTITY.EVENT_TIME }, false);
        public static Index IDX_FEDIDENTITY_FEDUSER = Internal.createIndex("idx_fedidentity_feduser", FederatedIdentity.FEDERATED_IDENTITY, new OrderField[] { FederatedIdentity.FEDERATED_IDENTITY.FEDERATED_USER_ID }, false);
        public static Index IDX_FEDIDENTITY_USER = Internal.createIndex("idx_fedidentity_user", FederatedIdentity.FEDERATED_IDENTITY, new OrderField[] { FederatedIdentity.FEDERATED_IDENTITY.USER_ID }, false);
        public static Index IDX_FU_ATTRIBUTE = Internal.createIndex("idx_fu_attribute", FedUserAttribute.FED_USER_ATTRIBUTE, new OrderField[] { FedUserAttribute.FED_USER_ATTRIBUTE.USER_ID, FedUserAttribute.FED_USER_ATTRIBUTE.REALM_ID, FedUserAttribute.FED_USER_ATTRIBUTE.NAME }, false);
        public static Index IDX_FU_CNSNT_EXT = Internal.createIndex("idx_fu_cnsnt_ext", FedUserConsent.FED_USER_CONSENT, new OrderField[] { FedUserConsent.FED_USER_CONSENT.USER_ID, FedUserConsent.FED_USER_CONSENT.CLIENT_STORAGE_PROVIDER, FedUserConsent.FED_USER_CONSENT.EXTERNAL_CLIENT_ID }, false);
        public static Index IDX_FU_CONSENT = Internal.createIndex("idx_fu_consent", FedUserConsent.FED_USER_CONSENT, new OrderField[] { FedUserConsent.FED_USER_CONSENT.USER_ID, FedUserConsent.FED_USER_CONSENT.CLIENT_ID }, false);
        public static Index IDX_FU_CONSENT_RU = Internal.createIndex("idx_fu_consent_ru", FedUserConsent.FED_USER_CONSENT, new OrderField[] { FedUserConsent.FED_USER_CONSENT.REALM_ID, FedUserConsent.FED_USER_CONSENT.USER_ID }, false);
        public static Index IDX_FU_CREDENTIAL = Internal.createIndex("idx_fu_credential", FedUserCredential.FED_USER_CREDENTIAL, new OrderField[] { FedUserCredential.FED_USER_CREDENTIAL.USER_ID, FedUserCredential.FED_USER_CREDENTIAL.TYPE }, false);
        public static Index IDX_FU_CREDENTIAL_RU = Internal.createIndex("idx_fu_credential_ru", FedUserCredential.FED_USER_CREDENTIAL, new OrderField[] { FedUserCredential.FED_USER_CREDENTIAL.REALM_ID, FedUserCredential.FED_USER_CREDENTIAL.USER_ID }, false);
        public static Index IDX_FU_GROUP_MEMBERSHIP = Internal.createIndex("idx_fu_group_membership", FedUserGroupMembership.FED_USER_GROUP_MEMBERSHIP, new OrderField[] { FedUserGroupMembership.FED_USER_GROUP_MEMBERSHIP.USER_ID, FedUserGroupMembership.FED_USER_GROUP_MEMBERSHIP.GROUP_ID }, false);
        public static Index IDX_FU_GROUP_MEMBERSHIP_RU = Internal.createIndex("idx_fu_group_membership_ru", FedUserGroupMembership.FED_USER_GROUP_MEMBERSHIP, new OrderField[] { FedUserGroupMembership.FED_USER_GROUP_MEMBERSHIP.REALM_ID, FedUserGroupMembership.FED_USER_GROUP_MEMBERSHIP.USER_ID }, false);
        public static Index IDX_FU_REQUIRED_ACTION = Internal.createIndex("idx_fu_required_action", FedUserRequiredAction.FED_USER_REQUIRED_ACTION, new OrderField[] { FedUserRequiredAction.FED_USER_REQUIRED_ACTION.USER_ID, FedUserRequiredAction.FED_USER_REQUIRED_ACTION.REQUIRED_ACTION }, false);
        public static Index IDX_FU_REQUIRED_ACTION_RU = Internal.createIndex("idx_fu_required_action_ru", FedUserRequiredAction.FED_USER_REQUIRED_ACTION, new OrderField[] { FedUserRequiredAction.FED_USER_REQUIRED_ACTION.REALM_ID, FedUserRequiredAction.FED_USER_REQUIRED_ACTION.USER_ID }, false);
        public static Index IDX_FU_ROLE_MAPPING = Internal.createIndex("idx_fu_role_mapping", FedUserRoleMapping.FED_USER_ROLE_MAPPING, new OrderField[] { FedUserRoleMapping.FED_USER_ROLE_MAPPING.USER_ID, FedUserRoleMapping.FED_USER_ROLE_MAPPING.ROLE_ID }, false);
        public static Index IDX_FU_ROLE_MAPPING_RU = Internal.createIndex("idx_fu_role_mapping_ru", FedUserRoleMapping.FED_USER_ROLE_MAPPING, new OrderField[] { FedUserRoleMapping.FED_USER_ROLE_MAPPING.REALM_ID, FedUserRoleMapping.FED_USER_ROLE_MAPPING.USER_ID }, false);
        public static Index IDX_GROUP_ATTR_GROUP = Internal.createIndex("idx_group_attr_group", GroupAttribute.GROUP_ATTRIBUTE, new OrderField[] { GroupAttribute.GROUP_ATTRIBUTE.GROUP_ID }, false);
        public static Index IDX_GROUP_ROLE_MAPP_GROUP = Internal.createIndex("idx_group_role_mapp_group", GroupRoleMapping.GROUP_ROLE_MAPPING, new OrderField[] { GroupRoleMapping.GROUP_ROLE_MAPPING.GROUP_ID }, false);
        public static Index IDX_ID_PROV_MAPP_REALM = Internal.createIndex("idx_id_prov_mapp_realm", IdentityProviderMapper.IDENTITY_PROVIDER_MAPPER, new OrderField[] { IdentityProviderMapper.IDENTITY_PROVIDER_MAPPER.REALM_ID }, false);
        public static Index IDX_IDENT_PROV_REALM = Internal.createIndex("idx_ident_prov_realm", IdentityProvider.IDENTITY_PROVIDER, new OrderField[] { IdentityProvider.IDENTITY_PROVIDER.REALM_ID }, false);
        public static Index IDX_KEYCLOAK_ROLE_CLIENT = Internal.createIndex("idx_keycloak_role_client", KeycloakRole.KEYCLOAK_ROLE, new OrderField[] { KeycloakRole.KEYCLOAK_ROLE.CLIENT }, false);
        public static Index IDX_KEYCLOAK_ROLE_REALM = Internal.createIndex("idx_keycloak_role_realm", KeycloakRole.KEYCLOAK_ROLE, new OrderField[] { KeycloakRole.KEYCLOAK_ROLE.REALM }, false);
        public static Index IDX_PROTOCOL_MAPPER_CLIENT = Internal.createIndex("idx_protocol_mapper_client", ProtocolMapper.PROTOCOL_MAPPER, new OrderField[] { ProtocolMapper.PROTOCOL_MAPPER.CLIENT_ID }, false);
        public static Index IDX_REALM_ATTR_REALM = Internal.createIndex("idx_realm_attr_realm", RealmAttribute.REALM_ATTRIBUTE, new OrderField[] { RealmAttribute.REALM_ATTRIBUTE.REALM_ID }, false);
        public static Index IDX_REALM_DEF_GRP_REALM = Internal.createIndex("idx_realm_def_grp_realm", RealmDefaultGroups.REALM_DEFAULT_GROUPS, new OrderField[] { RealmDefaultGroups.REALM_DEFAULT_GROUPS.REALM_ID }, false);
        public static Index IDX_REALM_DEF_ROLES_REALM = Internal.createIndex("idx_realm_def_roles_realm", RealmDefaultRoles.REALM_DEFAULT_ROLES, new OrderField[] { RealmDefaultRoles.REALM_DEFAULT_ROLES.REALM_ID }, false);
        public static Index IDX_REALM_EVT_LIST_REALM = Internal.createIndex("idx_realm_evt_list_realm", RealmEventsListeners.REALM_EVENTS_LISTENERS, new OrderField[] { RealmEventsListeners.REALM_EVENTS_LISTENERS.REALM_ID }, false);
        public static Index IDX_REALM_EVT_TYPES_REALM = Internal.createIndex("idx_realm_evt_types_realm", RealmEnabledEventTypes.REALM_ENABLED_EVENT_TYPES, new OrderField[] { RealmEnabledEventTypes.REALM_ENABLED_EVENT_TYPES.REALM_ID }, false);
        public static Index IDX_REALM_MASTER_ADM_CLI = Internal.createIndex("idx_realm_master_adm_cli", Realm.REALM, new OrderField[] { Realm.REALM.MASTER_ADMIN_CLIENT }, false);
        public static Index IDX_REALM_SUPP_LOCAL_REALM = Internal.createIndex("idx_realm_supp_local_realm", RealmSupportedLocales.REALM_SUPPORTED_LOCALES, new OrderField[] { RealmSupportedLocales.REALM_SUPPORTED_LOCALES.REALM_ID }, false);
        public static Index IDX_REDIR_URI_CLIENT = Internal.createIndex("idx_redir_uri_client", RedirectUris.REDIRECT_URIS, new OrderField[] { RedirectUris.REDIRECT_URIS.CLIENT_ID }, false);
        public static Index IDX_REQ_ACT_PROV_REALM = Internal.createIndex("idx_req_act_prov_realm", RequiredActionProvider.REQUIRED_ACTION_PROVIDER, new OrderField[] { RequiredActionProvider.REQUIRED_ACTION_PROVIDER.REALM_ID }, false);
        public static Index IDX_RES_POLICY_POLICY = Internal.createIndex("idx_res_policy_policy", ResourcePolicy.RESOURCE_POLICY, new OrderField[] { ResourcePolicy.RESOURCE_POLICY.POLICY_ID }, false);
        public static Index IDX_RES_SCOPE_SCOPE = Internal.createIndex("idx_res_scope_scope", ResourceScope.RESOURCE_SCOPE, new OrderField[] { ResourceScope.RESOURCE_SCOPE.SCOPE_ID }, false);
        public static Index IDX_RES_SERV_POL_RES_SERV = Internal.createIndex("idx_res_serv_pol_res_serv", ResourceServerPolicy.RESOURCE_SERVER_POLICY, new OrderField[] { ResourceServerPolicy.RESOURCE_SERVER_POLICY.RESOURCE_SERVER_ID }, false);
        public static Index IDX_RES_SRV_RES_RES_SRV = Internal.createIndex("idx_res_srv_res_res_srv", ResourceServerResource.RESOURCE_SERVER_RESOURCE, new OrderField[] { ResourceServerResource.RESOURCE_SERVER_RESOURCE.RESOURCE_SERVER_ID }, false);
        public static Index IDX_RES_SRV_SCOPE_RES_SRV = Internal.createIndex("idx_res_srv_scope_res_srv", ResourceServerScope.RESOURCE_SERVER_SCOPE, new OrderField[] { ResourceServerScope.RESOURCE_SERVER_SCOPE.RESOURCE_SERVER_ID }, false);
        public static Index IDX_SCOPE_MAPPING_ROLE = Internal.createIndex("idx_scope_mapping_role", ScopeMapping.SCOPE_MAPPING, new OrderField[] { ScopeMapping.SCOPE_MAPPING.ROLE_ID }, false);
        public static Index IDX_SCOPE_POLICY_POLICY = Internal.createIndex("idx_scope_policy_policy", ScopePolicy.SCOPE_POLICY, new OrderField[] { ScopePolicy.SCOPE_POLICY.POLICY_ID }, false);
        public static Index IDX_US_SESS_ID_ON_CL_SESS = Internal.createIndex("idx_us_sess_id_on_cl_sess", OfflineClientSession.OFFLINE_CLIENT_SESSION, new OrderField[] { OfflineClientSession.OFFLINE_CLIENT_SESSION.USER_SESSION_ID }, false);
        public static Index IDX_USER_ATTRIBUTE = Internal.createIndex("idx_user_attribute", UserAttribute.USER_ATTRIBUTE, new OrderField[] { UserAttribute.USER_ATTRIBUTE.USER_ID }, false);
        public static Index IDX_USER_CONSENT = Internal.createIndex("idx_user_consent", UserConsent.USER_CONSENT, new OrderField[] { UserConsent.USER_CONSENT.USER_ID }, false);
        public static Index IDX_USER_CREDENTIAL = Internal.createIndex("idx_user_credential", Credential.CREDENTIAL, new OrderField[] { Credential.CREDENTIAL.USER_ID }, false);
        public static Index IDX_USER_EMAIL = Internal.createIndex("idx_user_email", UserEntity.USER_ENTITY, new OrderField[] { UserEntity.USER_ENTITY.EMAIL }, false);
        public static Index IDX_USER_GROUP_MAPPING = Internal.createIndex("idx_user_group_mapping", UserGroupMembership.USER_GROUP_MEMBERSHIP, new OrderField[] { UserGroupMembership.USER_GROUP_MEMBERSHIP.USER_ID }, false);
        public static Index IDX_USER_REQACTIONS = Internal.createIndex("idx_user_reqactions", UserRequiredAction.USER_REQUIRED_ACTION, new OrderField[] { UserRequiredAction.USER_REQUIRED_ACTION.USER_ID }, false);
        public static Index IDX_USER_ROLE_MAPPING = Internal.createIndex("idx_user_role_mapping", UserRoleMapping.USER_ROLE_MAPPING, new OrderField[] { UserRoleMapping.USER_ROLE_MAPPING.USER_ID }, false);
        public static Index IDX_USR_FED_MAP_FED_PRV = Internal.createIndex("idx_usr_fed_map_fed_prv", UserFederationMapper.USER_FEDERATION_MAPPER, new OrderField[] { UserFederationMapper.USER_FEDERATION_MAPPER.FEDERATION_PROVIDER_ID }, false);
        public static Index IDX_USR_FED_MAP_REALM = Internal.createIndex("idx_usr_fed_map_realm", UserFederationMapper.USER_FEDERATION_MAPPER, new OrderField[] { UserFederationMapper.USER_FEDERATION_MAPPER.REALM_ID }, false);
        public static Index IDX_USR_FED_PRV_REALM = Internal.createIndex("idx_usr_fed_prv_realm", UserFederationProvider.USER_FEDERATION_PROVIDER, new OrderField[] { UserFederationProvider.USER_FEDERATION_PROVIDER.REALM_ID }, false);
        public static Index IDX_WEB_ORIG_CLIENT = Internal.createIndex("idx_web_orig_client", WebOrigins.WEB_ORIGINS, new OrderField[] { WebOrigins.WEB_ORIGINS.CLIENT_ID }, false);
    }
}
