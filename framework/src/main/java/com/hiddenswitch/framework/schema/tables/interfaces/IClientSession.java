/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IClientSession extends VertxPojo, Serializable {

    /**
     * Setter for <code>public.client_session.id</code>.
     */
    public IClientSession setId(String value);

    /**
     * Getter for <code>public.client_session.id</code>.
     */
    public String getId();

    /**
     * Setter for <code>public.client_session.client_id</code>.
     */
    public IClientSession setClientId(String value);

    /**
     * Getter for <code>public.client_session.client_id</code>.
     */
    public String getClientId();

    /**
     * Setter for <code>public.client_session.redirect_uri</code>.
     */
    public IClientSession setRedirectUri(String value);

    /**
     * Getter for <code>public.client_session.redirect_uri</code>.
     */
    public String getRedirectUri();

    /**
     * Setter for <code>public.client_session.state</code>.
     */
    public IClientSession setState(String value);

    /**
     * Getter for <code>public.client_session.state</code>.
     */
    public String getState();

    /**
     * Setter for <code>public.client_session.timestamp</code>.
     */
    public IClientSession setTimestamp(Integer value);

    /**
     * Getter for <code>public.client_session.timestamp</code>.
     */
    public Integer getTimestamp();

    /**
     * Setter for <code>public.client_session.session_id</code>.
     */
    public IClientSession setSessionId(String value);

    /**
     * Getter for <code>public.client_session.session_id</code>.
     */
    public String getSessionId();

    /**
     * Setter for <code>public.client_session.auth_method</code>.
     */
    public IClientSession setAuthMethod(String value);

    /**
     * Getter for <code>public.client_session.auth_method</code>.
     */
    public String getAuthMethod();

    /**
     * Setter for <code>public.client_session.realm_id</code>.
     */
    public IClientSession setRealmId(String value);

    /**
     * Getter for <code>public.client_session.realm_id</code>.
     */
    public String getRealmId();

    /**
     * Setter for <code>public.client_session.auth_user_id</code>.
     */
    public IClientSession setAuthUserId(String value);

    /**
     * Getter for <code>public.client_session.auth_user_id</code>.
     */
    public String getAuthUserId();

    /**
     * Setter for <code>public.client_session.current_action</code>.
     */
    public IClientSession setCurrentAction(String value);

    /**
     * Getter for <code>public.client_session.current_action</code>.
     */
    public String getCurrentAction();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IClientSession
     */
    public void from(IClientSession from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IClientSession
     */
    public <E extends IClientSession> E into(E into);

    @Override
    public default IClientSession fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setId(json.getString("id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("id","java.lang.String",e);
        }
        try {
            setClientId(json.getString("client_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("client_id","java.lang.String",e);
        }
        try {
            setRedirectUri(json.getString("redirect_uri"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("redirect_uri","java.lang.String",e);
        }
        try {
            setState(json.getString("state"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("state","java.lang.String",e);
        }
        try {
            setTimestamp(json.getInteger("timestamp"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("timestamp","java.lang.Integer",e);
        }
        try {
            setSessionId(json.getString("session_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("session_id","java.lang.String",e);
        }
        try {
            setAuthMethod(json.getString("auth_method"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("auth_method","java.lang.String",e);
        }
        try {
            setRealmId(json.getString("realm_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("realm_id","java.lang.String",e);
        }
        try {
            setAuthUserId(json.getString("auth_user_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("auth_user_id","java.lang.String",e);
        }
        try {
            setCurrentAction(json.getString("current_action"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("current_action","java.lang.String",e);
        }
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("client_id",getClientId());
        json.put("redirect_uri",getRedirectUri());
        json.put("state",getState());
        json.put("timestamp",getTimestamp());
        json.put("session_id",getSessionId());
        json.put("auth_method",getAuthMethod());
        json.put("realm_id",getRealmId());
        json.put("auth_user_id",getAuthUserId());
        json.put("current_action",getCurrentAction());
        return json;
    }

}
