/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables.records;


import com.hiddenswitch.framework.schema.tables.AuthenticationExecution;
import com.hiddenswitch.framework.schema.tables.interfaces.IAuthenticationExecution;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthenticationExecutionRecord extends UpdatableRecordImpl<AuthenticationExecutionRecord> implements VertxPojo, Record10<String, String, String, String, String, Integer, Integer, Boolean, String, String>, IAuthenticationExecution {

    private static final long serialVersionUID = -1495162807;

    /**
     * Setter for <code>public.authentication_execution.id</code>.
     */
    @Override
    public AuthenticationExecutionRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.authentication_execution.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.authentication_execution.alias</code>.
     */
    @Override
    public AuthenticationExecutionRecord setAlias(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.authentication_execution.alias</code>.
     */
    @Override
    public String getAlias() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.authentication_execution.authenticator</code>.
     */
    @Override
    public AuthenticationExecutionRecord setAuthenticator(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.authentication_execution.authenticator</code>.
     */
    @Override
    public String getAuthenticator() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.authentication_execution.realm_id</code>.
     */
    @Override
    public AuthenticationExecutionRecord setRealmId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.authentication_execution.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.authentication_execution.flow_id</code>.
     */
    @Override
    public AuthenticationExecutionRecord setFlowId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.authentication_execution.flow_id</code>.
     */
    @Override
    public String getFlowId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.authentication_execution.requirement</code>.
     */
    @Override
    public AuthenticationExecutionRecord setRequirement(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.authentication_execution.requirement</code>.
     */
    @Override
    public Integer getRequirement() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.authentication_execution.priority</code>.
     */
    @Override
    public AuthenticationExecutionRecord setPriority(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.authentication_execution.priority</code>.
     */
    @Override
    public Integer getPriority() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.authentication_execution.authenticator_flow</code>.
     */
    @Override
    public AuthenticationExecutionRecord setAuthenticatorFlow(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.authentication_execution.authenticator_flow</code>.
     */
    @Override
    public Boolean getAuthenticatorFlow() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.authentication_execution.auth_flow_id</code>.
     */
    @Override
    public AuthenticationExecutionRecord setAuthFlowId(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.authentication_execution.auth_flow_id</code>.
     */
    @Override
    public String getAuthFlowId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.authentication_execution.auth_config</code>.
     */
    @Override
    public AuthenticationExecutionRecord setAuthConfig(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.authentication_execution.auth_config</code>.
     */
    @Override
    public String getAuthConfig() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, String, String, String, String, Integer, Integer, Boolean, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<String, String, String, String, String, Integer, Integer, Boolean, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AuthenticationExecution.AUTHENTICATION_EXECUTION.ID;
    }

    @Override
    public Field<String> field2() {
        return AuthenticationExecution.AUTHENTICATION_EXECUTION.ALIAS;
    }

    @Override
    public Field<String> field3() {
        return AuthenticationExecution.AUTHENTICATION_EXECUTION.AUTHENTICATOR;
    }

    @Override
    public Field<String> field4() {
        return AuthenticationExecution.AUTHENTICATION_EXECUTION.REALM_ID;
    }

    @Override
    public Field<String> field5() {
        return AuthenticationExecution.AUTHENTICATION_EXECUTION.FLOW_ID;
    }

    @Override
    public Field<Integer> field6() {
        return AuthenticationExecution.AUTHENTICATION_EXECUTION.REQUIREMENT;
    }

    @Override
    public Field<Integer> field7() {
        return AuthenticationExecution.AUTHENTICATION_EXECUTION.PRIORITY;
    }

    @Override
    public Field<Boolean> field8() {
        return AuthenticationExecution.AUTHENTICATION_EXECUTION.AUTHENTICATOR_FLOW;
    }

    @Override
    public Field<String> field9() {
        return AuthenticationExecution.AUTHENTICATION_EXECUTION.AUTH_FLOW_ID;
    }

    @Override
    public Field<String> field10() {
        return AuthenticationExecution.AUTHENTICATION_EXECUTION.AUTH_CONFIG;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAlias();
    }

    @Override
    public String component3() {
        return getAuthenticator();
    }

    @Override
    public String component4() {
        return getRealmId();
    }

    @Override
    public String component5() {
        return getFlowId();
    }

    @Override
    public Integer component6() {
        return getRequirement();
    }

    @Override
    public Integer component7() {
        return getPriority();
    }

    @Override
    public Boolean component8() {
        return getAuthenticatorFlow();
    }

    @Override
    public String component9() {
        return getAuthFlowId();
    }

    @Override
    public String component10() {
        return getAuthConfig();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAlias();
    }

    @Override
    public String value3() {
        return getAuthenticator();
    }

    @Override
    public String value4() {
        return getRealmId();
    }

    @Override
    public String value5() {
        return getFlowId();
    }

    @Override
    public Integer value6() {
        return getRequirement();
    }

    @Override
    public Integer value7() {
        return getPriority();
    }

    @Override
    public Boolean value8() {
        return getAuthenticatorFlow();
    }

    @Override
    public String value9() {
        return getAuthFlowId();
    }

    @Override
    public String value10() {
        return getAuthConfig();
    }

    @Override
    public AuthenticationExecutionRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public AuthenticationExecutionRecord value2(String value) {
        setAlias(value);
        return this;
    }

    @Override
    public AuthenticationExecutionRecord value3(String value) {
        setAuthenticator(value);
        return this;
    }

    @Override
    public AuthenticationExecutionRecord value4(String value) {
        setRealmId(value);
        return this;
    }

    @Override
    public AuthenticationExecutionRecord value5(String value) {
        setFlowId(value);
        return this;
    }

    @Override
    public AuthenticationExecutionRecord value6(Integer value) {
        setRequirement(value);
        return this;
    }

    @Override
    public AuthenticationExecutionRecord value7(Integer value) {
        setPriority(value);
        return this;
    }

    @Override
    public AuthenticationExecutionRecord value8(Boolean value) {
        setAuthenticatorFlow(value);
        return this;
    }

    @Override
    public AuthenticationExecutionRecord value9(String value) {
        setAuthFlowId(value);
        return this;
    }

    @Override
    public AuthenticationExecutionRecord value10(String value) {
        setAuthConfig(value);
        return this;
    }

    @Override
    public AuthenticationExecutionRecord values(String value1, String value2, String value3, String value4, String value5, Integer value6, Integer value7, Boolean value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IAuthenticationExecution from) {
        setId(from.getId());
        setAlias(from.getAlias());
        setAuthenticator(from.getAuthenticator());
        setRealmId(from.getRealmId());
        setFlowId(from.getFlowId());
        setRequirement(from.getRequirement());
        setPriority(from.getPriority());
        setAuthenticatorFlow(from.getAuthenticatorFlow());
        setAuthFlowId(from.getAuthFlowId());
        setAuthConfig(from.getAuthConfig());
    }

    @Override
    public <E extends IAuthenticationExecution> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthenticationExecutionRecord
     */
    public AuthenticationExecutionRecord() {
        super(AuthenticationExecution.AUTHENTICATION_EXECUTION);
    }

    /**
     * Create a detached, initialised AuthenticationExecutionRecord
     */
    public AuthenticationExecutionRecord(String id, String alias, String authenticator, String realmId, String flowId, Integer requirement, Integer priority, Boolean authenticatorFlow, String authFlowId, String authConfig) {
        super(AuthenticationExecution.AUTHENTICATION_EXECUTION);

        set(0, id);
        set(1, alias);
        set(2, authenticator);
        set(3, realmId);
        set(4, flowId);
        set(5, requirement);
        set(6, priority);
        set(7, authenticatorFlow);
        set(8, authFlowId);
        set(9, authConfig);
    }

    public AuthenticationExecutionRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
