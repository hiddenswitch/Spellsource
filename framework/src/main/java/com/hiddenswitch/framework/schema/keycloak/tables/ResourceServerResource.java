/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables;


import com.hiddenswitch.framework.schema.keycloak.Indexes;
import com.hiddenswitch.framework.schema.keycloak.Keycloak;
import com.hiddenswitch.framework.schema.keycloak.Keys;
import com.hiddenswitch.framework.schema.keycloak.tables.records.ResourceServerResourceRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceServerResource extends TableImpl<ResourceServerResourceRecord> {

    private static final long serialVersionUID = -2062956299;

    /**
     * The reference instance of <code>keycloak.resource_server_resource</code>
     */
    public static final ResourceServerResource RESOURCE_SERVER_RESOURCE = new ResourceServerResource();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourceServerResourceRecord> getRecordType() {
        return ResourceServerResourceRecord.class;
    }

    /**
     * The column <code>keycloak.resource_server_resource.id</code>.
     */
    public final TableField<ResourceServerResourceRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>keycloak.resource_server_resource.name</code>.
     */
    public final TableField<ResourceServerResourceRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>keycloak.resource_server_resource.type</code>.
     */
    public final TableField<ResourceServerResourceRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.resource_server_resource.icon_uri</code>.
     */
    public final TableField<ResourceServerResourceRecord, String> ICON_URI = createField(DSL.name("icon_uri"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.resource_server_resource.owner</code>.
     */
    public final TableField<ResourceServerResourceRecord, String> OWNER = createField(DSL.name("owner"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>keycloak.resource_server_resource.resource_server_id</code>.
     */
    public final TableField<ResourceServerResourceRecord, String> RESOURCE_SERVER_ID = createField(DSL.name("resource_server_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>keycloak.resource_server_resource.owner_managed_access</code>.
     */
    public final TableField<ResourceServerResourceRecord, Boolean> OWNER_MANAGED_ACCESS = createField(DSL.name("owner_managed_access"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>keycloak.resource_server_resource.display_name</code>.
     */
    public final TableField<ResourceServerResourceRecord, String> DISPLAY_NAME = createField(DSL.name("display_name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>keycloak.resource_server_resource</code> table reference
     */
    public ResourceServerResource() {
        this(DSL.name("resource_server_resource"), null);
    }

    /**
     * Create an aliased <code>keycloak.resource_server_resource</code> table reference
     */
    public ResourceServerResource(String alias) {
        this(DSL.name(alias), RESOURCE_SERVER_RESOURCE);
    }

    /**
     * Create an aliased <code>keycloak.resource_server_resource</code> table reference
     */
    public ResourceServerResource(Name alias) {
        this(alias, RESOURCE_SERVER_RESOURCE);
    }

    private ResourceServerResource(Name alias, Table<ResourceServerResourceRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResourceServerResource(Name alias, Table<ResourceServerResourceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ResourceServerResource(Table<O> child, ForeignKey<O, ResourceServerResourceRecord> key) {
        super(child, key, RESOURCE_SERVER_RESOURCE);
    }

    @Override
    public Schema getSchema() {
        return Keycloak.KEYCLOAK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_RES_SRV_RES_RES_SRV);
    }

    @Override
    public UniqueKey<ResourceServerResourceRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_FARSR;
    }

    @Override
    public List<UniqueKey<ResourceServerResourceRecord>> getKeys() {
        return Arrays.<UniqueKey<ResourceServerResourceRecord>>asList(Keys.CONSTRAINT_FARSR, Keys.UK_FRSR6T700S9V50BU18WS5HA6);
    }

    @Override
    public List<ForeignKey<ResourceServerResourceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ResourceServerResourceRecord, ?>>asList(Keys.RESOURCE_SERVER_RESOURCE__FK_FRSRHO213XCX4WNKOG82SSRFY);
    }

    public ResourceServer resourceServer() {
        return new ResourceServer(this, Keys.RESOURCE_SERVER_RESOURCE__FK_FRSRHO213XCX4WNKOG82SSRFY);
    }

    @Override
    public ResourceServerResource as(String alias) {
        return new ResourceServerResource(DSL.name(alias), this);
    }

    @Override
    public ResourceServerResource as(Name alias) {
        return new ResourceServerResource(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceServerResource rename(String name) {
        return new ResourceServerResource(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceServerResource rename(Name name) {
        return new ResourceServerResource(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, String, String, String, String, Boolean, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
