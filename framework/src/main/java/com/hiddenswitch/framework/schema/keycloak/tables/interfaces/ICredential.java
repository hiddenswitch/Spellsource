/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ICredential extends VertxPojo, Serializable {

    /**
     * Setter for <code>keycloak.credential.id</code>.
     */
    public ICredential setId(String value);

    /**
     * Getter for <code>keycloak.credential.id</code>.
     */
    public String getId();

    /**
     * Setter for <code>keycloak.credential.device</code>.
     */
    public ICredential setDevice(String value);

    /**
     * Getter for <code>keycloak.credential.device</code>.
     */
    public String getDevice();

    /**
     * Setter for <code>keycloak.credential.hash_iterations</code>.
     */
    public ICredential setHashIterations(Integer value);

    /**
     * Getter for <code>keycloak.credential.hash_iterations</code>.
     */
    public Integer getHashIterations();

    /**
     * Setter for <code>keycloak.credential.salt</code>.
     */
    public ICredential setSalt(byte[] value);

    /**
     * Getter for <code>keycloak.credential.salt</code>.
     */
    public byte[] getSalt();

    /**
     * Setter for <code>keycloak.credential.type</code>.
     */
    public ICredential setType(String value);

    /**
     * Getter for <code>keycloak.credential.type</code>.
     */
    public String getType();

    /**
     * Setter for <code>keycloak.credential.value</code>.
     */
    public ICredential setValue(String value);

    /**
     * Getter for <code>keycloak.credential.value</code>.
     */
    public String getValue();

    /**
     * Setter for <code>keycloak.credential.user_id</code>.
     */
    public ICredential setUserId(String value);

    /**
     * Getter for <code>keycloak.credential.user_id</code>.
     */
    public String getUserId();

    /**
     * Setter for <code>keycloak.credential.created_date</code>.
     */
    public ICredential setCreatedDate(Long value);

    /**
     * Getter for <code>keycloak.credential.created_date</code>.
     */
    public Long getCreatedDate();

    /**
     * Setter for <code>keycloak.credential.counter</code>.
     */
    public ICredential setCounter(Integer value);

    /**
     * Getter for <code>keycloak.credential.counter</code>.
     */
    public Integer getCounter();

    /**
     * Setter for <code>keycloak.credential.digits</code>.
     */
    public ICredential setDigits(Integer value);

    /**
     * Getter for <code>keycloak.credential.digits</code>.
     */
    public Integer getDigits();

    /**
     * Setter for <code>keycloak.credential.period</code>.
     */
    public ICredential setPeriod(Integer value);

    /**
     * Getter for <code>keycloak.credential.period</code>.
     */
    public Integer getPeriod();

    /**
     * Setter for <code>keycloak.credential.algorithm</code>.
     */
    public ICredential setAlgorithm(String value);

    /**
     * Getter for <code>keycloak.credential.algorithm</code>.
     */
    public String getAlgorithm();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ICredential
     */
    public void from(ICredential from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ICredential
     */
    public <E extends ICredential> E into(E into);

    @Override
    public default ICredential fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setId(json.getString("id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("id","java.lang.String",e);
        }
        try {
            setDevice(json.getString("device"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("device","java.lang.String",e);
        }
        try {
            setHashIterations(json.getInteger("hash_iterations"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("hash_iterations","java.lang.Integer",e);
        }
        try {
            setSalt(json.getBinary("salt"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("salt","byte[]",e);
        }
        try {
            setType(json.getString("type"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("type","java.lang.String",e);
        }
        try {
            setValue(json.getString("value"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("value","java.lang.String",e);
        }
        try {
            setUserId(json.getString("user_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("user_id","java.lang.String",e);
        }
        try {
            setCreatedDate(json.getLong("created_date"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("created_date","java.lang.Long",e);
        }
        try {
            setCounter(json.getInteger("counter"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("counter","java.lang.Integer",e);
        }
        try {
            setDigits(json.getInteger("digits"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("digits","java.lang.Integer",e);
        }
        try {
            setPeriod(json.getInteger("period"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("period","java.lang.Integer",e);
        }
        try {
            setAlgorithm(json.getString("algorithm"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("algorithm","java.lang.String",e);
        }
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("device",getDevice());
        json.put("hash_iterations",getHashIterations());
        json.put("salt",getSalt());
        json.put("type",getType());
        json.put("value",getValue());
        json.put("user_id",getUserId());
        json.put("created_date",getCreatedDate());
        json.put("counter",getCounter());
        json.put("digits",getDigits());
        json.put("period",getPeriod());
        json.put("algorithm",getAlgorithm());
        return json;
    }

}
