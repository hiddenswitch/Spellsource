/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables;


import com.hiddenswitch.framework.schema.keycloak.Keycloak;
import com.hiddenswitch.framework.schema.keycloak.Keys;
import com.hiddenswitch.framework.schema.keycloak.tables.records.MigrationModelRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MigrationModel extends TableImpl<MigrationModelRecord> {

    private static final long serialVersionUID = -665990816;

    /**
     * The reference instance of <code>keycloak.migration_model</code>
     */
    public static final MigrationModel MIGRATION_MODEL = new MigrationModel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MigrationModelRecord> getRecordType() {
        return MigrationModelRecord.class;
    }

    /**
     * The column <code>keycloak.migration_model.id</code>.
     */
    public final TableField<MigrationModelRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>keycloak.migration_model.version</code>.
     */
    public final TableField<MigrationModelRecord, String> VERSION = createField(DSL.name("version"), org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * Create a <code>keycloak.migration_model</code> table reference
     */
    public MigrationModel() {
        this(DSL.name("migration_model"), null);
    }

    /**
     * Create an aliased <code>keycloak.migration_model</code> table reference
     */
    public MigrationModel(String alias) {
        this(DSL.name(alias), MIGRATION_MODEL);
    }

    /**
     * Create an aliased <code>keycloak.migration_model</code> table reference
     */
    public MigrationModel(Name alias) {
        this(alias, MIGRATION_MODEL);
    }

    private MigrationModel(Name alias, Table<MigrationModelRecord> aliased) {
        this(alias, aliased, null);
    }

    private MigrationModel(Name alias, Table<MigrationModelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> MigrationModel(Table<O> child, ForeignKey<O, MigrationModelRecord> key) {
        super(child, key, MIGRATION_MODEL);
    }

    @Override
    public Schema getSchema() {
        return Keycloak.KEYCLOAK;
    }

    @Override
    public UniqueKey<MigrationModelRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_MIGMOD;
    }

    @Override
    public List<UniqueKey<MigrationModelRecord>> getKeys() {
        return Arrays.<UniqueKey<MigrationModelRecord>>asList(Keys.CONSTRAINT_MIGMOD);
    }

    @Override
    public MigrationModel as(String alias) {
        return new MigrationModel(DSL.name(alias), this);
    }

    @Override
    public MigrationModel as(Name alias) {
        return new MigrationModel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MigrationModel rename(String name) {
        return new MigrationModel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MigrationModel rename(Name name) {
        return new MigrationModel(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
