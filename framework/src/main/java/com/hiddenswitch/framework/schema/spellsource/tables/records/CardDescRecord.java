/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.records;


import com.hiddenswitch.framework.schema.spellsource.tables.CardDesc;
import com.hiddenswitch.framework.schema.spellsource.tables.interfaces.ICardDesc;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * a particular instance of a card desc, which may be referenced by a card
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardDescRecord extends UpdatableRecordImpl<CardDescRecord> implements VertxPojo, Record4<Long, String, Object, JSONB>, ICardDesc {

    private static final long serialVersionUID = -1471151305;

    /**
     * Setter for <code>spellsource.card_desc.id</code>.
     */
    @Override
    public CardDescRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.card_desc.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>spellsource.card_desc.uri</code>.
     */
    @Override
    public CardDescRecord setUri(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.card_desc.uri</code>.
     */
    @Override
    public String getUri() {
        return (String) get(1);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public CardDescRecord setBlocklyWorkspace(Object value) {
        set(2, value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object getBlocklyWorkspace() {
        return get(2);
    }

    /**
     * Setter for <code>spellsource.card_desc.card_script</code>.
     */
    @Override
    public CardDescRecord setCardScript(JSONB value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.card_desc.card_script</code>.
     */
    @Override
    public JSONB getCardScript() {
        return (JSONB) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Object, JSONB> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, Object, JSONB> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CardDesc.CARD_DESC.ID;
    }

    @Override
    public Field<String> field2() {
        return CardDesc.CARD_DESC.URI;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field3() {
        return CardDesc.CARD_DESC.BLOCKLY_WORKSPACE;
    }

    @Override
    public Field<JSONB> field4() {
        return CardDesc.CARD_DESC.CARD_SCRIPT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUri();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component3() {
        return getBlocklyWorkspace();
    }

    @Override
    public JSONB component4() {
        return getCardScript();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUri();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value3() {
        return getBlocklyWorkspace();
    }

    @Override
    public JSONB value4() {
        return getCardScript();
    }

    @Override
    public CardDescRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CardDescRecord value2(String value) {
        setUri(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public CardDescRecord value3(Object value) {
        setBlocklyWorkspace(value);
        return this;
    }

    @Override
    public CardDescRecord value4(JSONB value) {
        setCardScript(value);
        return this;
    }

    @Override
    public CardDescRecord values(Long value1, String value2, Object value3, JSONB value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ICardDesc from) {
        setId(from.getId());
        setUri(from.getUri());
        setBlocklyWorkspace(from.getBlocklyWorkspace());
        setCardScript(from.getCardScript());
    }

    @Override
    public <E extends ICardDesc> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardDescRecord
     */
    public CardDescRecord() {
        super(CardDesc.CARD_DESC);
    }

    /**
     * Create a detached, initialised CardDescRecord
     */
    public CardDescRecord(Long id, String uri, Object blocklyWorkspace, JSONB cardScript) {
        super(CardDesc.CARD_DESC);

        set(0, id);
        set(1, uri);
        set(2, blocklyWorkspace);
        set(3, cardScript);
    }

    public CardDescRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
