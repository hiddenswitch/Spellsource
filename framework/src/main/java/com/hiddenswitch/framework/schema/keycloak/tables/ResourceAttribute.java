/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables;


import com.hiddenswitch.framework.schema.keycloak.Keycloak;
import com.hiddenswitch.framework.schema.keycloak.Keys;
import com.hiddenswitch.framework.schema.keycloak.tables.records.ResourceAttributeRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceAttribute extends TableImpl<ResourceAttributeRecord> {

    private static final long serialVersionUID = -1585755589;

    /**
     * The reference instance of <code>keycloak.resource_attribute</code>
     */
    public static final ResourceAttribute RESOURCE_ATTRIBUTE = new ResourceAttribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourceAttributeRecord> getRecordType() {
        return ResourceAttributeRecord.class;
    }

    /**
     * The column <code>keycloak.resource_attribute.id</code>.
     */
    public final TableField<ResourceAttributeRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false).defaultValue(org.jooq.impl.DSL.field("'sybase-needs-something-here'::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>keycloak.resource_attribute.name</code>.
     */
    public final TableField<ResourceAttributeRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>keycloak.resource_attribute.value</code>.
     */
    public final TableField<ResourceAttributeRecord, String> VALUE = createField(DSL.name("value"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.resource_attribute.resource_id</code>.
     */
    public final TableField<ResourceAttributeRecord, String> RESOURCE_ID = createField(DSL.name("resource_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * Create a <code>keycloak.resource_attribute</code> table reference
     */
    public ResourceAttribute() {
        this(DSL.name("resource_attribute"), null);
    }

    /**
     * Create an aliased <code>keycloak.resource_attribute</code> table reference
     */
    public ResourceAttribute(String alias) {
        this(DSL.name(alias), RESOURCE_ATTRIBUTE);
    }

    /**
     * Create an aliased <code>keycloak.resource_attribute</code> table reference
     */
    public ResourceAttribute(Name alias) {
        this(alias, RESOURCE_ATTRIBUTE);
    }

    private ResourceAttribute(Name alias, Table<ResourceAttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResourceAttribute(Name alias, Table<ResourceAttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ResourceAttribute(Table<O> child, ForeignKey<O, ResourceAttributeRecord> key) {
        super(child, key, RESOURCE_ATTRIBUTE);
    }

    @Override
    public Schema getSchema() {
        return Keycloak.KEYCLOAK;
    }

    @Override
    public UniqueKey<ResourceAttributeRecord> getPrimaryKey() {
        return Keys.RES_ATTR_PK;
    }

    @Override
    public List<UniqueKey<ResourceAttributeRecord>> getKeys() {
        return Arrays.<UniqueKey<ResourceAttributeRecord>>asList(Keys.RES_ATTR_PK);
    }

    @Override
    public List<ForeignKey<ResourceAttributeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ResourceAttributeRecord, ?>>asList(Keys.RESOURCE_ATTRIBUTE__FK_5HRM2VLF9QL5FU022KQEPOVBR);
    }

    public ResourceServerResource resourceServerResource() {
        return new ResourceServerResource(this, Keys.RESOURCE_ATTRIBUTE__FK_5HRM2VLF9QL5FU022KQEPOVBR);
    }

    @Override
    public ResourceAttribute as(String alias) {
        return new ResourceAttribute(DSL.name(alias), this);
    }

    @Override
    public ResourceAttribute as(Name alias) {
        return new ResourceAttribute(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceAttribute rename(String name) {
        return new ResourceAttribute(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceAttribute rename(Name name) {
        return new ResourceAttribute(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
