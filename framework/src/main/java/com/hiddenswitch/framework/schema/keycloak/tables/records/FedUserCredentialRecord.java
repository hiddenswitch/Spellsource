/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.records;


import com.hiddenswitch.framework.schema.keycloak.tables.FedUserCredential;
import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IFedUserCredential;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FedUserCredentialRecord extends UpdatableRecordImpl<FedUserCredentialRecord> implements VertxPojo, Record14<String, String, Integer, byte[], String, String, Long, Integer, Integer, Integer, String, String, String, String>, IFedUserCredential {

    private static final long serialVersionUID = -1167788097;

    /**
     * Setter for <code>keycloak.fed_user_credential.id</code>.
     */
    @Override
    public FedUserCredentialRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.device</code>.
     */
    @Override
    public FedUserCredentialRecord setDevice(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.device</code>.
     */
    @Override
    public String getDevice() {
        return (String) get(1);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.hash_iterations</code>.
     */
    @Override
    public FedUserCredentialRecord setHashIterations(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.hash_iterations</code>.
     */
    @Override
    public Integer getHashIterations() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.salt</code>.
     */
    @Override
    public FedUserCredentialRecord setSalt(byte[] value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.salt</code>.
     */
    @Override
    public byte[] getSalt() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.type</code>.
     */
    @Override
    public FedUserCredentialRecord setType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.type</code>.
     */
    @Override
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.value</code>.
     */
    @Override
    public FedUserCredentialRecord setValue(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.value</code>.
     */
    @Override
    public String getValue() {
        return (String) get(5);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.created_date</code>.
     */
    @Override
    public FedUserCredentialRecord setCreatedDate(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.created_date</code>.
     */
    @Override
    public Long getCreatedDate() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.counter</code>.
     */
    @Override
    public FedUserCredentialRecord setCounter(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.counter</code>.
     */
    @Override
    public Integer getCounter() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.digits</code>.
     */
    @Override
    public FedUserCredentialRecord setDigits(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.digits</code>.
     */
    @Override
    public Integer getDigits() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.period</code>.
     */
    @Override
    public FedUserCredentialRecord setPeriod(Integer value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.period</code>.
     */
    @Override
    public Integer getPeriod() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.algorithm</code>.
     */
    @Override
    public FedUserCredentialRecord setAlgorithm(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.algorithm</code>.
     */
    @Override
    public String getAlgorithm() {
        return (String) get(10);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.user_id</code>.
     */
    @Override
    public FedUserCredentialRecord setUserId(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.user_id</code>.
     */
    @Override
    public String getUserId() {
        return (String) get(11);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.realm_id</code>.
     */
    @Override
    public FedUserCredentialRecord setRealmId(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return (String) get(12);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.storage_provider_id</code>.
     */
    @Override
    public FedUserCredentialRecord setStorageProviderId(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.storage_provider_id</code>.
     */
    @Override
    public String getStorageProviderId() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, String, Integer, byte[], String, String, Long, Integer, Integer, Integer, String, String, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<String, String, Integer, byte[], String, String, Long, Integer, Integer, Integer, String, String, String, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return FedUserCredential.FED_USER_CREDENTIAL.ID;
    }

    @Override
    public Field<String> field2() {
        return FedUserCredential.FED_USER_CREDENTIAL.DEVICE;
    }

    @Override
    public Field<Integer> field3() {
        return FedUserCredential.FED_USER_CREDENTIAL.HASH_ITERATIONS;
    }

    @Override
    public Field<byte[]> field4() {
        return FedUserCredential.FED_USER_CREDENTIAL.SALT;
    }

    @Override
    public Field<String> field5() {
        return FedUserCredential.FED_USER_CREDENTIAL.TYPE;
    }

    @Override
    public Field<String> field6() {
        return FedUserCredential.FED_USER_CREDENTIAL.VALUE;
    }

    @Override
    public Field<Long> field7() {
        return FedUserCredential.FED_USER_CREDENTIAL.CREATED_DATE;
    }

    @Override
    public Field<Integer> field8() {
        return FedUserCredential.FED_USER_CREDENTIAL.COUNTER;
    }

    @Override
    public Field<Integer> field9() {
        return FedUserCredential.FED_USER_CREDENTIAL.DIGITS;
    }

    @Override
    public Field<Integer> field10() {
        return FedUserCredential.FED_USER_CREDENTIAL.PERIOD;
    }

    @Override
    public Field<String> field11() {
        return FedUserCredential.FED_USER_CREDENTIAL.ALGORITHM;
    }

    @Override
    public Field<String> field12() {
        return FedUserCredential.FED_USER_CREDENTIAL.USER_ID;
    }

    @Override
    public Field<String> field13() {
        return FedUserCredential.FED_USER_CREDENTIAL.REALM_ID;
    }

    @Override
    public Field<String> field14() {
        return FedUserCredential.FED_USER_CREDENTIAL.STORAGE_PROVIDER_ID;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDevice();
    }

    @Override
    public Integer component3() {
        return getHashIterations();
    }

    @Override
    public byte[] component4() {
        return getSalt();
    }

    @Override
    public String component5() {
        return getType();
    }

    @Override
    public String component6() {
        return getValue();
    }

    @Override
    public Long component7() {
        return getCreatedDate();
    }

    @Override
    public Integer component8() {
        return getCounter();
    }

    @Override
    public Integer component9() {
        return getDigits();
    }

    @Override
    public Integer component10() {
        return getPeriod();
    }

    @Override
    public String component11() {
        return getAlgorithm();
    }

    @Override
    public String component12() {
        return getUserId();
    }

    @Override
    public String component13() {
        return getRealmId();
    }

    @Override
    public String component14() {
        return getStorageProviderId();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDevice();
    }

    @Override
    public Integer value3() {
        return getHashIterations();
    }

    @Override
    public byte[] value4() {
        return getSalt();
    }

    @Override
    public String value5() {
        return getType();
    }

    @Override
    public String value6() {
        return getValue();
    }

    @Override
    public Long value7() {
        return getCreatedDate();
    }

    @Override
    public Integer value8() {
        return getCounter();
    }

    @Override
    public Integer value9() {
        return getDigits();
    }

    @Override
    public Integer value10() {
        return getPeriod();
    }

    @Override
    public String value11() {
        return getAlgorithm();
    }

    @Override
    public String value12() {
        return getUserId();
    }

    @Override
    public String value13() {
        return getRealmId();
    }

    @Override
    public String value14() {
        return getStorageProviderId();
    }

    @Override
    public FedUserCredentialRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value2(String value) {
        setDevice(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value3(Integer value) {
        setHashIterations(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value4(byte[] value) {
        setSalt(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value5(String value) {
        setType(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value6(String value) {
        setValue(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value7(Long value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value8(Integer value) {
        setCounter(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value9(Integer value) {
        setDigits(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value10(Integer value) {
        setPeriod(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value11(String value) {
        setAlgorithm(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value12(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value13(String value) {
        setRealmId(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value14(String value) {
        setStorageProviderId(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord values(String value1, String value2, Integer value3, byte[] value4, String value5, String value6, Long value7, Integer value8, Integer value9, Integer value10, String value11, String value12, String value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFedUserCredential from) {
        setId(from.getId());
        setDevice(from.getDevice());
        setHashIterations(from.getHashIterations());
        setSalt(from.getSalt());
        setType(from.getType());
        setValue(from.getValue());
        setCreatedDate(from.getCreatedDate());
        setCounter(from.getCounter());
        setDigits(from.getDigits());
        setPeriod(from.getPeriod());
        setAlgorithm(from.getAlgorithm());
        setUserId(from.getUserId());
        setRealmId(from.getRealmId());
        setStorageProviderId(from.getStorageProviderId());
    }

    @Override
    public <E extends IFedUserCredential> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FedUserCredentialRecord
     */
    public FedUserCredentialRecord() {
        super(FedUserCredential.FED_USER_CREDENTIAL);
    }

    /**
     * Create a detached, initialised FedUserCredentialRecord
     */
    public FedUserCredentialRecord(String id, String device, Integer hashIterations, byte[] salt, String type, String value, Long createdDate, Integer counter, Integer digits, Integer period, String algorithm, String userId, String realmId, String storageProviderId) {
        super(FedUserCredential.FED_USER_CREDENTIAL);

        set(0, id);
        set(1, device);
        set(2, hashIterations);
        set(3, salt);
        set(4, type);
        set(5, value);
        set(6, createdDate);
        set(7, counter);
        set(8, digits);
        set(9, period);
        set(10, algorithm);
        set(11, userId);
        set(12, realmId);
        set(13, storageProviderId);
    }

    public FedUserCredentialRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
