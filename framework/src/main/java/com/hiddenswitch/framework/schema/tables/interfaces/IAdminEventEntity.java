/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IAdminEventEntity extends VertxPojo, Serializable {

    /**
     * Setter for <code>public.admin_event_entity.id</code>.
     */
    public IAdminEventEntity setId(String value);

    /**
     * Getter for <code>public.admin_event_entity.id</code>.
     */
    public String getId();

    /**
     * Setter for <code>public.admin_event_entity.admin_event_time</code>.
     */
    public IAdminEventEntity setAdminEventTime(Long value);

    /**
     * Getter for <code>public.admin_event_entity.admin_event_time</code>.
     */
    public Long getAdminEventTime();

    /**
     * Setter for <code>public.admin_event_entity.realm_id</code>.
     */
    public IAdminEventEntity setRealmId(String value);

    /**
     * Getter for <code>public.admin_event_entity.realm_id</code>.
     */
    public String getRealmId();

    /**
     * Setter for <code>public.admin_event_entity.operation_type</code>.
     */
    public IAdminEventEntity setOperationType(String value);

    /**
     * Getter for <code>public.admin_event_entity.operation_type</code>.
     */
    public String getOperationType();

    /**
     * Setter for <code>public.admin_event_entity.auth_realm_id</code>.
     */
    public IAdminEventEntity setAuthRealmId(String value);

    /**
     * Getter for <code>public.admin_event_entity.auth_realm_id</code>.
     */
    public String getAuthRealmId();

    /**
     * Setter for <code>public.admin_event_entity.auth_client_id</code>.
     */
    public IAdminEventEntity setAuthClientId(String value);

    /**
     * Getter for <code>public.admin_event_entity.auth_client_id</code>.
     */
    public String getAuthClientId();

    /**
     * Setter for <code>public.admin_event_entity.auth_user_id</code>.
     */
    public IAdminEventEntity setAuthUserId(String value);

    /**
     * Getter for <code>public.admin_event_entity.auth_user_id</code>.
     */
    public String getAuthUserId();

    /**
     * Setter for <code>public.admin_event_entity.ip_address</code>.
     */
    public IAdminEventEntity setIpAddress(String value);

    /**
     * Getter for <code>public.admin_event_entity.ip_address</code>.
     */
    public String getIpAddress();

    /**
     * Setter for <code>public.admin_event_entity.resource_path</code>.
     */
    public IAdminEventEntity setResourcePath(String value);

    /**
     * Getter for <code>public.admin_event_entity.resource_path</code>.
     */
    public String getResourcePath();

    /**
     * Setter for <code>public.admin_event_entity.representation</code>.
     */
    public IAdminEventEntity setRepresentation(String value);

    /**
     * Getter for <code>public.admin_event_entity.representation</code>.
     */
    public String getRepresentation();

    /**
     * Setter for <code>public.admin_event_entity.error</code>.
     */
    public IAdminEventEntity setError(String value);

    /**
     * Getter for <code>public.admin_event_entity.error</code>.
     */
    public String getError();

    /**
     * Setter for <code>public.admin_event_entity.resource_type</code>.
     */
    public IAdminEventEntity setResourceType(String value);

    /**
     * Getter for <code>public.admin_event_entity.resource_type</code>.
     */
    public String getResourceType();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IAdminEventEntity
     */
    public void from(IAdminEventEntity from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IAdminEventEntity
     */
    public <E extends IAdminEventEntity> E into(E into);

    @Override
    public default IAdminEventEntity fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setId(json.getString("id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("id","java.lang.String",e);
        }
        try {
            setAdminEventTime(json.getLong("admin_event_time"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("admin_event_time","java.lang.Long",e);
        }
        try {
            setRealmId(json.getString("realm_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("realm_id","java.lang.String",e);
        }
        try {
            setOperationType(json.getString("operation_type"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("operation_type","java.lang.String",e);
        }
        try {
            setAuthRealmId(json.getString("auth_realm_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("auth_realm_id","java.lang.String",e);
        }
        try {
            setAuthClientId(json.getString("auth_client_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("auth_client_id","java.lang.String",e);
        }
        try {
            setAuthUserId(json.getString("auth_user_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("auth_user_id","java.lang.String",e);
        }
        try {
            setIpAddress(json.getString("ip_address"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("ip_address","java.lang.String",e);
        }
        try {
            setResourcePath(json.getString("resource_path"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("resource_path","java.lang.String",e);
        }
        try {
            setRepresentation(json.getString("representation"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("representation","java.lang.String",e);
        }
        try {
            setError(json.getString("error"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("error","java.lang.String",e);
        }
        try {
            setResourceType(json.getString("resource_type"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("resource_type","java.lang.String",e);
        }
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("admin_event_time",getAdminEventTime());
        json.put("realm_id",getRealmId());
        json.put("operation_type",getOperationType());
        json.put("auth_realm_id",getAuthRealmId());
        json.put("auth_client_id",getAuthClientId());
        json.put("auth_user_id",getAuthUserId());
        json.put("ip_address",getIpAddress());
        json.put("resource_path",getResourcePath());
        json.put("representation",getRepresentation());
        json.put("error",getError());
        json.put("resource_type",getResourceType());
        return json;
    }

}
