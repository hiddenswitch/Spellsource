/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables;


import com.hiddenswitch.framework.schema.keycloak.Keycloak;
import com.hiddenswitch.framework.schema.keycloak.tables.records.FedUserConsentRoleRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FedUserConsentRole extends TableImpl<FedUserConsentRoleRecord> {

    private static final long serialVersionUID = -1660186839;

    /**
     * The reference instance of <code>keycloak.fed_user_consent_role</code>
     */
    public static final FedUserConsentRole FED_USER_CONSENT_ROLE = new FedUserConsentRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FedUserConsentRoleRecord> getRecordType() {
        return FedUserConsentRoleRecord.class;
    }

    /**
     * Create a <code>keycloak.fed_user_consent_role</code> table reference
     */
    public FedUserConsentRole() {
        this(DSL.name("fed_user_consent_role"), null);
    }

    /**
     * Create an aliased <code>keycloak.fed_user_consent_role</code> table reference
     */
    public FedUserConsentRole(String alias) {
        this(DSL.name(alias), FED_USER_CONSENT_ROLE);
    }

    /**
     * Create an aliased <code>keycloak.fed_user_consent_role</code> table reference
     */
    public FedUserConsentRole(Name alias) {
        this(alias, FED_USER_CONSENT_ROLE);
    }

    private FedUserConsentRole(Name alias, Table<FedUserConsentRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private FedUserConsentRole(Name alias, Table<FedUserConsentRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> FedUserConsentRole(Table<O> child, ForeignKey<O, FedUserConsentRoleRecord> key) {
        super(child, key, FED_USER_CONSENT_ROLE);
    }

    @Override
    public Schema getSchema() {
        return Keycloak.KEYCLOAK;
    }

    @Override
    public FedUserConsentRole as(String alias) {
        return new FedUserConsentRole(DSL.name(alias), this);
    }

    @Override
    public FedUserConsentRole as(Name alias) {
        return new FedUserConsentRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FedUserConsentRole rename(String name) {
        return new FedUserConsentRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FedUserConsentRole rename(Name name) {
        return new FedUserConsentRole(name, null);
    }
}
