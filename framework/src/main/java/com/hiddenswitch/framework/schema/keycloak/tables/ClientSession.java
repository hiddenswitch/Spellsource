/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables;


import com.hiddenswitch.framework.schema.keycloak.Indexes;
import com.hiddenswitch.framework.schema.keycloak.Keycloak;
import com.hiddenswitch.framework.schema.keycloak.Keys;
import com.hiddenswitch.framework.schema.keycloak.tables.records.ClientSessionRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientSession extends TableImpl<ClientSessionRecord> {

    private static final long serialVersionUID = 1563676545;

    /**
     * The reference instance of <code>keycloak.client_session</code>
     */
    public static final ClientSession CLIENT_SESSION = new ClientSession();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClientSessionRecord> getRecordType() {
        return ClientSessionRecord.class;
    }

    /**
     * The column <code>keycloak.client_session.id</code>.
     */
    public final TableField<ClientSessionRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>keycloak.client_session.client_id</code>.
     */
    public final TableField<ClientSessionRecord, String> CLIENT_ID = createField(DSL.name("client_id"), org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>keycloak.client_session.redirect_uri</code>.
     */
    public final TableField<ClientSessionRecord, String> REDIRECT_URI = createField(DSL.name("redirect_uri"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.client_session.state</code>.
     */
    public final TableField<ClientSessionRecord, String> STATE = createField(DSL.name("state"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.client_session.timestamp</code>.
     */
    public final TableField<ClientSessionRecord, Integer> TIMESTAMP = createField(DSL.name("timestamp"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>keycloak.client_session.session_id</code>.
     */
    public final TableField<ClientSessionRecord, String> SESSION_ID = createField(DSL.name("session_id"), org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>keycloak.client_session.auth_method</code>.
     */
    public final TableField<ClientSessionRecord, String> AUTH_METHOD = createField(DSL.name("auth_method"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.client_session.realm_id</code>.
     */
    public final TableField<ClientSessionRecord, String> REALM_ID = createField(DSL.name("realm_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.client_session.auth_user_id</code>.
     */
    public final TableField<ClientSessionRecord, String> AUTH_USER_ID = createField(DSL.name("auth_user_id"), org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>keycloak.client_session.current_action</code>.
     */
    public final TableField<ClientSessionRecord, String> CURRENT_ACTION = createField(DSL.name("current_action"), org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * Create a <code>keycloak.client_session</code> table reference
     */
    public ClientSession() {
        this(DSL.name("client_session"), null);
    }

    /**
     * Create an aliased <code>keycloak.client_session</code> table reference
     */
    public ClientSession(String alias) {
        this(DSL.name(alias), CLIENT_SESSION);
    }

    /**
     * Create an aliased <code>keycloak.client_session</code> table reference
     */
    public ClientSession(Name alias) {
        this(alias, CLIENT_SESSION);
    }

    private ClientSession(Name alias, Table<ClientSessionRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClientSession(Name alias, Table<ClientSessionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ClientSession(Table<O> child, ForeignKey<O, ClientSessionRecord> key) {
        super(child, key, CLIENT_SESSION);
    }

    @Override
    public Schema getSchema() {
        return Keycloak.KEYCLOAK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_CLIENT_SESSION_SESSION);
    }

    @Override
    public UniqueKey<ClientSessionRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_8;
    }

    @Override
    public List<UniqueKey<ClientSessionRecord>> getKeys() {
        return Arrays.<UniqueKey<ClientSessionRecord>>asList(Keys.CONSTRAINT_8);
    }

    @Override
    public List<ForeignKey<ClientSessionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ClientSessionRecord, ?>>asList(Keys.CLIENT_SESSION__FK_B4AO2VCVAT6UKAU74WBWTFQO1);
    }

    public UserSession userSession() {
        return new UserSession(this, Keys.CLIENT_SESSION__FK_B4AO2VCVAT6UKAU74WBWTFQO1);
    }

    @Override
    public ClientSession as(String alias) {
        return new ClientSession(DSL.name(alias), this);
    }

    @Override
    public ClientSession as(Name alias) {
        return new ClientSession(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientSession rename(String name) {
        return new ClientSession(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientSession rename(Name name) {
        return new ClientSession(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, String, String, String, Integer, String, String, String, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
