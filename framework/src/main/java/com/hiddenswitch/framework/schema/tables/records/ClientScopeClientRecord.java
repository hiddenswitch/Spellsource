/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables.records;


import com.hiddenswitch.framework.schema.tables.ClientScopeClient;
import com.hiddenswitch.framework.schema.tables.interfaces.IClientScopeClient;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientScopeClientRecord extends UpdatableRecordImpl<ClientScopeClientRecord> implements VertxPojo, Record3<String, String, Boolean>, IClientScopeClient {

    private static final long serialVersionUID = -1319667941;

    /**
     * Setter for <code>public.client_scope_client.client_id</code>.
     */
    @Override
    public ClientScopeClientRecord setClientId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.client_scope_client.client_id</code>.
     */
    @Override
    public String getClientId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.client_scope_client.scope_id</code>.
     */
    @Override
    public ClientScopeClientRecord setScopeId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.client_scope_client.scope_id</code>.
     */
    @Override
    public String getScopeId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.client_scope_client.default_scope</code>.
     */
    @Override
    public ClientScopeClientRecord setDefaultScope(Boolean value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.client_scope_client.default_scope</code>.
     */
    @Override
    public Boolean getDefaultScope() {
        return (Boolean) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Boolean> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Boolean> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ClientScopeClient.CLIENT_SCOPE_CLIENT.CLIENT_ID;
    }

    @Override
    public Field<String> field2() {
        return ClientScopeClient.CLIENT_SCOPE_CLIENT.SCOPE_ID;
    }

    @Override
    public Field<Boolean> field3() {
        return ClientScopeClient.CLIENT_SCOPE_CLIENT.DEFAULT_SCOPE;
    }

    @Override
    public String component1() {
        return getClientId();
    }

    @Override
    public String component2() {
        return getScopeId();
    }

    @Override
    public Boolean component3() {
        return getDefaultScope();
    }

    @Override
    public String value1() {
        return getClientId();
    }

    @Override
    public String value2() {
        return getScopeId();
    }

    @Override
    public Boolean value3() {
        return getDefaultScope();
    }

    @Override
    public ClientScopeClientRecord value1(String value) {
        setClientId(value);
        return this;
    }

    @Override
    public ClientScopeClientRecord value2(String value) {
        setScopeId(value);
        return this;
    }

    @Override
    public ClientScopeClientRecord value3(Boolean value) {
        setDefaultScope(value);
        return this;
    }

    @Override
    public ClientScopeClientRecord values(String value1, String value2, Boolean value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IClientScopeClient from) {
        setClientId(from.getClientId());
        setScopeId(from.getScopeId());
        setDefaultScope(from.getDefaultScope());
    }

    @Override
    public <E extends IClientScopeClient> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientScopeClientRecord
     */
    public ClientScopeClientRecord() {
        super(ClientScopeClient.CLIENT_SCOPE_CLIENT);
    }

    /**
     * Create a detached, initialised ClientScopeClientRecord
     */
    public ClientScopeClientRecord(String clientId, String scopeId, Boolean defaultScope) {
        super(ClientScopeClient.CLIENT_SCOPE_CLIENT);

        set(0, clientId);
        set(1, scopeId);
        set(2, defaultScope);
    }

    public ClientScopeClientRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
