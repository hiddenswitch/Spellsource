/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables.records;


import com.hiddenswitch.framework.schema.tables.WebOrigins;
import com.hiddenswitch.framework.schema.tables.interfaces.IWebOrigins;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WebOriginsRecord extends UpdatableRecordImpl<WebOriginsRecord> implements VertxPojo, Record2<String, String>, IWebOrigins {

    private static final long serialVersionUID = 387976980;

    /**
     * Setter for <code>public.web_origins.client_id</code>.
     */
    @Override
    public WebOriginsRecord setClientId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.web_origins.client_id</code>.
     */
    @Override
    public String getClientId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.web_origins.value</code>.
     */
    @Override
    public WebOriginsRecord setValue(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.web_origins.value</code>.
     */
    @Override
    public String getValue() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return WebOrigins.WEB_ORIGINS.CLIENT_ID;
    }

    @Override
    public Field<String> field2() {
        return WebOrigins.WEB_ORIGINS.VALUE;
    }

    @Override
    public String component1() {
        return getClientId();
    }

    @Override
    public String component2() {
        return getValue();
    }

    @Override
    public String value1() {
        return getClientId();
    }

    @Override
    public String value2() {
        return getValue();
    }

    @Override
    public WebOriginsRecord value1(String value) {
        setClientId(value);
        return this;
    }

    @Override
    public WebOriginsRecord value2(String value) {
        setValue(value);
        return this;
    }

    @Override
    public WebOriginsRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWebOrigins from) {
        setClientId(from.getClientId());
        setValue(from.getValue());
    }

    @Override
    public <E extends IWebOrigins> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WebOriginsRecord
     */
    public WebOriginsRecord() {
        super(WebOrigins.WEB_ORIGINS);
    }

    /**
     * Create a detached, initialised WebOriginsRecord
     */
    public WebOriginsRecord(String clientId, String value) {
        super(WebOrigins.WEB_ORIGINS);

        set(0, clientId);
        set(1, value);
    }

    public WebOriginsRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
