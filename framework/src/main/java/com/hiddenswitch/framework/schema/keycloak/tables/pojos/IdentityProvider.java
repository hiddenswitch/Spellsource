/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IIdentityProvider;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdentityProvider implements VertxPojo, IIdentityProvider {

    private static final long serialVersionUID = 1029068969;

    private String  internalId;
    private Boolean enabled;
    private String  providerAlias;
    private String  providerId;
    private Boolean storeToken;
    private Boolean authenticateByDefault;
    private String  realmId;
    private Boolean addTokenRole;
    private Boolean trustEmail;
    private String  firstBrokerLoginFlowId;
    private String  postBrokerLoginFlowId;
    private String  providerDisplayName;
    private Boolean linkOnly;

    public IdentityProvider() {}

    public IdentityProvider(IIdentityProvider value) {
        this.internalId = value.getInternalId();
        this.enabled = value.getEnabled();
        this.providerAlias = value.getProviderAlias();
        this.providerId = value.getProviderId();
        this.storeToken = value.getStoreToken();
        this.authenticateByDefault = value.getAuthenticateByDefault();
        this.realmId = value.getRealmId();
        this.addTokenRole = value.getAddTokenRole();
        this.trustEmail = value.getTrustEmail();
        this.firstBrokerLoginFlowId = value.getFirstBrokerLoginFlowId();
        this.postBrokerLoginFlowId = value.getPostBrokerLoginFlowId();
        this.providerDisplayName = value.getProviderDisplayName();
        this.linkOnly = value.getLinkOnly();
    }

    public IdentityProvider(
        String  internalId,
        Boolean enabled,
        String  providerAlias,
        String  providerId,
        Boolean storeToken,
        Boolean authenticateByDefault,
        String  realmId,
        Boolean addTokenRole,
        Boolean trustEmail,
        String  firstBrokerLoginFlowId,
        String  postBrokerLoginFlowId,
        String  providerDisplayName,
        Boolean linkOnly
    ) {
        this.internalId = internalId;
        this.enabled = enabled;
        this.providerAlias = providerAlias;
        this.providerId = providerId;
        this.storeToken = storeToken;
        this.authenticateByDefault = authenticateByDefault;
        this.realmId = realmId;
        this.addTokenRole = addTokenRole;
        this.trustEmail = trustEmail;
        this.firstBrokerLoginFlowId = firstBrokerLoginFlowId;
        this.postBrokerLoginFlowId = postBrokerLoginFlowId;
        this.providerDisplayName = providerDisplayName;
        this.linkOnly = linkOnly;
    }

    public IdentityProvider(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    @Override
    public String getInternalId() {
        return this.internalId;
    }

    @Override
    public IdentityProvider setInternalId(String internalId) {
        this.internalId = internalId;
        return this;
    }

    @Override
    public Boolean getEnabled() {
        return this.enabled;
    }

    @Override
    public IdentityProvider setEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    @Override
    public String getProviderAlias() {
        return this.providerAlias;
    }

    @Override
    public IdentityProvider setProviderAlias(String providerAlias) {
        this.providerAlias = providerAlias;
        return this;
    }

    @Override
    public String getProviderId() {
        return this.providerId;
    }

    @Override
    public IdentityProvider setProviderId(String providerId) {
        this.providerId = providerId;
        return this;
    }

    @Override
    public Boolean getStoreToken() {
        return this.storeToken;
    }

    @Override
    public IdentityProvider setStoreToken(Boolean storeToken) {
        this.storeToken = storeToken;
        return this;
    }

    @Override
    public Boolean getAuthenticateByDefault() {
        return this.authenticateByDefault;
    }

    @Override
    public IdentityProvider setAuthenticateByDefault(Boolean authenticateByDefault) {
        this.authenticateByDefault = authenticateByDefault;
        return this;
    }

    @Override
    public String getRealmId() {
        return this.realmId;
    }

    @Override
    public IdentityProvider setRealmId(String realmId) {
        this.realmId = realmId;
        return this;
    }

    @Override
    public Boolean getAddTokenRole() {
        return this.addTokenRole;
    }

    @Override
    public IdentityProvider setAddTokenRole(Boolean addTokenRole) {
        this.addTokenRole = addTokenRole;
        return this;
    }

    @Override
    public Boolean getTrustEmail() {
        return this.trustEmail;
    }

    @Override
    public IdentityProvider setTrustEmail(Boolean trustEmail) {
        this.trustEmail = trustEmail;
        return this;
    }

    @Override
    public String getFirstBrokerLoginFlowId() {
        return this.firstBrokerLoginFlowId;
    }

    @Override
    public IdentityProvider setFirstBrokerLoginFlowId(String firstBrokerLoginFlowId) {
        this.firstBrokerLoginFlowId = firstBrokerLoginFlowId;
        return this;
    }

    @Override
    public String getPostBrokerLoginFlowId() {
        return this.postBrokerLoginFlowId;
    }

    @Override
    public IdentityProvider setPostBrokerLoginFlowId(String postBrokerLoginFlowId) {
        this.postBrokerLoginFlowId = postBrokerLoginFlowId;
        return this;
    }

    @Override
    public String getProviderDisplayName() {
        return this.providerDisplayName;
    }

    @Override
    public IdentityProvider setProviderDisplayName(String providerDisplayName) {
        this.providerDisplayName = providerDisplayName;
        return this;
    }

    @Override
    public Boolean getLinkOnly() {
        return this.linkOnly;
    }

    @Override
    public IdentityProvider setLinkOnly(Boolean linkOnly) {
        this.linkOnly = linkOnly;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("IdentityProvider (");

        sb.append(internalId);
        sb.append(", ").append(enabled);
        sb.append(", ").append(providerAlias);
        sb.append(", ").append(providerId);
        sb.append(", ").append(storeToken);
        sb.append(", ").append(authenticateByDefault);
        sb.append(", ").append(realmId);
        sb.append(", ").append(addTokenRole);
        sb.append(", ").append(trustEmail);
        sb.append(", ").append(firstBrokerLoginFlowId);
        sb.append(", ").append(postBrokerLoginFlowId);
        sb.append(", ").append(providerDisplayName);
        sb.append(", ").append(linkOnly);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IIdentityProvider from) {
        setInternalId(from.getInternalId());
        setEnabled(from.getEnabled());
        setProviderAlias(from.getProviderAlias());
        setProviderId(from.getProviderId());
        setStoreToken(from.getStoreToken());
        setAuthenticateByDefault(from.getAuthenticateByDefault());
        setRealmId(from.getRealmId());
        setAddTokenRole(from.getAddTokenRole());
        setTrustEmail(from.getTrustEmail());
        setFirstBrokerLoginFlowId(from.getFirstBrokerLoginFlowId());
        setPostBrokerLoginFlowId(from.getPostBrokerLoginFlowId());
        setProviderDisplayName(from.getProviderDisplayName());
        setLinkOnly(from.getLinkOnly());
    }

    @Override
    public <E extends IIdentityProvider> E into(E into) {
        into.from(this);
        return into;
    }
}
