/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.records;


import com.hiddenswitch.framework.schema.keycloak.tables.MigrationModel;
import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IMigrationModel;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MigrationModelRecord extends UpdatableRecordImpl<MigrationModelRecord> implements VertxPojo, Record2<String, String>, IMigrationModel {

    private static final long serialVersionUID = -1723142860;

    /**
     * Setter for <code>keycloak.migration_model.id</code>.
     */
    @Override
    public MigrationModelRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.migration_model.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>keycloak.migration_model.version</code>.
     */
    @Override
    public MigrationModelRecord setVersion(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.migration_model.version</code>.
     */
    @Override
    public String getVersion() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MigrationModel.MIGRATION_MODEL.ID;
    }

    @Override
    public Field<String> field2() {
        return MigrationModel.MIGRATION_MODEL.VERSION;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getVersion();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getVersion();
    }

    @Override
    public MigrationModelRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public MigrationModelRecord value2(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public MigrationModelRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IMigrationModel from) {
        setId(from.getId());
        setVersion(from.getVersion());
    }

    @Override
    public <E extends IMigrationModel> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MigrationModelRecord
     */
    public MigrationModelRecord() {
        super(MigrationModel.MIGRATION_MODEL);
    }

    /**
     * Create a detached, initialised MigrationModelRecord
     */
    public MigrationModelRecord(String id, String version) {
        super(MigrationModel.MIGRATION_MODEL);

        set(0, id);
        set(1, version);
    }

    public MigrationModelRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
