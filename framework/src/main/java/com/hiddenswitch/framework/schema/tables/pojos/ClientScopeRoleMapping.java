/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables.pojos;


import com.hiddenswitch.framework.schema.tables.interfaces.IClientScopeRoleMapping;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientScopeRoleMapping implements VertxPojo, IClientScopeRoleMapping {

    private static final long serialVersionUID = 970585332;

    private String scopeId;
    private String roleId;

    public ClientScopeRoleMapping() {}

    public ClientScopeRoleMapping(IClientScopeRoleMapping value) {
        this.scopeId = value.getScopeId();
        this.roleId = value.getRoleId();
    }

    public ClientScopeRoleMapping(
        String scopeId,
        String roleId
    ) {
        this.scopeId = scopeId;
        this.roleId = roleId;
    }

    public ClientScopeRoleMapping(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    @Override
    public String getScopeId() {
        return this.scopeId;
    }

    @Override
    public ClientScopeRoleMapping setScopeId(String scopeId) {
        this.scopeId = scopeId;
        return this;
    }

    @Override
    public String getRoleId() {
        return this.roleId;
    }

    @Override
    public ClientScopeRoleMapping setRoleId(String roleId) {
        this.roleId = roleId;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ClientScopeRoleMapping (");

        sb.append(scopeId);
        sb.append(", ").append(roleId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IClientScopeRoleMapping from) {
        setScopeId(from.getScopeId());
        setRoleId(from.getRoleId());
    }

    @Override
    public <E extends IClientScopeRoleMapping> E into(E into) {
        into.from(this);
        return into;
    }
}
