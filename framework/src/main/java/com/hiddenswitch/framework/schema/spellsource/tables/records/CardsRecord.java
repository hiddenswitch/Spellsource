/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.records;


import com.hiddenswitch.framework.schema.spellsource.tables.Cards;
import com.hiddenswitch.framework.schema.spellsource.tables.interfaces.ICards;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * references a card at a particular point in time
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardsRecord extends UpdatableRecordImpl<CardsRecord> implements VertxPojo, Record3<Long, String, Long>, ICards {

    private static final long serialVersionUID = 1632233900;

    /**
     * Setter for <code>spellsource.cards.id</code>.
     */
    @Override
    public CardsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.cards.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>spellsource.cards.card_id</code>.
     */
    @Override
    public CardsRecord setCardId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.cards.card_id</code>.
     */
    @Override
    public String getCardId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>spellsource.cards.card_desc</code>. mutable reference to a card_desc allowing the author to dy
     */
    @Override
    public CardsRecord setCardDesc(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.cards.card_desc</code>. mutable reference to a card_desc allowing the author to dy
     */
    @Override
    public Long getCardDesc() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Cards.CARDS.ID;
    }

    @Override
    public Field<String> field2() {
        return Cards.CARDS.CARD_ID;
    }

    @Override
    public Field<Long> field3() {
        return Cards.CARDS.CARD_DESC;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCardId();
    }

    @Override
    public Long component3() {
        return getCardDesc();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCardId();
    }

    @Override
    public Long value3() {
        return getCardDesc();
    }

    @Override
    public CardsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CardsRecord value2(String value) {
        setCardId(value);
        return this;
    }

    @Override
    public CardsRecord value3(Long value) {
        setCardDesc(value);
        return this;
    }

    @Override
    public CardsRecord values(Long value1, String value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ICards from) {
        setId(from.getId());
        setCardId(from.getCardId());
        setCardDesc(from.getCardDesc());
    }

    @Override
    public <E extends ICards> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardsRecord
     */
    public CardsRecord() {
        super(Cards.CARDS);
    }

    /**
     * Create a detached, initialised CardsRecord
     */
    public CardsRecord(Long id, String cardId, Long cardDesc) {
        super(Cards.CARDS);

        set(0, id);
        set(1, cardId);
        set(2, cardDesc);
    }

    public CardsRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
