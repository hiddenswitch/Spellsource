/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IAuthenticationExecution extends VertxPojo, Serializable {

    /**
     * Setter for <code>public.authentication_execution.id</code>.
     */
    public IAuthenticationExecution setId(String value);

    /**
     * Getter for <code>public.authentication_execution.id</code>.
     */
    public String getId();

    /**
     * Setter for <code>public.authentication_execution.alias</code>.
     */
    public IAuthenticationExecution setAlias(String value);

    /**
     * Getter for <code>public.authentication_execution.alias</code>.
     */
    public String getAlias();

    /**
     * Setter for <code>public.authentication_execution.authenticator</code>.
     */
    public IAuthenticationExecution setAuthenticator(String value);

    /**
     * Getter for <code>public.authentication_execution.authenticator</code>.
     */
    public String getAuthenticator();

    /**
     * Setter for <code>public.authentication_execution.realm_id</code>.
     */
    public IAuthenticationExecution setRealmId(String value);

    /**
     * Getter for <code>public.authentication_execution.realm_id</code>.
     */
    public String getRealmId();

    /**
     * Setter for <code>public.authentication_execution.flow_id</code>.
     */
    public IAuthenticationExecution setFlowId(String value);

    /**
     * Getter for <code>public.authentication_execution.flow_id</code>.
     */
    public String getFlowId();

    /**
     * Setter for <code>public.authentication_execution.requirement</code>.
     */
    public IAuthenticationExecution setRequirement(Integer value);

    /**
     * Getter for <code>public.authentication_execution.requirement</code>.
     */
    public Integer getRequirement();

    /**
     * Setter for <code>public.authentication_execution.priority</code>.
     */
    public IAuthenticationExecution setPriority(Integer value);

    /**
     * Getter for <code>public.authentication_execution.priority</code>.
     */
    public Integer getPriority();

    /**
     * Setter for <code>public.authentication_execution.authenticator_flow</code>.
     */
    public IAuthenticationExecution setAuthenticatorFlow(Boolean value);

    /**
     * Getter for <code>public.authentication_execution.authenticator_flow</code>.
     */
    public Boolean getAuthenticatorFlow();

    /**
     * Setter for <code>public.authentication_execution.auth_flow_id</code>.
     */
    public IAuthenticationExecution setAuthFlowId(String value);

    /**
     * Getter for <code>public.authentication_execution.auth_flow_id</code>.
     */
    public String getAuthFlowId();

    /**
     * Setter for <code>public.authentication_execution.auth_config</code>.
     */
    public IAuthenticationExecution setAuthConfig(String value);

    /**
     * Getter for <code>public.authentication_execution.auth_config</code>.
     */
    public String getAuthConfig();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IAuthenticationExecution
     */
    public void from(IAuthenticationExecution from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IAuthenticationExecution
     */
    public <E extends IAuthenticationExecution> E into(E into);

    @Override
    public default IAuthenticationExecution fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setId(json.getString("id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("id","java.lang.String",e);
        }
        try {
            setAlias(json.getString("alias"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("alias","java.lang.String",e);
        }
        try {
            setAuthenticator(json.getString("authenticator"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("authenticator","java.lang.String",e);
        }
        try {
            setRealmId(json.getString("realm_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("realm_id","java.lang.String",e);
        }
        try {
            setFlowId(json.getString("flow_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("flow_id","java.lang.String",e);
        }
        try {
            setRequirement(json.getInteger("requirement"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("requirement","java.lang.Integer",e);
        }
        try {
            setPriority(json.getInteger("priority"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("priority","java.lang.Integer",e);
        }
        try {
            setAuthenticatorFlow(json.getBoolean("authenticator_flow"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("authenticator_flow","java.lang.Boolean",e);
        }
        try {
            setAuthFlowId(json.getString("auth_flow_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("auth_flow_id","java.lang.String",e);
        }
        try {
            setAuthConfig(json.getString("auth_config"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("auth_config","java.lang.String",e);
        }
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("alias",getAlias());
        json.put("authenticator",getAuthenticator());
        json.put("realm_id",getRealmId());
        json.put("flow_id",getFlowId());
        json.put("requirement",getRequirement());
        json.put("priority",getPriority());
        json.put("authenticator_flow",getAuthenticatorFlow());
        json.put("auth_flow_id",getAuthFlowId());
        json.put("auth_config",getAuthConfig());
        return json;
    }

}
