/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


/**
 * indicates a deck shared to a player
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IDeckShares extends VertxPojo, Serializable {

    /**
     * Setter for <code>spellsource.deck_shares.id</code>.
     */
    public IDeckShares setId(Long value);

    /**
     * Getter for <code>spellsource.deck_shares.id</code>.
     */
    public Long getId();

    /**
     * Setter for <code>spellsource.deck_shares.deck_id</code>.
     */
    public IDeckShares setDeckId(String value);

    /**
     * Getter for <code>spellsource.deck_shares.deck_id</code>.
     */
    public String getDeckId();

    /**
     * Setter for <code>spellsource.deck_shares.share_recipient_id</code>.
     */
    public IDeckShares setShareRecipientId(String value);

    /**
     * Getter for <code>spellsource.deck_shares.share_recipient_id</code>.
     */
    public String getShareRecipientId();

    /**
     * Setter for <code>spellsource.deck_shares.trashed</code>.
     */
    public IDeckShares setTrashed(Boolean value);

    /**
     * Getter for <code>spellsource.deck_shares.trashed</code>.
     */
    public Boolean getTrashed();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IDeckShares
     */
    public void from(IDeckShares from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IDeckShares
     */
    public <E extends IDeckShares> E into(E into);

    @Override
    public default IDeckShares fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setId(json.getLong("id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("id","java.lang.Long",e);
        }
        try {
            setDeckId(json.getString("deck_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("deck_id","java.lang.String",e);
        }
        try {
            setShareRecipientId(json.getString("share_recipient_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("share_recipient_id","java.lang.String",e);
        }
        try {
            setTrashed(json.getBoolean("trashed"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("trashed","java.lang.Boolean",e);
        }
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("deck_id",getDeckId());
        json.put("share_recipient_id",getShareRecipientId());
        json.put("trashed",getTrashed());
        return json;
    }

}
