/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables;


import com.hiddenswitch.framework.schema.keycloak.Indexes;
import com.hiddenswitch.framework.schema.keycloak.Keycloak;
import com.hiddenswitch.framework.schema.keycloak.Keys;
import com.hiddenswitch.framework.schema.keycloak.tables.records.UserEntityRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserEntity extends TableImpl<UserEntityRecord> {

    private static final long serialVersionUID = 1832628121;

    /**
     * The reference instance of <code>keycloak.user_entity</code>
     */
    public static final UserEntity USER_ENTITY = new UserEntity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserEntityRecord> getRecordType() {
        return UserEntityRecord.class;
    }

    /**
     * The column <code>keycloak.user_entity.id</code>.
     */
    public final TableField<UserEntityRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>keycloak.user_entity.email</code>.
     */
    public final TableField<UserEntityRecord, String> EMAIL = createField(DSL.name("email"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.user_entity.email_constraint</code>.
     */
    public final TableField<UserEntityRecord, String> EMAIL_CONSTRAINT = createField(DSL.name("email_constraint"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.user_entity.email_verified</code>.
     */
    public final TableField<UserEntityRecord, Boolean> EMAIL_VERIFIED = createField(DSL.name("email_verified"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>keycloak.user_entity.enabled</code>.
     */
    public final TableField<UserEntityRecord, Boolean> ENABLED = createField(DSL.name("enabled"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>keycloak.user_entity.federation_link</code>.
     */
    public final TableField<UserEntityRecord, String> FEDERATION_LINK = createField(DSL.name("federation_link"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.user_entity.first_name</code>.
     */
    public final TableField<UserEntityRecord, String> FIRST_NAME = createField(DSL.name("first_name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.user_entity.last_name</code>.
     */
    public final TableField<UserEntityRecord, String> LAST_NAME = createField(DSL.name("last_name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.user_entity.realm_id</code>.
     */
    public final TableField<UserEntityRecord, String> REALM_ID = createField(DSL.name("realm_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.user_entity.username</code>.
     */
    public final TableField<UserEntityRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.user_entity.created_timestamp</code>.
     */
    public final TableField<UserEntityRecord, Long> CREATED_TIMESTAMP = createField(DSL.name("created_timestamp"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>keycloak.user_entity.service_account_client_link</code>.
     */
    public final TableField<UserEntityRecord, String> SERVICE_ACCOUNT_CLIENT_LINK = createField(DSL.name("service_account_client_link"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>keycloak.user_entity.not_before</code>.
     */
    public final TableField<UserEntityRecord, Integer> NOT_BEFORE = createField(DSL.name("not_before"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>keycloak.user_entity</code> table reference
     */
    public UserEntity() {
        this(DSL.name("user_entity"), null);
    }

    /**
     * Create an aliased <code>keycloak.user_entity</code> table reference
     */
    public UserEntity(String alias) {
        this(DSL.name(alias), USER_ENTITY);
    }

    /**
     * Create an aliased <code>keycloak.user_entity</code> table reference
     */
    public UserEntity(Name alias) {
        this(alias, USER_ENTITY);
    }

    private UserEntity(Name alias, Table<UserEntityRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserEntity(Name alias, Table<UserEntityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> UserEntity(Table<O> child, ForeignKey<O, UserEntityRecord> key) {
        super(child, key, USER_ENTITY);
    }

    @Override
    public Schema getSchema() {
        return Keycloak.KEYCLOAK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_USER_EMAIL);
    }

    @Override
    public UniqueKey<UserEntityRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_FB;
    }

    @Override
    public List<UniqueKey<UserEntityRecord>> getKeys() {
        return Arrays.<UniqueKey<UserEntityRecord>>asList(Keys.CONSTRAINT_FB, Keys.UK_DYKN684SL8UP1CRFEI6ECKHD7, Keys.UK_RU8TT6T700S9V50BU18WS5HA6);
    }

    @Override
    public UserEntity as(String alias) {
        return new UserEntity(DSL.name(alias), this);
    }

    @Override
    public UserEntity as(Name alias) {
        return new UserEntity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserEntity rename(String name) {
        return new UserEntity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserEntity rename(Name name) {
        return new UserEntity(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<String, String, String, Boolean, Boolean, String, String, String, String, String, Long, String, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
