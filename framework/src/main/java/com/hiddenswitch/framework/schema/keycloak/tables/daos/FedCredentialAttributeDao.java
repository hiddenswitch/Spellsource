/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.daos;


import com.hiddenswitch.framework.schema.keycloak.tables.FedCredentialAttribute;
import com.hiddenswitch.framework.schema.keycloak.tables.records.FedCredentialAttributeRecord;

import io.github.jklingsporn.vertx.jooq.shared.reactive.AbstractReactiveVertxDAO;

import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import io.vertx.core.Future;
import io.github.jklingsporn.vertx.jooq.classic.reactivepg.ReactiveClassicQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FedCredentialAttributeDao extends AbstractReactiveVertxDAO<FedCredentialAttributeRecord, com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute, String, Future<List<com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute>>, Future<com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<FedCredentialAttributeRecord,com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute,String> {

    /**
     * @param configuration Used for rendering, so only SQLDialect must be set and must be one of the POSTGREs types.
     * @param delegate A configured AsyncSQLClient that is used for query execution
     */
    public FedCredentialAttributeDao(Configuration configuration, io.vertx.sqlclient.SqlClient delegate) {
        super(FedCredentialAttribute.FED_CREDENTIAL_ATTRIBUTE, com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute.class, new ReactiveClassicQueryExecutor<FedCredentialAttributeRecord,com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute,String>(configuration,delegate,com.hiddenswitch.framework.schema.keycloak.tables.mappers.RowMappers.getFedCredentialAttributeMapper()));
    }

    @Override
    protected String getId(com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute object) {
        return object.getId();
    }

    /**
     * Find records that have <code>credential_id IN (values)</code> asynchronously
     */
    public Future<List<com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute>> findManyByCredentialId(Collection<String> values) {
        return findManyByCondition(FedCredentialAttribute.FED_CREDENTIAL_ATTRIBUTE.CREDENTIAL_ID.in(values));
    }

    /**
     * Find records that have <code>credential_id IN (values)</code> asynchronously limited by the given limit
     */
    public Future<List<com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute>> findManyByCredentialId(Collection<String> values, int limit) {
        return findManyByCondition(FedCredentialAttribute.FED_CREDENTIAL_ATTRIBUTE.CREDENTIAL_ID.in(values),limit);
    }

    /**
     * Find records that have <code>name IN (values)</code> asynchronously
     */
    public Future<List<com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute>> findManyByName(Collection<String> values) {
        return findManyByCondition(FedCredentialAttribute.FED_CREDENTIAL_ATTRIBUTE.NAME.in(values));
    }

    /**
     * Find records that have <code>name IN (values)</code> asynchronously limited by the given limit
     */
    public Future<List<com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute>> findManyByName(Collection<String> values, int limit) {
        return findManyByCondition(FedCredentialAttribute.FED_CREDENTIAL_ATTRIBUTE.NAME.in(values),limit);
    }

    /**
     * Find records that have <code>value IN (values)</code> asynchronously
     */
    public Future<List<com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute>> findManyByValue(Collection<String> values) {
        return findManyByCondition(FedCredentialAttribute.FED_CREDENTIAL_ATTRIBUTE.VALUE.in(values));
    }

    /**
     * Find records that have <code>value IN (values)</code> asynchronously limited by the given limit
     */
    public Future<List<com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute>> findManyByValue(Collection<String> values, int limit) {
        return findManyByCondition(FedCredentialAttribute.FED_CREDENTIAL_ATTRIBUTE.VALUE.in(values),limit);
    }

    @Override
    public ReactiveClassicQueryExecutor<FedCredentialAttributeRecord,com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute,String> queryExecutor(){
        return (ReactiveClassicQueryExecutor<FedCredentialAttributeRecord,com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedCredentialAttribute,String>) super.queryExecutor();
    }
}
