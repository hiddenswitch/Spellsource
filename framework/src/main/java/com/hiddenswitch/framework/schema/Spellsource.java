/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema;


import com.hiddenswitch.framework.schema.tables.CardDesc;
import com.hiddenswitch.framework.schema.tables.Cards;
import com.hiddenswitch.framework.schema.tables.CardsInDeck;
import com.hiddenswitch.framework.schema.tables.Decks;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Spellsource extends SchemaImpl {

    private static final long serialVersionUID = 726314062;

    /**
     * The reference instance of <code>spellsource</code>
     */
    public static final Spellsource SPELLSOURCE = new Spellsource();

    /**
     * a particular instance of a card desc, which may be referenced by a card
     */
    public final CardDesc CARD_DESC = CardDesc.CARD_DESC;

    /**
     * references a card at a particular point in time
     */
    public final Cards CARDS = Cards.CARDS;

    /**
     * The table <code>spellsource.cards_in_deck</code>.
     */
    public final CardsInDeck CARDS_IN_DECK = CardsInDeck.CARDS_IN_DECK;

    /**
     * The table <code>spellsource.decks</code>.
     */
    public final Decks DECKS = Decks.DECKS;

    /**
     * No further instances allowed
     */
    private Spellsource() {
        super("spellsource", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            CardDesc.CARD_DESC,
            Cards.CARDS,
            CardsInDeck.CARDS_IN_DECK,
            Decks.DECKS);
    }
}
