/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables;


import com.hiddenswitch.framework.schema.Keys;
import com.hiddenswitch.framework.schema.Public;
import com.hiddenswitch.framework.schema.tables.records.AdminEventEntityRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminEventEntity extends TableImpl<AdminEventEntityRecord> {

    private static final long serialVersionUID = -204892336;

    /**
     * The reference instance of <code>public.admin_event_entity</code>
     */
    public static final AdminEventEntity ADMIN_EVENT_ENTITY = new AdminEventEntity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdminEventEntityRecord> getRecordType() {
        return AdminEventEntityRecord.class;
    }

    /**
     * The column <code>public.admin_event_entity.id</code>.
     */
    public final TableField<AdminEventEntityRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.admin_event_entity.admin_event_time</code>.
     */
    public final TableField<AdminEventEntityRecord, Long> ADMIN_EVENT_TIME = createField(DSL.name("admin_event_time"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.admin_event_entity.realm_id</code>.
     */
    public final TableField<AdminEventEntityRecord, String> REALM_ID = createField(DSL.name("realm_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.admin_event_entity.operation_type</code>.
     */
    public final TableField<AdminEventEntityRecord, String> OPERATION_TYPE = createField(DSL.name("operation_type"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.admin_event_entity.auth_realm_id</code>.
     */
    public final TableField<AdminEventEntityRecord, String> AUTH_REALM_ID = createField(DSL.name("auth_realm_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.admin_event_entity.auth_client_id</code>.
     */
    public final TableField<AdminEventEntityRecord, String> AUTH_CLIENT_ID = createField(DSL.name("auth_client_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.admin_event_entity.auth_user_id</code>.
     */
    public final TableField<AdminEventEntityRecord, String> AUTH_USER_ID = createField(DSL.name("auth_user_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.admin_event_entity.ip_address</code>.
     */
    public final TableField<AdminEventEntityRecord, String> IP_ADDRESS = createField(DSL.name("ip_address"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.admin_event_entity.resource_path</code>.
     */
    public final TableField<AdminEventEntityRecord, String> RESOURCE_PATH = createField(DSL.name("resource_path"), org.jooq.impl.SQLDataType.VARCHAR(2550), this, "");

    /**
     * The column <code>public.admin_event_entity.representation</code>.
     */
    public final TableField<AdminEventEntityRecord, String> REPRESENTATION = createField(DSL.name("representation"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.admin_event_entity.error</code>.
     */
    public final TableField<AdminEventEntityRecord, String> ERROR = createField(DSL.name("error"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.admin_event_entity.resource_type</code>.
     */
    public final TableField<AdminEventEntityRecord, String> RESOURCE_TYPE = createField(DSL.name("resource_type"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * Create a <code>public.admin_event_entity</code> table reference
     */
    public AdminEventEntity() {
        this(DSL.name("admin_event_entity"), null);
    }

    /**
     * Create an aliased <code>public.admin_event_entity</code> table reference
     */
    public AdminEventEntity(String alias) {
        this(DSL.name(alias), ADMIN_EVENT_ENTITY);
    }

    /**
     * Create an aliased <code>public.admin_event_entity</code> table reference
     */
    public AdminEventEntity(Name alias) {
        this(alias, ADMIN_EVENT_ENTITY);
    }

    private AdminEventEntity(Name alias, Table<AdminEventEntityRecord> aliased) {
        this(alias, aliased, null);
    }

    private AdminEventEntity(Name alias, Table<AdminEventEntityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> AdminEventEntity(Table<O> child, ForeignKey<O, AdminEventEntityRecord> key) {
        super(child, key, ADMIN_EVENT_ENTITY);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<AdminEventEntityRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_ADMIN_EVENT_ENTITY;
    }

    @Override
    public List<UniqueKey<AdminEventEntityRecord>> getKeys() {
        return Arrays.<UniqueKey<AdminEventEntityRecord>>asList(Keys.CONSTRAINT_ADMIN_EVENT_ENTITY);
    }

    @Override
    public AdminEventEntity as(String alias) {
        return new AdminEventEntity(DSL.name(alias), this);
    }

    @Override
    public AdminEventEntity as(Name alias) {
        return new AdminEventEntity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AdminEventEntity rename(String name) {
        return new AdminEventEntity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AdminEventEntity rename(Name name) {
        return new AdminEventEntity(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, Long, String, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
