/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables;


import com.hiddenswitch.framework.schema.keycloak.Keycloak;
import com.hiddenswitch.framework.schema.keycloak.Keys;
import com.hiddenswitch.framework.schema.keycloak.tables.records.ResourceServerRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceServer extends TableImpl<ResourceServerRecord> {

    private static final long serialVersionUID = -248243121;

    /**
     * The reference instance of <code>keycloak.resource_server</code>
     */
    public static final ResourceServer RESOURCE_SERVER = new ResourceServer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourceServerRecord> getRecordType() {
        return ResourceServerRecord.class;
    }

    /**
     * The column <code>keycloak.resource_server.id</code>.
     */
    public final TableField<ResourceServerRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>keycloak.resource_server.allow_rs_remote_mgmt</code>.
     */
    public final TableField<ResourceServerRecord, Boolean> ALLOW_RS_REMOTE_MGMT = createField(DSL.name("allow_rs_remote_mgmt"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>keycloak.resource_server.policy_enforce_mode</code>.
     */
    public final TableField<ResourceServerRecord, String> POLICY_ENFORCE_MODE = createField(DSL.name("policy_enforce_mode"), org.jooq.impl.SQLDataType.VARCHAR(15).nullable(false), this, "");

    /**
     * Create a <code>keycloak.resource_server</code> table reference
     */
    public ResourceServer() {
        this(DSL.name("resource_server"), null);
    }

    /**
     * Create an aliased <code>keycloak.resource_server</code> table reference
     */
    public ResourceServer(String alias) {
        this(DSL.name(alias), RESOURCE_SERVER);
    }

    /**
     * Create an aliased <code>keycloak.resource_server</code> table reference
     */
    public ResourceServer(Name alias) {
        this(alias, RESOURCE_SERVER);
    }

    private ResourceServer(Name alias, Table<ResourceServerRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResourceServer(Name alias, Table<ResourceServerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ResourceServer(Table<O> child, ForeignKey<O, ResourceServerRecord> key) {
        super(child, key, RESOURCE_SERVER);
    }

    @Override
    public Schema getSchema() {
        return Keycloak.KEYCLOAK;
    }

    @Override
    public UniqueKey<ResourceServerRecord> getPrimaryKey() {
        return Keys.PK_RESOURCE_SERVER;
    }

    @Override
    public List<UniqueKey<ResourceServerRecord>> getKeys() {
        return Arrays.<UniqueKey<ResourceServerRecord>>asList(Keys.PK_RESOURCE_SERVER);
    }

    @Override
    public ResourceServer as(String alias) {
        return new ResourceServer(DSL.name(alias), this);
    }

    @Override
    public ResourceServer as(Name alias) {
        return new ResourceServer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceServer rename(String name) {
        return new ResourceServer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourceServer rename(Name name) {
        return new ResourceServer(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Boolean, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
