/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IFedUserCredential;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FedUserCredential implements VertxPojo, IFedUserCredential {

    private static final long serialVersionUID = 1292440032;

    private String  id;
    private String  device;
    private Integer hashIterations;
    private byte[]  salt;
    private String  type;
    private String  value;
    private Long    createdDate;
    private Integer counter;
    private Integer digits;
    private Integer period;
    private String  algorithm;
    private String  userId;
    private String  realmId;
    private String  storageProviderId;

    public FedUserCredential() {}

    public FedUserCredential(IFedUserCredential value) {
        this.id = value.getId();
        this.device = value.getDevice();
        this.hashIterations = value.getHashIterations();
        this.salt = value.getSalt();
        this.type = value.getType();
        this.value = value.getValue();
        this.createdDate = value.getCreatedDate();
        this.counter = value.getCounter();
        this.digits = value.getDigits();
        this.period = value.getPeriod();
        this.algorithm = value.getAlgorithm();
        this.userId = value.getUserId();
        this.realmId = value.getRealmId();
        this.storageProviderId = value.getStorageProviderId();
    }

    public FedUserCredential(
        String  id,
        String  device,
        Integer hashIterations,
        byte[]  salt,
        String  type,
        String  value,
        Long    createdDate,
        Integer counter,
        Integer digits,
        Integer period,
        String  algorithm,
        String  userId,
        String  realmId,
        String  storageProviderId
    ) {
        this.id = id;
        this.device = device;
        this.hashIterations = hashIterations;
        this.salt = salt;
        this.type = type;
        this.value = value;
        this.createdDate = createdDate;
        this.counter = counter;
        this.digits = digits;
        this.period = period;
        this.algorithm = algorithm;
        this.userId = userId;
        this.realmId = realmId;
        this.storageProviderId = storageProviderId;
    }

    public FedUserCredential(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    @Override
    public String getId() {
        return this.id;
    }

    @Override
    public FedUserCredential setId(String id) {
        this.id = id;
        return this;
    }

    @Override
    public String getDevice() {
        return this.device;
    }

    @Override
    public FedUserCredential setDevice(String device) {
        this.device = device;
        return this;
    }

    @Override
    public Integer getHashIterations() {
        return this.hashIterations;
    }

    @Override
    public FedUserCredential setHashIterations(Integer hashIterations) {
        this.hashIterations = hashIterations;
        return this;
    }

    @Override
    public byte[] getSalt() {
        return this.salt;
    }

    @Override
    public FedUserCredential setSalt(byte[] salt) {
        this.salt = salt;
        return this;
    }

    @Override
    public String getType() {
        return this.type;
    }

    @Override
    public FedUserCredential setType(String type) {
        this.type = type;
        return this;
    }

    @Override
    public String getValue() {
        return this.value;
    }

    @Override
    public FedUserCredential setValue(String value) {
        this.value = value;
        return this;
    }

    @Override
    public Long getCreatedDate() {
        return this.createdDate;
    }

    @Override
    public FedUserCredential setCreatedDate(Long createdDate) {
        this.createdDate = createdDate;
        return this;
    }

    @Override
    public Integer getCounter() {
        return this.counter;
    }

    @Override
    public FedUserCredential setCounter(Integer counter) {
        this.counter = counter;
        return this;
    }

    @Override
    public Integer getDigits() {
        return this.digits;
    }

    @Override
    public FedUserCredential setDigits(Integer digits) {
        this.digits = digits;
        return this;
    }

    @Override
    public Integer getPeriod() {
        return this.period;
    }

    @Override
    public FedUserCredential setPeriod(Integer period) {
        this.period = period;
        return this;
    }

    @Override
    public String getAlgorithm() {
        return this.algorithm;
    }

    @Override
    public FedUserCredential setAlgorithm(String algorithm) {
        this.algorithm = algorithm;
        return this;
    }

    @Override
    public String getUserId() {
        return this.userId;
    }

    @Override
    public FedUserCredential setUserId(String userId) {
        this.userId = userId;
        return this;
    }

    @Override
    public String getRealmId() {
        return this.realmId;
    }

    @Override
    public FedUserCredential setRealmId(String realmId) {
        this.realmId = realmId;
        return this;
    }

    @Override
    public String getStorageProviderId() {
        return this.storageProviderId;
    }

    @Override
    public FedUserCredential setStorageProviderId(String storageProviderId) {
        this.storageProviderId = storageProviderId;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FedUserCredential (");

        sb.append(id);
        sb.append(", ").append(device);
        sb.append(", ").append(hashIterations);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(type);
        sb.append(", ").append(value);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(counter);
        sb.append(", ").append(digits);
        sb.append(", ").append(period);
        sb.append(", ").append(algorithm);
        sb.append(", ").append(userId);
        sb.append(", ").append(realmId);
        sb.append(", ").append(storageProviderId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFedUserCredential from) {
        setId(from.getId());
        setDevice(from.getDevice());
        setHashIterations(from.getHashIterations());
        setSalt(from.getSalt());
        setType(from.getType());
        setValue(from.getValue());
        setCreatedDate(from.getCreatedDate());
        setCounter(from.getCounter());
        setDigits(from.getDigits());
        setPeriod(from.getPeriod());
        setAlgorithm(from.getAlgorithm());
        setUserId(from.getUserId());
        setRealmId(from.getRealmId());
        setStorageProviderId(from.getStorageProviderId());
    }

    @Override
    public <E extends IFedUserCredential> E into(E into) {
        into.from(this);
        return into;
    }
}
