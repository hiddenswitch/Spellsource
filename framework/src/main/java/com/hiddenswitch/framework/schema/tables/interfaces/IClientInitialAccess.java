/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IClientInitialAccess extends VertxPojo, Serializable {

    /**
     * Setter for <code>public.client_initial_access.id</code>.
     */
    public IClientInitialAccess setId(String value);

    /**
     * Getter for <code>public.client_initial_access.id</code>.
     */
    public String getId();

    /**
     * Setter for <code>public.client_initial_access.realm_id</code>.
     */
    public IClientInitialAccess setRealmId(String value);

    /**
     * Getter for <code>public.client_initial_access.realm_id</code>.
     */
    public String getRealmId();

    /**
     * Setter for <code>public.client_initial_access.timestamp</code>.
     */
    public IClientInitialAccess setTimestamp(Integer value);

    /**
     * Getter for <code>public.client_initial_access.timestamp</code>.
     */
    public Integer getTimestamp();

    /**
     * Setter for <code>public.client_initial_access.expiration</code>.
     */
    public IClientInitialAccess setExpiration(Integer value);

    /**
     * Getter for <code>public.client_initial_access.expiration</code>.
     */
    public Integer getExpiration();

    /**
     * Setter for <code>public.client_initial_access.count</code>.
     */
    public IClientInitialAccess setCount(Integer value);

    /**
     * Getter for <code>public.client_initial_access.count</code>.
     */
    public Integer getCount();

    /**
     * Setter for <code>public.client_initial_access.remaining_count</code>.
     */
    public IClientInitialAccess setRemainingCount(Integer value);

    /**
     * Getter for <code>public.client_initial_access.remaining_count</code>.
     */
    public Integer getRemainingCount();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IClientInitialAccess
     */
    public void from(IClientInitialAccess from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IClientInitialAccess
     */
    public <E extends IClientInitialAccess> E into(E into);

    @Override
    public default IClientInitialAccess fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setId(json.getString("id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("id","java.lang.String",e);
        }
        try {
            setRealmId(json.getString("realm_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("realm_id","java.lang.String",e);
        }
        try {
            setTimestamp(json.getInteger("timestamp"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("timestamp","java.lang.Integer",e);
        }
        try {
            setExpiration(json.getInteger("expiration"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("expiration","java.lang.Integer",e);
        }
        try {
            setCount(json.getInteger("count"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("count","java.lang.Integer",e);
        }
        try {
            setRemainingCount(json.getInteger("remaining_count"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("remaining_count","java.lang.Integer",e);
        }
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("realm_id",getRealmId());
        json.put("timestamp",getTimestamp());
        json.put("expiration",getExpiration());
        json.put("count",getCount());
        json.put("remaining_count",getRemainingCount());
        return json;
    }

}
