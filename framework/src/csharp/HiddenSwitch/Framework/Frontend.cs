// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api/frontend.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenMatch {

  /// <summary>Holder for reflection information generated from api/frontend.proto</summary>
  public static partial class FrontendReflection {

    #region Descriptor
    /// <summary>File descriptor for api/frontend.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FrontendReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJhcGkvZnJvbnRlbmQucHJvdG8SCW9wZW5tYXRjaBoSYXBpL21lc3NhZ2Vz",
            "LnByb3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGixwcm90b2Mt",
            "Z2VuLXN3YWdnZXIvb3B0aW9ucy9hbm5vdGF0aW9ucy5wcm90bxobZ29vZ2xl",
            "L3Byb3RvYnVmL2VtcHR5LnByb3RvIjgKE0NyZWF0ZVRpY2tldFJlcXVlc3QS",
            "IQoGdGlja2V0GAEgASgLMhEub3Blbm1hdGNoLlRpY2tldCIoChNEZWxldGVU",
            "aWNrZXRSZXF1ZXN0EhEKCXRpY2tldF9pZBgBIAEoCSIlChBHZXRUaWNrZXRS",
            "ZXF1ZXN0EhEKCXRpY2tldF9pZBgBIAEoCSIsChdXYXRjaEFzc2lnbm1lbnRz",
            "UmVxdWVzdBIRCgl0aWNrZXRfaWQYASABKAkiRQoYV2F0Y2hBc3NpZ25tZW50",
            "c1Jlc3BvbnNlEikKCmFzc2lnbm1lbnQYASABKAsyFS5vcGVubWF0Y2guQXNz",
            "aWdubWVudCJcChpBY2tub3dsZWRnZUJhY2tmaWxsUmVxdWVzdBITCgtiYWNr",
            "ZmlsbF9pZBgBIAEoCRIpCgphc3NpZ25tZW50GAIgASgLMhUub3Blbm1hdGNo",
            "LkFzc2lnbm1lbnQiPgoVQ3JlYXRlQmFja2ZpbGxSZXF1ZXN0EiUKCGJhY2tm",
            "aWxsGAEgASgLMhMub3Blbm1hdGNoLkJhY2tmaWxsIiwKFURlbGV0ZUJhY2tm",
            "aWxsUmVxdWVzdBITCgtiYWNrZmlsbF9pZBgBIAEoCSIpChJHZXRCYWNrZmls",
            "bFJlcXVlc3QSEwoLYmFja2ZpbGxfaWQYASABKAkiRQoVVXBkYXRlQmFja2Zp",
            "bGxSZXF1ZXN0EiwKD2JhY2tmaWxsX3RpY2tldBgBIAEoCzITLm9wZW5tYXRj",
            "aC5CYWNrZmlsbDL3CAoPRnJvbnRlbmRTZXJ2aWNlEmkKDENyZWF0ZVRpY2tl",
            "dBIeLm9wZW5tYXRjaC5DcmVhdGVUaWNrZXRSZXF1ZXN0GhEub3Blbm1hdGNo",
            "LlRpY2tldCImgtPkkwIgIhsvdjEvZnJvbnRlbmRzZXJ2aWNlL3RpY2tldHM6",
            "ASoSdwoMRGVsZXRlVGlja2V0Eh4ub3Blbm1hdGNoLkRlbGV0ZVRpY2tldFJl",
            "cXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiL4LT5JMCKSonL3YxL2Zy",
            "b250ZW5kc2VydmljZS90aWNrZXRzL3t0aWNrZXRfaWR9EmwKCUdldFRpY2tl",
            "dBIbLm9wZW5tYXRjaC5HZXRUaWNrZXRSZXF1ZXN0GhEub3Blbm1hdGNoLlRp",
            "Y2tldCIvgtPkkwIpEicvdjEvZnJvbnRlbmRzZXJ2aWNlL3RpY2tldHMve3Rp",
            "Y2tldF9pZH0SmgEKEFdhdGNoQXNzaWdubWVudHMSIi5vcGVubWF0Y2guV2F0",
            "Y2hBc3NpZ25tZW50c1JlcXVlc3QaIy5vcGVubWF0Y2guV2F0Y2hBc3NpZ25t",
            "ZW50c1Jlc3BvbnNlIjuC0+STAjUSMy92MS9mcm9udGVuZHNlcnZpY2UvdGlj",
            "a2V0cy97dGlja2V0X2lkfS9hc3NpZ25tZW50czABEpUBChNBY2tub3dsZWRn",
            "ZUJhY2tmaWxsEiUub3Blbm1hdGNoLkFja25vd2xlZGdlQmFja2ZpbGxSZXF1",
            "ZXN0GhMub3Blbm1hdGNoLkJhY2tmaWxsIkKC0+STAjwiNy92MS9mcm9udGVu",
            "ZHNlcnZpY2UvYmFja2ZpbGxzL3tiYWNrZmlsbF9pZH0vYWNrbm93bGVkZ2U6",
            "ASoScQoOQ3JlYXRlQmFja2ZpbGwSIC5vcGVubWF0Y2guQ3JlYXRlQmFja2Zp",
            "bGxSZXF1ZXN0GhMub3Blbm1hdGNoLkJhY2tmaWxsIiiC0+STAiIiHS92MS9m",
            "cm9udGVuZHNlcnZpY2UvYmFja2ZpbGxzOgEqEn8KDkRlbGV0ZUJhY2tmaWxs",
            "EiAub3Blbm1hdGNoLkRlbGV0ZUJhY2tmaWxsUmVxdWVzdBoWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eSIzgtPkkwItKisvdjEvZnJvbnRlbmRzZXJ2aWNlL2Jh",
            "Y2tmaWxscy97YmFja2ZpbGxfaWR9EnYKC0dldEJhY2tmaWxsEh0ub3Blbm1h",
            "dGNoLkdldEJhY2tmaWxsUmVxdWVzdBoTLm9wZW5tYXRjaC5CYWNrZmlsbCIz",
            "gtPkkwItEisvdjEvZnJvbnRlbmRzZXJ2aWNlL2JhY2tmaWxscy97YmFja2Zp",
            "bGxfaWR9EnEKDlVwZGF0ZUJhY2tmaWxsEiAub3Blbm1hdGNoLlVwZGF0ZUJh",
            "Y2tmaWxsUmVxdWVzdBoTLm9wZW5tYXRjaC5CYWNrZmlsbCIogtPkkwIiMh0v",
            "djEvZnJvbnRlbmRzZXJ2aWNlL2JhY2tmaWxsczoBKkKLA1ogb3Blbi1tYXRj",
            "aC5kZXYvb3Blbi1tYXRjaC9wa2cvcGKqAglPcGVuTWF0Y2iSQdkCErIBCghG",
            "cm9udGVuZCJJCgpPcGVuIE1hdGNoEhZodHRwczovL29wZW4tbWF0Y2guZGV2",
            "GiNvcGVuLW1hdGNoLWRpc2N1c3NAZ29vZ2xlZ3JvdXBzLmNvbSpWChJBcGFj",
            "aGUgMi4wIExpY2Vuc2USQGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGVmb3Jn",
            "YW1lcy9vcGVuLW1hdGNoL2Jsb2IvbWFzdGVyL0xJQ0VOU0UyAzEuMCoCAQIy",
            "EGFwcGxpY2F0aW9uL2pzb246EGFwcGxpY2F0aW9uL2pzb25SOwoDNDA0EjQK",
            "KlJldHVybmVkIHdoZW4gdGhlIHJlc291cmNlIGRvZXMgbm90IGV4aXN0LhIG",
            "CgSaAgEHcj0KGE9wZW4gTWF0Y2ggRG9jdW1lbnRhdGlvbhIhaHR0cHM6Ly9v",
            "cGVuLW1hdGNoLmRldi9zaXRlL2RvY3MvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::OpenMatch.MessagesReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Grpc.Gateway.ProtocGenSwagger.Options.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenMatch.CreateTicketRequest), global::OpenMatch.CreateTicketRequest.Parser, new[]{ "Ticket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenMatch.DeleteTicketRequest), global::OpenMatch.DeleteTicketRequest.Parser, new[]{ "TicketId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenMatch.GetTicketRequest), global::OpenMatch.GetTicketRequest.Parser, new[]{ "TicketId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenMatch.WatchAssignmentsRequest), global::OpenMatch.WatchAssignmentsRequest.Parser, new[]{ "TicketId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenMatch.WatchAssignmentsResponse), global::OpenMatch.WatchAssignmentsResponse.Parser, new[]{ "Assignment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenMatch.AcknowledgeBackfillRequest), global::OpenMatch.AcknowledgeBackfillRequest.Parser, new[]{ "BackfillId", "Assignment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenMatch.CreateBackfillRequest), global::OpenMatch.CreateBackfillRequest.Parser, new[]{ "Backfill" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenMatch.DeleteBackfillRequest), global::OpenMatch.DeleteBackfillRequest.Parser, new[]{ "BackfillId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenMatch.GetBackfillRequest), global::OpenMatch.GetBackfillRequest.Parser, new[]{ "BackfillId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenMatch.UpdateBackfillRequest), global::OpenMatch.UpdateBackfillRequest.Parser, new[]{ "BackfillTicket" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CreateTicketRequest : pb::IMessage<CreateTicketRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateTicketRequest> _parser = new pb::MessageParser<CreateTicketRequest>(() => new CreateTicketRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTicketRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenMatch.FrontendReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTicketRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTicketRequest(CreateTicketRequest other) : this() {
      ticket_ = other.ticket_ != null ? other.ticket_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTicketRequest Clone() {
      return new CreateTicketRequest(this);
    }

    /// <summary>Field number for the "ticket" field.</summary>
    public const int TicketFieldNumber = 1;
    private global::OpenMatch.Ticket ticket_;
    /// <summary>
    /// A Ticket object with SearchFields defined.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OpenMatch.Ticket Ticket {
      get { return ticket_; }
      set {
        ticket_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTicketRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTicketRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ticket, other.Ticket)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ticket_ != null) hash ^= Ticket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ticket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ticket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ticket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ticket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ticket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTicketRequest other) {
      if (other == null) {
        return;
      }
      if (other.ticket_ != null) {
        if (ticket_ == null) {
          Ticket = new global::OpenMatch.Ticket();
        }
        Ticket.MergeFrom(other.Ticket);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ticket_ == null) {
              Ticket = new global::OpenMatch.Ticket();
            }
            input.ReadMessage(Ticket);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (ticket_ == null) {
              Ticket = new global::OpenMatch.Ticket();
            }
            input.ReadMessage(Ticket);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeleteTicketRequest : pb::IMessage<DeleteTicketRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteTicketRequest> _parser = new pb::MessageParser<DeleteTicketRequest>(() => new DeleteTicketRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTicketRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenMatch.FrontendReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTicketRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTicketRequest(DeleteTicketRequest other) : this() {
      ticketId_ = other.ticketId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTicketRequest Clone() {
      return new DeleteTicketRequest(this);
    }

    /// <summary>Field number for the "ticket_id" field.</summary>
    public const int TicketIdFieldNumber = 1;
    private string ticketId_ = "";
    /// <summary>
    /// A TicketId of a generated Ticket to be deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTicketRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTicketRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TicketId != other.TicketId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TicketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TicketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTicketRequest other) {
      if (other == null) {
        return;
      }
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetTicketRequest : pb::IMessage<GetTicketRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTicketRequest> _parser = new pb::MessageParser<GetTicketRequest>(() => new GetTicketRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTicketRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenMatch.FrontendReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketRequest(GetTicketRequest other) : this() {
      ticketId_ = other.ticketId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketRequest Clone() {
      return new GetTicketRequest(this);
    }

    /// <summary>Field number for the "ticket_id" field.</summary>
    public const int TicketIdFieldNumber = 1;
    private string ticketId_ = "";
    /// <summary>
    /// A TicketId of a generated Ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTicketRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTicketRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TicketId != other.TicketId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TicketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TicketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTicketRequest other) {
      if (other == null) {
        return;
      }
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WatchAssignmentsRequest : pb::IMessage<WatchAssignmentsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WatchAssignmentsRequest> _parser = new pb::MessageParser<WatchAssignmentsRequest>(() => new WatchAssignmentsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WatchAssignmentsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenMatch.FrontendReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchAssignmentsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchAssignmentsRequest(WatchAssignmentsRequest other) : this() {
      ticketId_ = other.ticketId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchAssignmentsRequest Clone() {
      return new WatchAssignmentsRequest(this);
    }

    /// <summary>Field number for the "ticket_id" field.</summary>
    public const int TicketIdFieldNumber = 1;
    private string ticketId_ = "";
    /// <summary>
    /// A TicketId of a generated Ticket to get updates on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WatchAssignmentsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WatchAssignmentsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TicketId != other.TicketId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TicketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TicketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WatchAssignmentsRequest other) {
      if (other == null) {
        return;
      }
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WatchAssignmentsResponse : pb::IMessage<WatchAssignmentsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WatchAssignmentsResponse> _parser = new pb::MessageParser<WatchAssignmentsResponse>(() => new WatchAssignmentsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WatchAssignmentsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenMatch.FrontendReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchAssignmentsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchAssignmentsResponse(WatchAssignmentsResponse other) : this() {
      assignment_ = other.assignment_ != null ? other.assignment_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WatchAssignmentsResponse Clone() {
      return new WatchAssignmentsResponse(this);
    }

    /// <summary>Field number for the "assignment" field.</summary>
    public const int AssignmentFieldNumber = 1;
    private global::OpenMatch.Assignment assignment_;
    /// <summary>
    /// An updated Assignment of the requested Ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OpenMatch.Assignment Assignment {
      get { return assignment_; }
      set {
        assignment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WatchAssignmentsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WatchAssignmentsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Assignment, other.Assignment)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (assignment_ != null) hash ^= Assignment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (assignment_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Assignment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (assignment_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Assignment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (assignment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Assignment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WatchAssignmentsResponse other) {
      if (other == null) {
        return;
      }
      if (other.assignment_ != null) {
        if (assignment_ == null) {
          Assignment = new global::OpenMatch.Assignment();
        }
        Assignment.MergeFrom(other.Assignment);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (assignment_ == null) {
              Assignment = new global::OpenMatch.Assignment();
            }
            input.ReadMessage(Assignment);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (assignment_ == null) {
              Assignment = new global::OpenMatch.Assignment();
            }
            input.ReadMessage(Assignment);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// BETA FEATURE WARNING: This Request message is not finalized and still subject
  /// to possible change or removal.
  /// </summary>
  public sealed partial class AcknowledgeBackfillRequest : pb::IMessage<AcknowledgeBackfillRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AcknowledgeBackfillRequest> _parser = new pb::MessageParser<AcknowledgeBackfillRequest>(() => new AcknowledgeBackfillRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcknowledgeBackfillRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenMatch.FrontendReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcknowledgeBackfillRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcknowledgeBackfillRequest(AcknowledgeBackfillRequest other) : this() {
      backfillId_ = other.backfillId_;
      assignment_ = other.assignment_ != null ? other.assignment_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcknowledgeBackfillRequest Clone() {
      return new AcknowledgeBackfillRequest(this);
    }

    /// <summary>Field number for the "backfill_id" field.</summary>
    public const int BackfillIdFieldNumber = 1;
    private string backfillId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackfillId {
      get { return backfillId_; }
      set {
        backfillId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assignment" field.</summary>
    public const int AssignmentFieldNumber = 2;
    private global::OpenMatch.Assignment assignment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OpenMatch.Assignment Assignment {
      get { return assignment_; }
      set {
        assignment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcknowledgeBackfillRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcknowledgeBackfillRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BackfillId != other.BackfillId) return false;
      if (!object.Equals(Assignment, other.Assignment)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BackfillId.Length != 0) hash ^= BackfillId.GetHashCode();
      if (assignment_ != null) hash ^= Assignment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BackfillId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BackfillId);
      }
      if (assignment_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Assignment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BackfillId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BackfillId);
      }
      if (assignment_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Assignment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BackfillId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackfillId);
      }
      if (assignment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Assignment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcknowledgeBackfillRequest other) {
      if (other == null) {
        return;
      }
      if (other.BackfillId.Length != 0) {
        BackfillId = other.BackfillId;
      }
      if (other.assignment_ != null) {
        if (assignment_ == null) {
          Assignment = new global::OpenMatch.Assignment();
        }
        Assignment.MergeFrom(other.Assignment);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BackfillId = input.ReadString();
            break;
          }
          case 18: {
            if (assignment_ == null) {
              Assignment = new global::OpenMatch.Assignment();
            }
            input.ReadMessage(Assignment);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BackfillId = input.ReadString();
            break;
          }
          case 18: {
            if (assignment_ == null) {
              Assignment = new global::OpenMatch.Assignment();
            }
            input.ReadMessage(Assignment);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// BETA FEATURE WARNING: This Request message is not finalized and still subject
  /// to possible change or removal.
  /// </summary>
  public sealed partial class CreateBackfillRequest : pb::IMessage<CreateBackfillRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateBackfillRequest> _parser = new pb::MessageParser<CreateBackfillRequest>(() => new CreateBackfillRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateBackfillRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenMatch.FrontendReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBackfillRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBackfillRequest(CreateBackfillRequest other) : this() {
      backfill_ = other.backfill_ != null ? other.backfill_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBackfillRequest Clone() {
      return new CreateBackfillRequest(this);
    }

    /// <summary>Field number for the "backfill" field.</summary>
    public const int BackfillFieldNumber = 1;
    private global::OpenMatch.Backfill backfill_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OpenMatch.Backfill Backfill {
      get { return backfill_; }
      set {
        backfill_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateBackfillRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateBackfillRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Backfill, other.Backfill)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (backfill_ != null) hash ^= Backfill.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (backfill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Backfill);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (backfill_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Backfill);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (backfill_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Backfill);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateBackfillRequest other) {
      if (other == null) {
        return;
      }
      if (other.backfill_ != null) {
        if (backfill_ == null) {
          Backfill = new global::OpenMatch.Backfill();
        }
        Backfill.MergeFrom(other.Backfill);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (backfill_ == null) {
              Backfill = new global::OpenMatch.Backfill();
            }
            input.ReadMessage(Backfill);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (backfill_ == null) {
              Backfill = new global::OpenMatch.Backfill();
            }
            input.ReadMessage(Backfill);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// BETA FEATURE WARNING: This Request message is not finalized and still subject
  /// to possible change or removal.
  /// </summary>
  public sealed partial class DeleteBackfillRequest : pb::IMessage<DeleteBackfillRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteBackfillRequest> _parser = new pb::MessageParser<DeleteBackfillRequest>(() => new DeleteBackfillRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteBackfillRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenMatch.FrontendReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBackfillRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBackfillRequest(DeleteBackfillRequest other) : this() {
      backfillId_ = other.backfillId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteBackfillRequest Clone() {
      return new DeleteBackfillRequest(this);
    }

    /// <summary>Field number for the "backfill_id" field.</summary>
    public const int BackfillIdFieldNumber = 1;
    private string backfillId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackfillId {
      get { return backfillId_; }
      set {
        backfillId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteBackfillRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteBackfillRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BackfillId != other.BackfillId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BackfillId.Length != 0) hash ^= BackfillId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BackfillId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BackfillId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BackfillId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BackfillId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BackfillId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackfillId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteBackfillRequest other) {
      if (other == null) {
        return;
      }
      if (other.BackfillId.Length != 0) {
        BackfillId = other.BackfillId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BackfillId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BackfillId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// BETA FEATURE WARNING: This Request message is not finalized and still subject
  /// to possible change or removal.
  /// </summary>
  public sealed partial class GetBackfillRequest : pb::IMessage<GetBackfillRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBackfillRequest> _parser = new pb::MessageParser<GetBackfillRequest>(() => new GetBackfillRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBackfillRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenMatch.FrontendReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBackfillRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBackfillRequest(GetBackfillRequest other) : this() {
      backfillId_ = other.backfillId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBackfillRequest Clone() {
      return new GetBackfillRequest(this);
    }

    /// <summary>Field number for the "backfill_id" field.</summary>
    public const int BackfillIdFieldNumber = 1;
    private string backfillId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackfillId {
      get { return backfillId_; }
      set {
        backfillId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBackfillRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBackfillRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BackfillId != other.BackfillId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BackfillId.Length != 0) hash ^= BackfillId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BackfillId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BackfillId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BackfillId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BackfillId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BackfillId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackfillId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBackfillRequest other) {
      if (other == null) {
        return;
      }
      if (other.BackfillId.Length != 0) {
        BackfillId = other.BackfillId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BackfillId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BackfillId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// UpdateBackfillRequest - update searchFields, extensions and set assignment.
  /// 
  /// BETA FEATURE WARNING: This Request message is not finalized and still subject
  /// to possible change or removal.
  /// </summary>
  public sealed partial class UpdateBackfillRequest : pb::IMessage<UpdateBackfillRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateBackfillRequest> _parser = new pb::MessageParser<UpdateBackfillRequest>(() => new UpdateBackfillRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateBackfillRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenMatch.FrontendReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBackfillRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBackfillRequest(UpdateBackfillRequest other) : this() {
      backfillTicket_ = other.backfillTicket_ != null ? other.backfillTicket_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateBackfillRequest Clone() {
      return new UpdateBackfillRequest(this);
    }

    /// <summary>Field number for the "backfill_ticket" field.</summary>
    public const int BackfillTicketFieldNumber = 1;
    private global::OpenMatch.Backfill backfillTicket_;
    /// <summary>
    /// A Backfill object with SearchFields defined.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OpenMatch.Backfill BackfillTicket {
      get { return backfillTicket_; }
      set {
        backfillTicket_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateBackfillRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateBackfillRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BackfillTicket, other.BackfillTicket)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (backfillTicket_ != null) hash ^= BackfillTicket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (backfillTicket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BackfillTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (backfillTicket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BackfillTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (backfillTicket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackfillTicket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateBackfillRequest other) {
      if (other == null) {
        return;
      }
      if (other.backfillTicket_ != null) {
        if (backfillTicket_ == null) {
          BackfillTicket = new global::OpenMatch.Backfill();
        }
        BackfillTicket.MergeFrom(other.BackfillTicket);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (backfillTicket_ == null) {
              BackfillTicket = new global::OpenMatch.Backfill();
            }
            input.ReadMessage(BackfillTicket);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (backfillTicket_ == null) {
              BackfillTicket = new global::OpenMatch.Backfill();
            }
            input.ReadMessage(BackfillTicket);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
