/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IBrokerLink extends VertxPojo, Serializable {

    /**
     * Setter for <code>keycloak.broker_link.identity_provider</code>.
     */
    public IBrokerLink setIdentityProvider(String value);

    /**
     * Getter for <code>keycloak.broker_link.identity_provider</code>.
     */
    public String getIdentityProvider();

    /**
     * Setter for <code>keycloak.broker_link.storage_provider_id</code>.
     */
    public IBrokerLink setStorageProviderId(String value);

    /**
     * Getter for <code>keycloak.broker_link.storage_provider_id</code>.
     */
    public String getStorageProviderId();

    /**
     * Setter for <code>keycloak.broker_link.realm_id</code>.
     */
    public IBrokerLink setRealmId(String value);

    /**
     * Getter for <code>keycloak.broker_link.realm_id</code>.
     */
    public String getRealmId();

    /**
     * Setter for <code>keycloak.broker_link.broker_user_id</code>.
     */
    public IBrokerLink setBrokerUserId(String value);

    /**
     * Getter for <code>keycloak.broker_link.broker_user_id</code>.
     */
    public String getBrokerUserId();

    /**
     * Setter for <code>keycloak.broker_link.broker_username</code>.
     */
    public IBrokerLink setBrokerUsername(String value);

    /**
     * Getter for <code>keycloak.broker_link.broker_username</code>.
     */
    public String getBrokerUsername();

    /**
     * Setter for <code>keycloak.broker_link.token</code>.
     */
    public IBrokerLink setToken(String value);

    /**
     * Getter for <code>keycloak.broker_link.token</code>.
     */
    public String getToken();

    /**
     * Setter for <code>keycloak.broker_link.user_id</code>.
     */
    public IBrokerLink setUserId(String value);

    /**
     * Getter for <code>keycloak.broker_link.user_id</code>.
     */
    public String getUserId();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IBrokerLink
     */
    public void from(IBrokerLink from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IBrokerLink
     */
    public <E extends IBrokerLink> E into(E into);

        @Override
        public default IBrokerLink fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setIdentityProvider,json::getString,"identity_provider","java.lang.String");
                setOrThrow(this::setStorageProviderId,json::getString,"storage_provider_id","java.lang.String");
                setOrThrow(this::setRealmId,json::getString,"realm_id","java.lang.String");
                setOrThrow(this::setBrokerUserId,json::getString,"broker_user_id","java.lang.String");
                setOrThrow(this::setBrokerUsername,json::getString,"broker_username","java.lang.String");
                setOrThrow(this::setToken,json::getString,"token","java.lang.String");
                setOrThrow(this::setUserId,json::getString,"user_id","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("identity_provider",getIdentityProvider());
                json.put("storage_provider_id",getStorageProviderId());
                json.put("realm_id",getRealmId());
                json.put("broker_user_id",getBrokerUserId());
                json.put("broker_username",getBrokerUsername());
                json.put("token",getToken());
                json.put("user_id",getUserId());
                return json;
        }

}
