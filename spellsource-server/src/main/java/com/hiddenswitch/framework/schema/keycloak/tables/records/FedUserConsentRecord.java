/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.records;


import com.hiddenswitch.framework.schema.keycloak.tables.FedUserConsent;
import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IFedUserConsent;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FedUserConsentRecord extends UpdatableRecordImpl<FedUserConsentRecord> implements VertxPojo, Record7<String, String, String, String, String, Long, Long>, IFedUserConsent {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>keycloak.fed_user_consent.id</code>.
     */
    @Override
    public FedUserConsentRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_consent.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>keycloak.fed_user_consent.client_id</code>.
     */
    @Override
    public FedUserConsentRecord setClientId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_consent.client_id</code>.
     */
    @Override
    public String getClientId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>keycloak.fed_user_consent.user_id</code>.
     */
    @Override
    public FedUserConsentRecord setUserId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_consent.user_id</code>.
     */
    @Override
    public String getUserId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>keycloak.fed_user_consent.realm_id</code>.
     */
    @Override
    public FedUserConsentRecord setRealmId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_consent.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>keycloak.fed_user_consent.storage_provider_id</code>.
     */
    @Override
    public FedUserConsentRecord setStorageProviderId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_consent.storage_provider_id</code>.
     */
    @Override
    public String getStorageProviderId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>keycloak.fed_user_consent.created_date</code>.
     */
    @Override
    public FedUserConsentRecord setCreatedDate(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_consent.created_date</code>.
     */
    @Override
    public Long getCreatedDate() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>keycloak.fed_user_consent.last_updated_date</code>.
     */
    @Override
    public FedUserConsentRecord setLastUpdatedDate(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_consent.last_updated_date</code>.
     */
    @Override
    public Long getLastUpdatedDate() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, Long, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, String, Long, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return FedUserConsent.FED_USER_CONSENT.ID;
    }

    @Override
    public Field<String> field2() {
        return FedUserConsent.FED_USER_CONSENT.CLIENT_ID;
    }

    @Override
    public Field<String> field3() {
        return FedUserConsent.FED_USER_CONSENT.USER_ID;
    }

    @Override
    public Field<String> field4() {
        return FedUserConsent.FED_USER_CONSENT.REALM_ID;
    }

    @Override
    public Field<String> field5() {
        return FedUserConsent.FED_USER_CONSENT.STORAGE_PROVIDER_ID;
    }

    @Override
    public Field<Long> field6() {
        return FedUserConsent.FED_USER_CONSENT.CREATED_DATE;
    }

    @Override
    public Field<Long> field7() {
        return FedUserConsent.FED_USER_CONSENT.LAST_UPDATED_DATE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getClientId();
    }

    @Override
    public String component3() {
        return getUserId();
    }

    @Override
    public String component4() {
        return getRealmId();
    }

    @Override
    public String component5() {
        return getStorageProviderId();
    }

    @Override
    public Long component6() {
        return getCreatedDate();
    }

    @Override
    public Long component7() {
        return getLastUpdatedDate();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getClientId();
    }

    @Override
    public String value3() {
        return getUserId();
    }

    @Override
    public String value4() {
        return getRealmId();
    }

    @Override
    public String value5() {
        return getStorageProviderId();
    }

    @Override
    public Long value6() {
        return getCreatedDate();
    }

    @Override
    public Long value7() {
        return getLastUpdatedDate();
    }

    @Override
    public FedUserConsentRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public FedUserConsentRecord value2(String value) {
        setClientId(value);
        return this;
    }

    @Override
    public FedUserConsentRecord value3(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public FedUserConsentRecord value4(String value) {
        setRealmId(value);
        return this;
    }

    @Override
    public FedUserConsentRecord value5(String value) {
        setStorageProviderId(value);
        return this;
    }

    @Override
    public FedUserConsentRecord value6(Long value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public FedUserConsentRecord value7(Long value) {
        setLastUpdatedDate(value);
        return this;
    }

    @Override
    public FedUserConsentRecord values(String value1, String value2, String value3, String value4, String value5, Long value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFedUserConsent from) {
        setId(from.getId());
        setClientId(from.getClientId());
        setUserId(from.getUserId());
        setRealmId(from.getRealmId());
        setStorageProviderId(from.getStorageProviderId());
        setCreatedDate(from.getCreatedDate());
        setLastUpdatedDate(from.getLastUpdatedDate());
    }

    @Override
    public <E extends IFedUserConsent> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FedUserConsentRecord
     */
    public FedUserConsentRecord() {
        super(FedUserConsent.FED_USER_CONSENT);
    }

    /**
     * Create a detached, initialised FedUserConsentRecord
     */
    public FedUserConsentRecord(String id, String clientId, String userId, String realmId, String storageProviderId, Long createdDate, Long lastUpdatedDate) {
        super(FedUserConsent.FED_USER_CONSENT);

        setId(id);
        setClientId(clientId);
        setUserId(userId);
        setRealmId(realmId);
        setStorageProviderId(storageProviderId);
        setCreatedDate(createdDate);
        setLastUpdatedDate(lastUpdatedDate);
    }

    /**
     * Create a detached, initialised FedUserConsentRecord
     */
    public FedUserConsentRecord(com.hiddenswitch.framework.schema.keycloak.tables.pojos.FedUserConsent value) {
        super(FedUserConsent.FED_USER_CONSENT);

        if (value != null) {
            setId(value.getId());
            setClientId(value.getClientId());
            setUserId(value.getUserId());
            setRealmId(value.getRealmId());
            setStorageProviderId(value.getStorageProviderId());
            setCreatedDate(value.getCreatedDate());
            setLastUpdatedDate(value.getLastUpdatedDate());
        }
    }

        public FedUserConsentRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
