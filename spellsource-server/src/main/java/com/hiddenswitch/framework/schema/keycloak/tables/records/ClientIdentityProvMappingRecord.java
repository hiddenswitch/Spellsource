/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.records;


import com.hiddenswitch.framework.schema.keycloak.tables.ClientIdentityProvMapping;
import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IClientIdentityProvMapping;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientIdentityProvMappingRecord extends TableRecordImpl<ClientIdentityProvMappingRecord> implements VertxPojo, Record3<String, String, Boolean>, IClientIdentityProvMapping {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>keycloak.client_identity_prov_mapping.client_id</code>.
     */
    @Override
    public ClientIdentityProvMappingRecord setClientId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.client_identity_prov_mapping.client_id</code>.
     */
    @Override
    public String getClientId() {
        return (String) get(0);
    }

    /**
     * Setter for
     * <code>keycloak.client_identity_prov_mapping.identity_provider_id</code>.
     */
    @Override
    public ClientIdentityProvMappingRecord setIdentityProviderId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>keycloak.client_identity_prov_mapping.identity_provider_id</code>.
     */
    @Override
    public String getIdentityProviderId() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>keycloak.client_identity_prov_mapping.retrieve_token</code>.
     */
    @Override
    public ClientIdentityProvMappingRecord setRetrieveToken(Boolean value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>keycloak.client_identity_prov_mapping.retrieve_token</code>.
     */
    @Override
    public Boolean getRetrieveToken() {
        return (Boolean) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Boolean> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Boolean> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ClientIdentityProvMapping.CLIENT_IDENTITY_PROV_MAPPING.CLIENT_ID;
    }

    @Override
    public Field<String> field2() {
        return ClientIdentityProvMapping.CLIENT_IDENTITY_PROV_MAPPING.IDENTITY_PROVIDER_ID;
    }

    @Override
    public Field<Boolean> field3() {
        return ClientIdentityProvMapping.CLIENT_IDENTITY_PROV_MAPPING.RETRIEVE_TOKEN;
    }

    @Override
    public String component1() {
        return getClientId();
    }

    @Override
    public String component2() {
        return getIdentityProviderId();
    }

    @Override
    public Boolean component3() {
        return getRetrieveToken();
    }

    @Override
    public String value1() {
        return getClientId();
    }

    @Override
    public String value2() {
        return getIdentityProviderId();
    }

    @Override
    public Boolean value3() {
        return getRetrieveToken();
    }

    @Override
    public ClientIdentityProvMappingRecord value1(String value) {
        setClientId(value);
        return this;
    }

    @Override
    public ClientIdentityProvMappingRecord value2(String value) {
        setIdentityProviderId(value);
        return this;
    }

    @Override
    public ClientIdentityProvMappingRecord value3(Boolean value) {
        setRetrieveToken(value);
        return this;
    }

    @Override
    public ClientIdentityProvMappingRecord values(String value1, String value2, Boolean value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IClientIdentityProvMapping from) {
        setClientId(from.getClientId());
        setIdentityProviderId(from.getIdentityProviderId());
        setRetrieveToken(from.getRetrieveToken());
    }

    @Override
    public <E extends IClientIdentityProvMapping> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientIdentityProvMappingRecord
     */
    public ClientIdentityProvMappingRecord() {
        super(ClientIdentityProvMapping.CLIENT_IDENTITY_PROV_MAPPING);
    }

    /**
     * Create a detached, initialised ClientIdentityProvMappingRecord
     */
    public ClientIdentityProvMappingRecord(String clientId, String identityProviderId, Boolean retrieveToken) {
        super(ClientIdentityProvMapping.CLIENT_IDENTITY_PROV_MAPPING);

        setClientId(clientId);
        setIdentityProviderId(identityProviderId);
        setRetrieveToken(retrieveToken);
    }

    /**
     * Create a detached, initialised ClientIdentityProvMappingRecord
     */
    public ClientIdentityProvMappingRecord(com.hiddenswitch.framework.schema.keycloak.tables.pojos.ClientIdentityProvMapping value) {
        super(ClientIdentityProvMapping.CLIENT_IDENTITY_PROV_MAPPING);

        if (value != null) {
            setClientId(value.getClientId());
            setIdentityProviderId(value.getIdentityProviderId());
            setRetrieveToken(value.getRetrieveToken());
        }
    }

        public ClientIdentityProvMappingRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
