/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IClientAuthFlowBindings;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientAuthFlowBindings implements VertxPojo, IClientAuthFlowBindings {

    private static final long serialVersionUID = 1L;

    private String clientId;
    private String flowId;
    private String bindingName;

    public ClientAuthFlowBindings() {}

    public ClientAuthFlowBindings(IClientAuthFlowBindings value) {
        this.clientId = value.getClientId();
        this.flowId = value.getFlowId();
        this.bindingName = value.getBindingName();
    }

    public ClientAuthFlowBindings(
        String clientId,
        String flowId,
        String bindingName
    ) {
        this.clientId = clientId;
        this.flowId = flowId;
        this.bindingName = bindingName;
    }

        public ClientAuthFlowBindings(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>keycloak.client_auth_flow_bindings.client_id</code>.
     */
    @Override
    public String getClientId() {
        return this.clientId;
    }

    /**
     * Setter for <code>keycloak.client_auth_flow_bindings.client_id</code>.
     */
    @Override
    public ClientAuthFlowBindings setClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Getter for <code>keycloak.client_auth_flow_bindings.flow_id</code>.
     */
    @Override
    public String getFlowId() {
        return this.flowId;
    }

    /**
     * Setter for <code>keycloak.client_auth_flow_bindings.flow_id</code>.
     */
    @Override
    public ClientAuthFlowBindings setFlowId(String flowId) {
        this.flowId = flowId;
        return this;
    }

    /**
     * Getter for <code>keycloak.client_auth_flow_bindings.binding_name</code>.
     */
    @Override
    public String getBindingName() {
        return this.bindingName;
    }

    /**
     * Setter for <code>keycloak.client_auth_flow_bindings.binding_name</code>.
     */
    @Override
    public ClientAuthFlowBindings setBindingName(String bindingName) {
        this.bindingName = bindingName;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ClientAuthFlowBindings other = (ClientAuthFlowBindings) obj;
        if (this.clientId == null) {
            if (other.clientId != null)
                return false;
        }
        else if (!this.clientId.equals(other.clientId))
            return false;
        if (this.flowId == null) {
            if (other.flowId != null)
                return false;
        }
        else if (!this.flowId.equals(other.flowId))
            return false;
        if (this.bindingName == null) {
            if (other.bindingName != null)
                return false;
        }
        else if (!this.bindingName.equals(other.bindingName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.clientId == null) ? 0 : this.clientId.hashCode());
        result = prime * result + ((this.flowId == null) ? 0 : this.flowId.hashCode());
        result = prime * result + ((this.bindingName == null) ? 0 : this.bindingName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ClientAuthFlowBindings (");

        sb.append(clientId);
        sb.append(", ").append(flowId);
        sb.append(", ").append(bindingName);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IClientAuthFlowBindings from) {
        setClientId(from.getClientId());
        setFlowId(from.getFlowId());
        setBindingName(from.getBindingName());
    }

    @Override
    public <E extends IClientAuthFlowBindings> E into(E into) {
        into.from(this);
        return into;
    }
}
