/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables;


import com.hiddenswitch.framework.schema.keycloak.Indexes;
import com.hiddenswitch.framework.schema.keycloak.Keycloak;
import com.hiddenswitch.framework.schema.keycloak.Keys;
import com.hiddenswitch.framework.schema.keycloak.tables.records.ClientDefaultRolesRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientDefaultRoles extends TableImpl<ClientDefaultRolesRecord> {

    private static final long serialVersionUID = -1758607948;

    /**
     * The reference instance of <code>keycloak.client_default_roles</code>
     */
    public static final ClientDefaultRoles CLIENT_DEFAULT_ROLES = new ClientDefaultRoles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClientDefaultRolesRecord> getRecordType() {
        return ClientDefaultRolesRecord.class;
    }

    /**
     * The column <code>keycloak.client_default_roles.client_id</code>.
     */
    public final TableField<ClientDefaultRolesRecord, String> CLIENT_ID = createField(DSL.name("client_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>keycloak.client_default_roles.role_id</code>.
     */
    public final TableField<ClientDefaultRolesRecord, String> ROLE_ID = createField(DSL.name("role_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * Create a <code>keycloak.client_default_roles</code> table reference
     */
    public ClientDefaultRoles() {
        this(DSL.name("client_default_roles"), null);
    }

    /**
     * Create an aliased <code>keycloak.client_default_roles</code> table reference
     */
    public ClientDefaultRoles(String alias) {
        this(DSL.name(alias), CLIENT_DEFAULT_ROLES);
    }

    /**
     * Create an aliased <code>keycloak.client_default_roles</code> table reference
     */
    public ClientDefaultRoles(Name alias) {
        this(alias, CLIENT_DEFAULT_ROLES);
    }

    private ClientDefaultRoles(Name alias, Table<ClientDefaultRolesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClientDefaultRoles(Name alias, Table<ClientDefaultRolesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ClientDefaultRoles(Table<O> child, ForeignKey<O, ClientDefaultRolesRecord> key) {
        super(child, key, CLIENT_DEFAULT_ROLES);
    }

    @Override
    public Schema getSchema() {
        return Keycloak.KEYCLOAK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_CLIENT_DEF_ROLES_CLIENT);
    }

    @Override
    public UniqueKey<ClientDefaultRolesRecord> getPrimaryKey() {
        return Keys.CONSTR_CLIENT_DEFAULT_ROLES;
    }

    @Override
    public List<UniqueKey<ClientDefaultRolesRecord>> getKeys() {
        return Arrays.<UniqueKey<ClientDefaultRolesRecord>>asList(Keys.CONSTR_CLIENT_DEFAULT_ROLES, Keys.UK_8AELWNIBJI49AVXSRTUF6XJOW);
    }

    @Override
    public List<ForeignKey<ClientDefaultRolesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ClientDefaultRolesRecord, ?>>asList(Keys.CLIENT_DEFAULT_ROLES__FK_NUILTS7KLWQW2H8M2B5JOYTKY);
    }

    public Client client() {
        return new Client(this, Keys.CLIENT_DEFAULT_ROLES__FK_NUILTS7KLWQW2H8M2B5JOYTKY);
    }

    @Override
    public ClientDefaultRoles as(String alias) {
        return new ClientDefaultRoles(DSL.name(alias), this);
    }

    @Override
    public ClientDefaultRoles as(Name alias) {
        return new ClientDefaultRoles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientDefaultRoles rename(String name) {
        return new ClientDefaultRoles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientDefaultRoles rename(Name name) {
        return new ClientDefaultRoles(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
