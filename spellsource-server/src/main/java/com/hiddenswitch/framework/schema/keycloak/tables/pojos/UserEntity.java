/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IUserEntity;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserEntity implements VertxPojo, IUserEntity {

    private static final long serialVersionUID = 1L;

    private String id;
    private String email;
    private String emailConstraint;
    private Boolean emailVerified;
    private Boolean enabled;
    private String federationLink;
    private String firstName;
    private String lastName;
    private String realmId;
    private String username;
    private Long createdTimestamp;
    private String serviceAccountClientLink;
    private Integer notBefore;

    public UserEntity() {}

    public UserEntity(IUserEntity value) {
        this.id = value.getId();
        this.email = value.getEmail();
        this.emailConstraint = value.getEmailConstraint();
        this.emailVerified = value.getEmailVerified();
        this.enabled = value.getEnabled();
        this.federationLink = value.getFederationLink();
        this.firstName = value.getFirstName();
        this.lastName = value.getLastName();
        this.realmId = value.getRealmId();
        this.username = value.getUsername();
        this.createdTimestamp = value.getCreatedTimestamp();
        this.serviceAccountClientLink = value.getServiceAccountClientLink();
        this.notBefore = value.getNotBefore();
    }

    public UserEntity(
        String id,
        String email,
        String emailConstraint,
        Boolean emailVerified,
        Boolean enabled,
        String federationLink,
        String firstName,
        String lastName,
        String realmId,
        String username,
        Long createdTimestamp,
        String serviceAccountClientLink,
        Integer notBefore
    ) {
        this.id = id;
        this.email = email;
        this.emailConstraint = emailConstraint;
        this.emailVerified = emailVerified;
        this.enabled = enabled;
        this.federationLink = federationLink;
        this.firstName = firstName;
        this.lastName = lastName;
        this.realmId = realmId;
        this.username = username;
        this.createdTimestamp = createdTimestamp;
        this.serviceAccountClientLink = serviceAccountClientLink;
        this.notBefore = notBefore;
    }

        public UserEntity(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>keycloak.user_entity.id</code>.
     */
    @Override
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>keycloak.user_entity.id</code>.
     */
    @Override
    public UserEntity setId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>keycloak.user_entity.email</code>.
     */
    @Override
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>keycloak.user_entity.email</code>.
     */
    @Override
    public UserEntity setEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Getter for <code>keycloak.user_entity.email_constraint</code>.
     */
    @Override
    public String getEmailConstraint() {
        return this.emailConstraint;
    }

    /**
     * Setter for <code>keycloak.user_entity.email_constraint</code>.
     */
    @Override
    public UserEntity setEmailConstraint(String emailConstraint) {
        this.emailConstraint = emailConstraint;
        return this;
    }

    /**
     * Getter for <code>keycloak.user_entity.email_verified</code>.
     */
    @Override
    public Boolean getEmailVerified() {
        return this.emailVerified;
    }

    /**
     * Setter for <code>keycloak.user_entity.email_verified</code>.
     */
    @Override
    public UserEntity setEmailVerified(Boolean emailVerified) {
        this.emailVerified = emailVerified;
        return this;
    }

    /**
     * Getter for <code>keycloak.user_entity.enabled</code>.
     */
    @Override
    public Boolean getEnabled() {
        return this.enabled;
    }

    /**
     * Setter for <code>keycloak.user_entity.enabled</code>.
     */
    @Override
    public UserEntity setEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Getter for <code>keycloak.user_entity.federation_link</code>.
     */
    @Override
    public String getFederationLink() {
        return this.federationLink;
    }

    /**
     * Setter for <code>keycloak.user_entity.federation_link</code>.
     */
    @Override
    public UserEntity setFederationLink(String federationLink) {
        this.federationLink = federationLink;
        return this;
    }

    /**
     * Getter for <code>keycloak.user_entity.first_name</code>.
     */
    @Override
    public String getFirstName() {
        return this.firstName;
    }

    /**
     * Setter for <code>keycloak.user_entity.first_name</code>.
     */
    @Override
    public UserEntity setFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    /**
     * Getter for <code>keycloak.user_entity.last_name</code>.
     */
    @Override
    public String getLastName() {
        return this.lastName;
    }

    /**
     * Setter for <code>keycloak.user_entity.last_name</code>.
     */
    @Override
    public UserEntity setLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    /**
     * Getter for <code>keycloak.user_entity.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return this.realmId;
    }

    /**
     * Setter for <code>keycloak.user_entity.realm_id</code>.
     */
    @Override
    public UserEntity setRealmId(String realmId) {
        this.realmId = realmId;
        return this;
    }

    /**
     * Getter for <code>keycloak.user_entity.username</code>.
     */
    @Override
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for <code>keycloak.user_entity.username</code>.
     */
    @Override
    public UserEntity setUsername(String username) {
        this.username = username;
        return this;
    }

    /**
     * Getter for <code>keycloak.user_entity.created_timestamp</code>.
     */
    @Override
    public Long getCreatedTimestamp() {
        return this.createdTimestamp;
    }

    /**
     * Setter for <code>keycloak.user_entity.created_timestamp</code>.
     */
    @Override
    public UserEntity setCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }

    /**
     * Getter for <code>keycloak.user_entity.service_account_client_link</code>.
     */
    @Override
    public String getServiceAccountClientLink() {
        return this.serviceAccountClientLink;
    }

    /**
     * Setter for <code>keycloak.user_entity.service_account_client_link</code>.
     */
    @Override
    public UserEntity setServiceAccountClientLink(String serviceAccountClientLink) {
        this.serviceAccountClientLink = serviceAccountClientLink;
        return this;
    }

    /**
     * Getter for <code>keycloak.user_entity.not_before</code>.
     */
    @Override
    public Integer getNotBefore() {
        return this.notBefore;
    }

    /**
     * Setter for <code>keycloak.user_entity.not_before</code>.
     */
    @Override
    public UserEntity setNotBefore(Integer notBefore) {
        this.notBefore = notBefore;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserEntity other = (UserEntity) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.emailConstraint == null) {
            if (other.emailConstraint != null)
                return false;
        }
        else if (!this.emailConstraint.equals(other.emailConstraint))
            return false;
        if (this.emailVerified == null) {
            if (other.emailVerified != null)
                return false;
        }
        else if (!this.emailVerified.equals(other.emailVerified))
            return false;
        if (this.enabled == null) {
            if (other.enabled != null)
                return false;
        }
        else if (!this.enabled.equals(other.enabled))
            return false;
        if (this.federationLink == null) {
            if (other.federationLink != null)
                return false;
        }
        else if (!this.federationLink.equals(other.federationLink))
            return false;
        if (this.firstName == null) {
            if (other.firstName != null)
                return false;
        }
        else if (!this.firstName.equals(other.firstName))
            return false;
        if (this.lastName == null) {
            if (other.lastName != null)
                return false;
        }
        else if (!this.lastName.equals(other.lastName))
            return false;
        if (this.realmId == null) {
            if (other.realmId != null)
                return false;
        }
        else if (!this.realmId.equals(other.realmId))
            return false;
        if (this.username == null) {
            if (other.username != null)
                return false;
        }
        else if (!this.username.equals(other.username))
            return false;
        if (this.createdTimestamp == null) {
            if (other.createdTimestamp != null)
                return false;
        }
        else if (!this.createdTimestamp.equals(other.createdTimestamp))
            return false;
        if (this.serviceAccountClientLink == null) {
            if (other.serviceAccountClientLink != null)
                return false;
        }
        else if (!this.serviceAccountClientLink.equals(other.serviceAccountClientLink))
            return false;
        if (this.notBefore == null) {
            if (other.notBefore != null)
                return false;
        }
        else if (!this.notBefore.equals(other.notBefore))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.emailConstraint == null) ? 0 : this.emailConstraint.hashCode());
        result = prime * result + ((this.emailVerified == null) ? 0 : this.emailVerified.hashCode());
        result = prime * result + ((this.enabled == null) ? 0 : this.enabled.hashCode());
        result = prime * result + ((this.federationLink == null) ? 0 : this.federationLink.hashCode());
        result = prime * result + ((this.firstName == null) ? 0 : this.firstName.hashCode());
        result = prime * result + ((this.lastName == null) ? 0 : this.lastName.hashCode());
        result = prime * result + ((this.realmId == null) ? 0 : this.realmId.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.createdTimestamp == null) ? 0 : this.createdTimestamp.hashCode());
        result = prime * result + ((this.serviceAccountClientLink == null) ? 0 : this.serviceAccountClientLink.hashCode());
        result = prime * result + ((this.notBefore == null) ? 0 : this.notBefore.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserEntity (");

        sb.append(id);
        sb.append(", ").append(email);
        sb.append(", ").append(emailConstraint);
        sb.append(", ").append(emailVerified);
        sb.append(", ").append(enabled);
        sb.append(", ").append(federationLink);
        sb.append(", ").append(firstName);
        sb.append(", ").append(lastName);
        sb.append(", ").append(realmId);
        sb.append(", ").append(username);
        sb.append(", ").append(createdTimestamp);
        sb.append(", ").append(serviceAccountClientLink);
        sb.append(", ").append(notBefore);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUserEntity from) {
        setId(from.getId());
        setEmail(from.getEmail());
        setEmailConstraint(from.getEmailConstraint());
        setEmailVerified(from.getEmailVerified());
        setEnabled(from.getEnabled());
        setFederationLink(from.getFederationLink());
        setFirstName(from.getFirstName());
        setLastName(from.getLastName());
        setRealmId(from.getRealmId());
        setUsername(from.getUsername());
        setCreatedTimestamp(from.getCreatedTimestamp());
        setServiceAccountClientLink(from.getServiceAccountClientLink());
        setNotBefore(from.getNotBefore());
    }

    @Override
    public <E extends IUserEntity> E into(E into) {
        into.from(this);
        return into;
    }
}
