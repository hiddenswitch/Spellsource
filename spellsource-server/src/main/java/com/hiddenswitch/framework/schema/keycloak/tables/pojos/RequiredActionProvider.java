/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IRequiredActionProvider;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequiredActionProvider implements VertxPojo, IRequiredActionProvider {

    private static final long serialVersionUID = 1L;

    private String id;
    private String alias;
    private String name;
    private String realmId;
    private Boolean enabled;
    private Boolean defaultAction;
    private String providerId;
    private Integer priority;

    public RequiredActionProvider() {}

    public RequiredActionProvider(IRequiredActionProvider value) {
        this.id = value.getId();
        this.alias = value.getAlias();
        this.name = value.getName();
        this.realmId = value.getRealmId();
        this.enabled = value.getEnabled();
        this.defaultAction = value.getDefaultAction();
        this.providerId = value.getProviderId();
        this.priority = value.getPriority();
    }

    public RequiredActionProvider(
        String id,
        String alias,
        String name,
        String realmId,
        Boolean enabled,
        Boolean defaultAction,
        String providerId,
        Integer priority
    ) {
        this.id = id;
        this.alias = alias;
        this.name = name;
        this.realmId = realmId;
        this.enabled = enabled;
        this.defaultAction = defaultAction;
        this.providerId = providerId;
        this.priority = priority;
    }

        public RequiredActionProvider(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>keycloak.required_action_provider.id</code>.
     */
    @Override
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>keycloak.required_action_provider.id</code>.
     */
    @Override
    public RequiredActionProvider setId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>keycloak.required_action_provider.alias</code>.
     */
    @Override
    public String getAlias() {
        return this.alias;
    }

    /**
     * Setter for <code>keycloak.required_action_provider.alias</code>.
     */
    @Override
    public RequiredActionProvider setAlias(String alias) {
        this.alias = alias;
        return this;
    }

    /**
     * Getter for <code>keycloak.required_action_provider.name</code>.
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>keycloak.required_action_provider.name</code>.
     */
    @Override
    public RequiredActionProvider setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>keycloak.required_action_provider.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return this.realmId;
    }

    /**
     * Setter for <code>keycloak.required_action_provider.realm_id</code>.
     */
    @Override
    public RequiredActionProvider setRealmId(String realmId) {
        this.realmId = realmId;
        return this;
    }

    /**
     * Getter for <code>keycloak.required_action_provider.enabled</code>.
     */
    @Override
    public Boolean getEnabled() {
        return this.enabled;
    }

    /**
     * Setter for <code>keycloak.required_action_provider.enabled</code>.
     */
    @Override
    public RequiredActionProvider setEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Getter for <code>keycloak.required_action_provider.default_action</code>.
     */
    @Override
    public Boolean getDefaultAction() {
        return this.defaultAction;
    }

    /**
     * Setter for <code>keycloak.required_action_provider.default_action</code>.
     */
    @Override
    public RequiredActionProvider setDefaultAction(Boolean defaultAction) {
        this.defaultAction = defaultAction;
        return this;
    }

    /**
     * Getter for <code>keycloak.required_action_provider.provider_id</code>.
     */
    @Override
    public String getProviderId() {
        return this.providerId;
    }

    /**
     * Setter for <code>keycloak.required_action_provider.provider_id</code>.
     */
    @Override
    public RequiredActionProvider setProviderId(String providerId) {
        this.providerId = providerId;
        return this;
    }

    /**
     * Getter for <code>keycloak.required_action_provider.priority</code>.
     */
    @Override
    public Integer getPriority() {
        return this.priority;
    }

    /**
     * Setter for <code>keycloak.required_action_provider.priority</code>.
     */
    @Override
    public RequiredActionProvider setPriority(Integer priority) {
        this.priority = priority;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RequiredActionProvider other = (RequiredActionProvider) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.alias == null) {
            if (other.alias != null)
                return false;
        }
        else if (!this.alias.equals(other.alias))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.realmId == null) {
            if (other.realmId != null)
                return false;
        }
        else if (!this.realmId.equals(other.realmId))
            return false;
        if (this.enabled == null) {
            if (other.enabled != null)
                return false;
        }
        else if (!this.enabled.equals(other.enabled))
            return false;
        if (this.defaultAction == null) {
            if (other.defaultAction != null)
                return false;
        }
        else if (!this.defaultAction.equals(other.defaultAction))
            return false;
        if (this.providerId == null) {
            if (other.providerId != null)
                return false;
        }
        else if (!this.providerId.equals(other.providerId))
            return false;
        if (this.priority == null) {
            if (other.priority != null)
                return false;
        }
        else if (!this.priority.equals(other.priority))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.alias == null) ? 0 : this.alias.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.realmId == null) ? 0 : this.realmId.hashCode());
        result = prime * result + ((this.enabled == null) ? 0 : this.enabled.hashCode());
        result = prime * result + ((this.defaultAction == null) ? 0 : this.defaultAction.hashCode());
        result = prime * result + ((this.providerId == null) ? 0 : this.providerId.hashCode());
        result = prime * result + ((this.priority == null) ? 0 : this.priority.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RequiredActionProvider (");

        sb.append(id);
        sb.append(", ").append(alias);
        sb.append(", ").append(name);
        sb.append(", ").append(realmId);
        sb.append(", ").append(enabled);
        sb.append(", ").append(defaultAction);
        sb.append(", ").append(providerId);
        sb.append(", ").append(priority);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRequiredActionProvider from) {
        setId(from.getId());
        setAlias(from.getAlias());
        setName(from.getName());
        setRealmId(from.getRealmId());
        setEnabled(from.getEnabled());
        setDefaultAction(from.getDefaultAction());
        setProviderId(from.getProviderId());
        setPriority(from.getPriority());
    }

    @Override
    public <E extends IRequiredActionProvider> E into(E into) {
        into.from(this);
        return into;
    }
}
