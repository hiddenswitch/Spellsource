/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IFedUserRoleMapping;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FedUserRoleMapping implements VertxPojo, IFedUserRoleMapping {

    private static final long serialVersionUID = 1L;

    private String roleId;
    private String userId;
    private String realmId;
    private String storageProviderId;

    public FedUserRoleMapping() {}

    public FedUserRoleMapping(IFedUserRoleMapping value) {
        this.roleId = value.getRoleId();
        this.userId = value.getUserId();
        this.realmId = value.getRealmId();
        this.storageProviderId = value.getStorageProviderId();
    }

    public FedUserRoleMapping(
        String roleId,
        String userId,
        String realmId,
        String storageProviderId
    ) {
        this.roleId = roleId;
        this.userId = userId;
        this.realmId = realmId;
        this.storageProviderId = storageProviderId;
    }

        public FedUserRoleMapping(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>keycloak.fed_user_role_mapping.role_id</code>.
     */
    @Override
    public String getRoleId() {
        return this.roleId;
    }

    /**
     * Setter for <code>keycloak.fed_user_role_mapping.role_id</code>.
     */
    @Override
    public FedUserRoleMapping setRoleId(String roleId) {
        this.roleId = roleId;
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_role_mapping.user_id</code>.
     */
    @Override
    public String getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>keycloak.fed_user_role_mapping.user_id</code>.
     */
    @Override
    public FedUserRoleMapping setUserId(String userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_role_mapping.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return this.realmId;
    }

    /**
     * Setter for <code>keycloak.fed_user_role_mapping.realm_id</code>.
     */
    @Override
    public FedUserRoleMapping setRealmId(String realmId) {
        this.realmId = realmId;
        return this;
    }

    /**
     * Getter for
     * <code>keycloak.fed_user_role_mapping.storage_provider_id</code>.
     */
    @Override
    public String getStorageProviderId() {
        return this.storageProviderId;
    }

    /**
     * Setter for
     * <code>keycloak.fed_user_role_mapping.storage_provider_id</code>.
     */
    @Override
    public FedUserRoleMapping setStorageProviderId(String storageProviderId) {
        this.storageProviderId = storageProviderId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FedUserRoleMapping other = (FedUserRoleMapping) obj;
        if (this.roleId == null) {
            if (other.roleId != null)
                return false;
        }
        else if (!this.roleId.equals(other.roleId))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.realmId == null) {
            if (other.realmId != null)
                return false;
        }
        else if (!this.realmId.equals(other.realmId))
            return false;
        if (this.storageProviderId == null) {
            if (other.storageProviderId != null)
                return false;
        }
        else if (!this.storageProviderId.equals(other.storageProviderId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.roleId == null) ? 0 : this.roleId.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.realmId == null) ? 0 : this.realmId.hashCode());
        result = prime * result + ((this.storageProviderId == null) ? 0 : this.storageProviderId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FedUserRoleMapping (");

        sb.append(roleId);
        sb.append(", ").append(userId);
        sb.append(", ").append(realmId);
        sb.append(", ").append(storageProviderId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFedUserRoleMapping from) {
        setRoleId(from.getRoleId());
        setUserId(from.getUserId());
        setRealmId(from.getRealmId());
        setStorageProviderId(from.getStorageProviderId());
    }

    @Override
    public <E extends IFedUserRoleMapping> E into(E into) {
        into.from(this);
        return into;
    }
}
