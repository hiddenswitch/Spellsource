/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IFedUserCredential extends VertxPojo, Serializable {

    /**
     * Setter for <code>keycloak.fed_user_credential.id</code>.
     */
    public IFedUserCredential setId(String value);

    /**
     * Getter for <code>keycloak.fed_user_credential.id</code>.
     */
    public String getId();

    /**
     * Setter for <code>keycloak.fed_user_credential.device</code>.
     */
    public IFedUserCredential setDevice(String value);

    /**
     * Getter for <code>keycloak.fed_user_credential.device</code>.
     */
    public String getDevice();

    /**
     * Setter for <code>keycloak.fed_user_credential.hash_iterations</code>.
     */
    public IFedUserCredential setHashIterations(Integer value);

    /**
     * Getter for <code>keycloak.fed_user_credential.hash_iterations</code>.
     */
    public Integer getHashIterations();

    /**
     * Setter for <code>keycloak.fed_user_credential.salt</code>.
     */
    public IFedUserCredential setSalt(byte[] value);

    /**
     * Getter for <code>keycloak.fed_user_credential.salt</code>.
     */
    public byte[] getSalt();

    /**
     * Setter for <code>keycloak.fed_user_credential.type</code>.
     */
    public IFedUserCredential setType(String value);

    /**
     * Getter for <code>keycloak.fed_user_credential.type</code>.
     */
    public String getType();

    /**
     * Setter for <code>keycloak.fed_user_credential.value</code>.
     */
    public IFedUserCredential setValue(String value);

    /**
     * Getter for <code>keycloak.fed_user_credential.value</code>.
     */
    public String getValue();

    /**
     * Setter for <code>keycloak.fed_user_credential.created_date</code>.
     */
    public IFedUserCredential setCreatedDate(Long value);

    /**
     * Getter for <code>keycloak.fed_user_credential.created_date</code>.
     */
    public Long getCreatedDate();

    /**
     * Setter for <code>keycloak.fed_user_credential.counter</code>.
     */
    public IFedUserCredential setCounter(Integer value);

    /**
     * Getter for <code>keycloak.fed_user_credential.counter</code>.
     */
    public Integer getCounter();

    /**
     * Setter for <code>keycloak.fed_user_credential.digits</code>.
     */
    public IFedUserCredential setDigits(Integer value);

    /**
     * Getter for <code>keycloak.fed_user_credential.digits</code>.
     */
    public Integer getDigits();

    /**
     * Setter for <code>keycloak.fed_user_credential.period</code>.
     */
    public IFedUserCredential setPeriod(Integer value);

    /**
     * Getter for <code>keycloak.fed_user_credential.period</code>.
     */
    public Integer getPeriod();

    /**
     * Setter for <code>keycloak.fed_user_credential.algorithm</code>.
     */
    public IFedUserCredential setAlgorithm(String value);

    /**
     * Getter for <code>keycloak.fed_user_credential.algorithm</code>.
     */
    public String getAlgorithm();

    /**
     * Setter for <code>keycloak.fed_user_credential.user_id</code>.
     */
    public IFedUserCredential setUserId(String value);

    /**
     * Getter for <code>keycloak.fed_user_credential.user_id</code>.
     */
    public String getUserId();

    /**
     * Setter for <code>keycloak.fed_user_credential.realm_id</code>.
     */
    public IFedUserCredential setRealmId(String value);

    /**
     * Getter for <code>keycloak.fed_user_credential.realm_id</code>.
     */
    public String getRealmId();

    /**
     * Setter for <code>keycloak.fed_user_credential.storage_provider_id</code>.
     */
    public IFedUserCredential setStorageProviderId(String value);

    /**
     * Getter for <code>keycloak.fed_user_credential.storage_provider_id</code>.
     */
    public String getStorageProviderId();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IFedUserCredential
     */
    public void from(IFedUserCredential from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IFedUserCredential
     */
    public <E extends IFedUserCredential> E into(E into);

        @Override
        public default IFedUserCredential fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setId,json::getString,"id","java.lang.String");
                setOrThrow(this::setDevice,json::getString,"device","java.lang.String");
                setOrThrow(this::setHashIterations,json::getInteger,"hash_iterations","java.lang.Integer");
                setOrThrow(this::setSalt,json::getBinary,"salt","byte[]");
                setOrThrow(this::setType,json::getString,"type","java.lang.String");
                setOrThrow(this::setValue,json::getString,"value","java.lang.String");
                setOrThrow(this::setCreatedDate,json::getLong,"created_date","java.lang.Long");
                setOrThrow(this::setCounter,json::getInteger,"counter","java.lang.Integer");
                setOrThrow(this::setDigits,json::getInteger,"digits","java.lang.Integer");
                setOrThrow(this::setPeriod,json::getInteger,"period","java.lang.Integer");
                setOrThrow(this::setAlgorithm,json::getString,"algorithm","java.lang.String");
                setOrThrow(this::setUserId,json::getString,"user_id","java.lang.String");
                setOrThrow(this::setRealmId,json::getString,"realm_id","java.lang.String");
                setOrThrow(this::setStorageProviderId,json::getString,"storage_provider_id","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("id",getId());
                json.put("device",getDevice());
                json.put("hash_iterations",getHashIterations());
                json.put("salt",getSalt());
                json.put("type",getType());
                json.put("value",getValue());
                json.put("created_date",getCreatedDate());
                json.put("counter",getCounter());
                json.put("digits",getDigits());
                json.put("period",getPeriod());
                json.put("algorithm",getAlgorithm());
                json.put("user_id",getUserId());
                json.put("realm_id",getRealmId());
                json.put("storage_provider_id",getStorageProviderId());
                return json;
        }

}
