/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.interfaces;


import com.hiddenswitch.framework.schema.spellsource.enums.GameUserVictoryEnum;

import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IGameUsers extends VertxPojo, Serializable {

    /**
     * Setter for <code>spellsource.game_users.player_index</code>.
     */
    public IGameUsers setPlayerIndex(Short value);

    /**
     * Getter for <code>spellsource.game_users.player_index</code>.
     */
    public Short getPlayerIndex();

    /**
     * Setter for <code>spellsource.game_users.game_id</code>.
     */
    public IGameUsers setGameId(Long value);

    /**
     * Getter for <code>spellsource.game_users.game_id</code>.
     */
    public Long getGameId();

    /**
     * Setter for <code>spellsource.game_users.user_id</code>.
     */
    public IGameUsers setUserId(String value);

    /**
     * Getter for <code>spellsource.game_users.user_id</code>.
     */
    public String getUserId();

    /**
     * Setter for <code>spellsource.game_users.deck_id</code>.
     */
    public IGameUsers setDeckId(String value);

    /**
     * Getter for <code>spellsource.game_users.deck_id</code>.
     */
    public String getDeckId();

    /**
     * Setter for <code>spellsource.game_users.victory_status</code>.
     */
    public IGameUsers setVictoryStatus(GameUserVictoryEnum value);

    /**
     * Getter for <code>spellsource.game_users.victory_status</code>.
     */
    public GameUserVictoryEnum getVictoryStatus();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IGameUsers
     */
    public void from(IGameUsers from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IGameUsers
     */
    public <E extends IGameUsers> E into(E into);

    @Override
    public default IGameUsers fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setPlayerIndex(json.getInteger("player_index")==null?null:json.getInteger("player_index").shortValue());
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("player_index","java.lang.Short",e);
        }
        try {
            setGameId(json.getLong("game_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("game_id","java.lang.Long",e);
        }
        try {
            setUserId(json.getString("user_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("user_id","java.lang.String",e);
        }
        try {
            setDeckId(json.getString("deck_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("deck_id","java.lang.String",e);
        }
        try {
            setVictoryStatus(java.util.Arrays.stream(com.hiddenswitch.framework.schema.spellsource.enums.GameUserVictoryEnum.values()).filter(td -> td.getLiteral().equals(json.getString("victory_status"))).findFirst().orElse(null));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("victory_status","com.hiddenswitch.framework.schema.spellsource.enums.GameUserVictoryEnum",e);
        }
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("player_index",getPlayerIndex());
        json.put("game_id",getGameId());
        json.put("user_id",getUserId());
        json.put("deck_id",getDeckId());
        json.put("victory_status",getVictoryStatus()==null?null:getVictoryStatus().getLiteral());
        return json;
    }

}
