/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.routines;


import com.hiddenswitch.framework.schema.spellsource.Spellsource;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardsRecord;

import io.github.jklingsporn.vertx.jooq.shared.postgres.JSONBToJsonObjectConverter;
import io.vertx.core.json.JsonObject;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.XML;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SaveCard extends AbstractRoutine<CardsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>spellsource.save_card.RETURN_VALUE</code>.
     */
    public static final Parameter<CardsRecord> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", com.hiddenswitch.framework.schema.spellsource.tables.Cards.CARDS.getDataType(), false, false);

    /**
     * The parameter <code>spellsource.save_card.card_id</code>.
     */
    public static final Parameter<String> CARD_ID = Internal.createParameter("card_id", SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>spellsource.save_card.workspace</code>.
     */
    public static final Parameter<XML> WORKSPACE = Internal.createParameter("workspace", SQLDataType.XML, false, false);

    /**
     * The parameter <code>spellsource.save_card.json</code>.
     */
    public static final Parameter<JsonObject> JSON = Internal.createParameter("json", SQLDataType.JSONB, false, false, new JSONBToJsonObjectConverter());

    /**
     * Create a new routine call instance
     */
    public SaveCard() {
        super("save_card", Spellsource.SPELLSOURCE, com.hiddenswitch.framework.schema.spellsource.tables.Cards.CARDS.getDataType());

        setReturnParameter(RETURN_VALUE);
        addInParameter(CARD_ID);
        addInParameter(WORKSPACE);
        addInParameter(JSON);
    }

    /**
     * Set the <code>card_id</code> parameter IN value to the routine
     */
    public void setCardId(String value) {
        setValue(CARD_ID, value);
    }

    /**
     * Set the <code>card_id</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public SaveCard setCardId(Field<String> field) {
        setField(CARD_ID, field);
        return this;
    }

    /**
     * Set the <code>workspace</code> parameter IN value to the routine
     */
    public void setWorkspace(XML value) {
        setValue(WORKSPACE, value);
    }

    /**
     * Set the <code>workspace</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    public SaveCard setWorkspace(Field<XML> field) {
        setField(WORKSPACE, field);
        return this;
    }

    /**
     * Set the <code>json</code> parameter IN value to the routine
     */
    public void setJson(JsonObject value) {
        setValue(JSON, value);
    }

    /**
     * Set the <code>json</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public SaveCard setJson(Field<JsonObject> field) {
        setField(JSON, field);
        return this;
    }
}
