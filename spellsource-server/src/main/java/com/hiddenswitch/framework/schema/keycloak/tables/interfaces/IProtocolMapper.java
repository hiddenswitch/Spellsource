/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IProtocolMapper extends VertxPojo, Serializable {

    /**
     * Setter for <code>keycloak.protocol_mapper.id</code>.
     */
    public IProtocolMapper setId(String value);

    /**
     * Getter for <code>keycloak.protocol_mapper.id</code>.
     */
    public String getId();

    /**
     * Setter for <code>keycloak.protocol_mapper.name</code>.
     */
    public IProtocolMapper setName(String value);

    /**
     * Getter for <code>keycloak.protocol_mapper.name</code>.
     */
    public String getName();

    /**
     * Setter for <code>keycloak.protocol_mapper.protocol</code>.
     */
    public IProtocolMapper setProtocol(String value);

    /**
     * Getter for <code>keycloak.protocol_mapper.protocol</code>.
     */
    public String getProtocol();

    /**
     * Setter for <code>keycloak.protocol_mapper.protocol_mapper_name</code>.
     */
    public IProtocolMapper setProtocolMapperName(String value);

    /**
     * Getter for <code>keycloak.protocol_mapper.protocol_mapper_name</code>.
     */
    public String getProtocolMapperName();

    /**
     * Setter for <code>keycloak.protocol_mapper.consent_required</code>.
     */
    public IProtocolMapper setConsentRequired(Boolean value);

    /**
     * Getter for <code>keycloak.protocol_mapper.consent_required</code>.
     */
    public Boolean getConsentRequired();

    /**
     * Setter for <code>keycloak.protocol_mapper.consent_text</code>.
     */
    public IProtocolMapper setConsentText(String value);

    /**
     * Getter for <code>keycloak.protocol_mapper.consent_text</code>.
     */
    public String getConsentText();

    /**
     * Setter for <code>keycloak.protocol_mapper.client_id</code>.
     */
    public IProtocolMapper setClientId(String value);

    /**
     * Getter for <code>keycloak.protocol_mapper.client_id</code>.
     */
    public String getClientId();

    /**
     * Setter for <code>keycloak.protocol_mapper.client_template_id</code>.
     */
    public IProtocolMapper setClientTemplateId(String value);

    /**
     * Getter for <code>keycloak.protocol_mapper.client_template_id</code>.
     */
    public String getClientTemplateId();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IProtocolMapper
     */
    public void from(IProtocolMapper from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IProtocolMapper
     */
    public <E extends IProtocolMapper> E into(E into);

        @Override
        public default IProtocolMapper fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setId,json::getString,"id","java.lang.String");
                setOrThrow(this::setName,json::getString,"name","java.lang.String");
                setOrThrow(this::setProtocol,json::getString,"protocol","java.lang.String");
                setOrThrow(this::setProtocolMapperName,json::getString,"protocol_mapper_name","java.lang.String");
                setOrThrow(this::setConsentRequired,json::getBoolean,"consent_required","java.lang.Boolean");
                setOrThrow(this::setConsentText,json::getString,"consent_text","java.lang.String");
                setOrThrow(this::setClientId,json::getString,"client_id","java.lang.String");
                setOrThrow(this::setClientTemplateId,json::getString,"client_template_id","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("id",getId());
                json.put("name",getName());
                json.put("protocol",getProtocol());
                json.put("protocol_mapper_name",getProtocolMapperName());
                json.put("consent_required",getConsentRequired());
                json.put("consent_text",getConsentText());
                json.put("client_id",getClientId());
                json.put("client_template_id",getClientTemplateId());
                return json;
        }

}
