/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IClientScope;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientScope implements VertxPojo, IClientScope {

    private static final long serialVersionUID = 1L;

    private String id;
    private String name;
    private String realmId;
    private String description;
    private String protocol;

    public ClientScope() {}

    public ClientScope(IClientScope value) {
        this.id = value.getId();
        this.name = value.getName();
        this.realmId = value.getRealmId();
        this.description = value.getDescription();
        this.protocol = value.getProtocol();
    }

    public ClientScope(
        String id,
        String name,
        String realmId,
        String description,
        String protocol
    ) {
        this.id = id;
        this.name = name;
        this.realmId = realmId;
        this.description = description;
        this.protocol = protocol;
    }

        public ClientScope(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>keycloak.client_scope.id</code>.
     */
    @Override
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>keycloak.client_scope.id</code>.
     */
    @Override
    public ClientScope setId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>keycloak.client_scope.name</code>.
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>keycloak.client_scope.name</code>.
     */
    @Override
    public ClientScope setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>keycloak.client_scope.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return this.realmId;
    }

    /**
     * Setter for <code>keycloak.client_scope.realm_id</code>.
     */
    @Override
    public ClientScope setRealmId(String realmId) {
        this.realmId = realmId;
        return this;
    }

    /**
     * Getter for <code>keycloak.client_scope.description</code>.
     */
    @Override
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>keycloak.client_scope.description</code>.
     */
    @Override
    public ClientScope setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Getter for <code>keycloak.client_scope.protocol</code>.
     */
    @Override
    public String getProtocol() {
        return this.protocol;
    }

    /**
     * Setter for <code>keycloak.client_scope.protocol</code>.
     */
    @Override
    public ClientScope setProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ClientScope other = (ClientScope) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.realmId == null) {
            if (other.realmId != null)
                return false;
        }
        else if (!this.realmId.equals(other.realmId))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.protocol == null) {
            if (other.protocol != null)
                return false;
        }
        else if (!this.protocol.equals(other.protocol))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.realmId == null) ? 0 : this.realmId.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.protocol == null) ? 0 : this.protocol.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ClientScope (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(realmId);
        sb.append(", ").append(description);
        sb.append(", ").append(protocol);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IClientScope from) {
        setId(from.getId());
        setName(from.getName());
        setRealmId(from.getRealmId());
        setDescription(from.getDescription());
        setProtocol(from.getProtocol());
    }

    @Override
    public <E extends IClientScope> E into(E into) {
        into.from(this);
        return into;
    }
}
