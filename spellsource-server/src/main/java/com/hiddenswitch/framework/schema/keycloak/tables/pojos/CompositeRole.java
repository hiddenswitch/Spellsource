/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.ICompositeRole;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompositeRole implements VertxPojo, ICompositeRole {

    private static final long serialVersionUID = 1L;

    private String composite;
    private String childRole;

    public CompositeRole() {}

    public CompositeRole(ICompositeRole value) {
        this.composite = value.getComposite();
        this.childRole = value.getChildRole();
    }

    public CompositeRole(
        String composite,
        String childRole
    ) {
        this.composite = composite;
        this.childRole = childRole;
    }

        public CompositeRole(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>keycloak.composite_role.composite</code>.
     */
    @Override
    public String getComposite() {
        return this.composite;
    }

    /**
     * Setter for <code>keycloak.composite_role.composite</code>.
     */
    @Override
    public CompositeRole setComposite(String composite) {
        this.composite = composite;
        return this;
    }

    /**
     * Getter for <code>keycloak.composite_role.child_role</code>.
     */
    @Override
    public String getChildRole() {
        return this.childRole;
    }

    /**
     * Setter for <code>keycloak.composite_role.child_role</code>.
     */
    @Override
    public CompositeRole setChildRole(String childRole) {
        this.childRole = childRole;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CompositeRole (");

        sb.append(composite);
        sb.append(", ").append(childRole);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ICompositeRole from) {
        setComposite(from.getComposite());
        setChildRole(from.getChildRole());
    }

    @Override
    public <E extends ICompositeRole> E into(E into) {
        into.from(this);
        return into;
    }
}
