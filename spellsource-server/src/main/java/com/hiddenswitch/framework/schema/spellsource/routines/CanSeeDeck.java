/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.routines;


import com.hiddenswitch.framework.schema.spellsource.Spellsource;
import com.hiddenswitch.framework.schema.spellsource.tables.records.DecksRecord;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CanSeeDeck extends AbstractRoutine<Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>spellsource.can_see_deck.RETURN_VALUE</code>.
     */
    public static final Parameter<Boolean> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", SQLDataType.BOOLEAN, false, false);

    /**
     * The parameter <code>spellsource.can_see_deck.user_id</code>.
     */
    public static final Parameter<String> USER_ID = Internal.createParameter("user_id", SQLDataType.CLOB, false, false);

    /**
     * The parameter <code>spellsource.can_see_deck.deck</code>.
     */
    public static final Parameter<DecksRecord> DECK = Internal.createParameter("deck", com.hiddenswitch.framework.schema.spellsource.tables.Decks.DECKS.getDataType(), false, false);

    /**
     * Create a new routine call instance
     */
    public CanSeeDeck() {
        super("can_see_deck", Spellsource.SPELLSOURCE, SQLDataType.BOOLEAN);

        setReturnParameter(RETURN_VALUE);
        addInParameter(USER_ID);
        addInParameter(DECK);
    }

    /**
     * Set the <code>user_id</code> parameter IN value to the routine
     */
    public void setUserId(String value) {
        setValue(USER_ID, value);
    }

    /**
     * Set the <code>user_id</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public CanSeeDeck setUserId(Field<String> field) {
        setField(USER_ID, field);
        return this;
    }

    /**
     * Set the <code>deck</code> parameter IN value to the routine
     */
    public void setDeck(DecksRecord value) {
        setValue(DECK, value);
    }

    /**
     * Set the <code>deck</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public CanSeeDeck setDeck(Field<DecksRecord> field) {
        setField(DECK, field);
        return this;
    }
}
