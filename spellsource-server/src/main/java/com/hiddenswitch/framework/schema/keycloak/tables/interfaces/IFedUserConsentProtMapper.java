/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IFedUserConsentProtMapper extends VertxPojo, Serializable {

    /**
     * Setter for
     * <code>keycloak.fed_user_consent_prot_mapper.user_consent_id</code>.
     */
    public IFedUserConsentProtMapper setUserConsentId(String value);

    /**
     * Getter for
     * <code>keycloak.fed_user_consent_prot_mapper.user_consent_id</code>.
     */
    public String getUserConsentId();

    /**
     * Setter for
     * <code>keycloak.fed_user_consent_prot_mapper.protocol_mapper_id</code>.
     */
    public IFedUserConsentProtMapper setProtocolMapperId(String value);

    /**
     * Getter for
     * <code>keycloak.fed_user_consent_prot_mapper.protocol_mapper_id</code>.
     */
    public String getProtocolMapperId();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IFedUserConsentProtMapper
     */
    public void from(IFedUserConsentProtMapper from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IFedUserConsentProtMapper
     */
    public <E extends IFedUserConsentProtMapper> E into(E into);

        @Override
        public default IFedUserConsentProtMapper fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setUserConsentId,json::getString,"user_consent_id","java.lang.String");
                setOrThrow(this::setProtocolMapperId,json::getString,"protocol_mapper_id","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("user_consent_id",getUserConsentId());
                json.put("protocol_mapper_id",getProtocolMapperId());
                return json;
        }

}
