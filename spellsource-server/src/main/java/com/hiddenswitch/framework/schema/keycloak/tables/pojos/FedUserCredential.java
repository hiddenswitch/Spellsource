/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IFedUserCredential;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.util.Arrays;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FedUserCredential implements VertxPojo, IFedUserCredential {

    private static final long serialVersionUID = 1L;

    private String id;
    private byte[] salt;
    private String type;
    private Long createdDate;
    private String userId;
    private String realmId;
    private String storageProviderId;
    private String userLabel;
    private String secretData;
    private String credentialData;
    private Integer priority;

    public FedUserCredential() {}

    public FedUserCredential(IFedUserCredential value) {
        this.id = value.getId();
        this.salt = value.getSalt();
        this.type = value.getType();
        this.createdDate = value.getCreatedDate();
        this.userId = value.getUserId();
        this.realmId = value.getRealmId();
        this.storageProviderId = value.getStorageProviderId();
        this.userLabel = value.getUserLabel();
        this.secretData = value.getSecretData();
        this.credentialData = value.getCredentialData();
        this.priority = value.getPriority();
    }

    public FedUserCredential(
        String id,
        byte[] salt,
        String type,
        Long createdDate,
        String userId,
        String realmId,
        String storageProviderId,
        String userLabel,
        String secretData,
        String credentialData,
        Integer priority
    ) {
        this.id = id;
        this.salt = salt;
        this.type = type;
        this.createdDate = createdDate;
        this.userId = userId;
        this.realmId = realmId;
        this.storageProviderId = storageProviderId;
        this.userLabel = userLabel;
        this.secretData = secretData;
        this.credentialData = credentialData;
        this.priority = priority;
    }

        public FedUserCredential(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>keycloak.fed_user_credential.id</code>.
     */
    @Override
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.id</code>.
     */
    @Override
    public FedUserCredential setId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.salt</code>.
     */
    @Override
    public byte[] getSalt() {
        return this.salt;
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.salt</code>.
     */
    @Override
    public FedUserCredential setSalt(byte[] salt) {
        this.salt = salt;
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.type</code>.
     */
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.type</code>.
     */
    @Override
    public FedUserCredential setType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.created_date</code>.
     */
    @Override
    public Long getCreatedDate() {
        return this.createdDate;
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.created_date</code>.
     */
    @Override
    public FedUserCredential setCreatedDate(Long createdDate) {
        this.createdDate = createdDate;
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.user_id</code>.
     */
    @Override
    public String getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.user_id</code>.
     */
    @Override
    public FedUserCredential setUserId(String userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return this.realmId;
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.realm_id</code>.
     */
    @Override
    public FedUserCredential setRealmId(String realmId) {
        this.realmId = realmId;
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.storage_provider_id</code>.
     */
    @Override
    public String getStorageProviderId() {
        return this.storageProviderId;
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.storage_provider_id</code>.
     */
    @Override
    public FedUserCredential setStorageProviderId(String storageProviderId) {
        this.storageProviderId = storageProviderId;
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.user_label</code>.
     */
    @Override
    public String getUserLabel() {
        return this.userLabel;
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.user_label</code>.
     */
    @Override
    public FedUserCredential setUserLabel(String userLabel) {
        this.userLabel = userLabel;
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.secret_data</code>.
     */
    @Override
    public String getSecretData() {
        return this.secretData;
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.secret_data</code>.
     */
    @Override
    public FedUserCredential setSecretData(String secretData) {
        this.secretData = secretData;
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.credential_data</code>.
     */
    @Override
    public String getCredentialData() {
        return this.credentialData;
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.credential_data</code>.
     */
    @Override
    public FedUserCredential setCredentialData(String credentialData) {
        this.credentialData = credentialData;
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.priority</code>.
     */
    @Override
    public Integer getPriority() {
        return this.priority;
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.priority</code>.
     */
    @Override
    public FedUserCredential setPriority(Integer priority) {
        this.priority = priority;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FedUserCredential other = (FedUserCredential) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.salt == null) {
            if (other.salt != null)
                return false;
        }
        else if (!Arrays.equals(this.salt, other.salt))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        if (this.createdDate == null) {
            if (other.createdDate != null)
                return false;
        }
        else if (!this.createdDate.equals(other.createdDate))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.realmId == null) {
            if (other.realmId != null)
                return false;
        }
        else if (!this.realmId.equals(other.realmId))
            return false;
        if (this.storageProviderId == null) {
            if (other.storageProviderId != null)
                return false;
        }
        else if (!this.storageProviderId.equals(other.storageProviderId))
            return false;
        if (this.userLabel == null) {
            if (other.userLabel != null)
                return false;
        }
        else if (!this.userLabel.equals(other.userLabel))
            return false;
        if (this.secretData == null) {
            if (other.secretData != null)
                return false;
        }
        else if (!this.secretData.equals(other.secretData))
            return false;
        if (this.credentialData == null) {
            if (other.credentialData != null)
                return false;
        }
        else if (!this.credentialData.equals(other.credentialData))
            return false;
        if (this.priority == null) {
            if (other.priority != null)
                return false;
        }
        else if (!this.priority.equals(other.priority))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.salt == null) ? 0 : Arrays.hashCode(this.salt));
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.createdDate == null) ? 0 : this.createdDate.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.realmId == null) ? 0 : this.realmId.hashCode());
        result = prime * result + ((this.storageProviderId == null) ? 0 : this.storageProviderId.hashCode());
        result = prime * result + ((this.userLabel == null) ? 0 : this.userLabel.hashCode());
        result = prime * result + ((this.secretData == null) ? 0 : this.secretData.hashCode());
        result = prime * result + ((this.credentialData == null) ? 0 : this.credentialData.hashCode());
        result = prime * result + ((this.priority == null) ? 0 : this.priority.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FedUserCredential (");

        sb.append(id);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(type);
        sb.append(", ").append(createdDate);
        sb.append(", ").append(userId);
        sb.append(", ").append(realmId);
        sb.append(", ").append(storageProviderId);
        sb.append(", ").append(userLabel);
        sb.append(", ").append(secretData);
        sb.append(", ").append(credentialData);
        sb.append(", ").append(priority);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFedUserCredential from) {
        setId(from.getId());
        setSalt(from.getSalt());
        setType(from.getType());
        setCreatedDate(from.getCreatedDate());
        setUserId(from.getUserId());
        setRealmId(from.getRealmId());
        setStorageProviderId(from.getStorageProviderId());
        setUserLabel(from.getUserLabel());
        setSecretData(from.getSecretData());
        setCredentialData(from.getCredentialData());
        setPriority(from.getPriority());
    }

    @Override
    public <E extends IFedUserCredential> E into(E into) {
        into.from(this);
        return into;
    }
}
