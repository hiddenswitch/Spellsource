/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IEventEntity;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventEntity implements VertxPojo, IEventEntity {

    private static final long serialVersionUID = 1L;

    private String id;
    private String clientId;
    private String detailsJson;
    private String error;
    private String ipAddress;
    private String realmId;
    private String sessionId;
    private Long eventTime;
    private String type;
    private String userId;

    public EventEntity() {}

    public EventEntity(IEventEntity value) {
        this.id = value.getId();
        this.clientId = value.getClientId();
        this.detailsJson = value.getDetailsJson();
        this.error = value.getError();
        this.ipAddress = value.getIpAddress();
        this.realmId = value.getRealmId();
        this.sessionId = value.getSessionId();
        this.eventTime = value.getEventTime();
        this.type = value.getType();
        this.userId = value.getUserId();
    }

    public EventEntity(
        String id,
        String clientId,
        String detailsJson,
        String error,
        String ipAddress,
        String realmId,
        String sessionId,
        Long eventTime,
        String type,
        String userId
    ) {
        this.id = id;
        this.clientId = clientId;
        this.detailsJson = detailsJson;
        this.error = error;
        this.ipAddress = ipAddress;
        this.realmId = realmId;
        this.sessionId = sessionId;
        this.eventTime = eventTime;
        this.type = type;
        this.userId = userId;
    }

        public EventEntity(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>keycloak.event_entity.id</code>.
     */
    @Override
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>keycloak.event_entity.id</code>.
     */
    @Override
    public EventEntity setId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>keycloak.event_entity.client_id</code>.
     */
    @Override
    public String getClientId() {
        return this.clientId;
    }

    /**
     * Setter for <code>keycloak.event_entity.client_id</code>.
     */
    @Override
    public EventEntity setClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Getter for <code>keycloak.event_entity.details_json</code>.
     */
    @Override
    public String getDetailsJson() {
        return this.detailsJson;
    }

    /**
     * Setter for <code>keycloak.event_entity.details_json</code>.
     */
    @Override
    public EventEntity setDetailsJson(String detailsJson) {
        this.detailsJson = detailsJson;
        return this;
    }

    /**
     * Getter for <code>keycloak.event_entity.error</code>.
     */
    @Override
    public String getError() {
        return this.error;
    }

    /**
     * Setter for <code>keycloak.event_entity.error</code>.
     */
    @Override
    public EventEntity setError(String error) {
        this.error = error;
        return this;
    }

    /**
     * Getter for <code>keycloak.event_entity.ip_address</code>.
     */
    @Override
    public String getIpAddress() {
        return this.ipAddress;
    }

    /**
     * Setter for <code>keycloak.event_entity.ip_address</code>.
     */
    @Override
    public EventEntity setIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }

    /**
     * Getter for <code>keycloak.event_entity.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return this.realmId;
    }

    /**
     * Setter for <code>keycloak.event_entity.realm_id</code>.
     */
    @Override
    public EventEntity setRealmId(String realmId) {
        this.realmId = realmId;
        return this;
    }

    /**
     * Getter for <code>keycloak.event_entity.session_id</code>.
     */
    @Override
    public String getSessionId() {
        return this.sessionId;
    }

    /**
     * Setter for <code>keycloak.event_entity.session_id</code>.
     */
    @Override
    public EventEntity setSessionId(String sessionId) {
        this.sessionId = sessionId;
        return this;
    }

    /**
     * Getter for <code>keycloak.event_entity.event_time</code>.
     */
    @Override
    public Long getEventTime() {
        return this.eventTime;
    }

    /**
     * Setter for <code>keycloak.event_entity.event_time</code>.
     */
    @Override
    public EventEntity setEventTime(Long eventTime) {
        this.eventTime = eventTime;
        return this;
    }

    /**
     * Getter for <code>keycloak.event_entity.type</code>.
     */
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>keycloak.event_entity.type</code>.
     */
    @Override
    public EventEntity setType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Getter for <code>keycloak.event_entity.user_id</code>.
     */
    @Override
    public String getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>keycloak.event_entity.user_id</code>.
     */
    @Override
    public EventEntity setUserId(String userId) {
        this.userId = userId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final EventEntity other = (EventEntity) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.clientId == null) {
            if (other.clientId != null)
                return false;
        }
        else if (!this.clientId.equals(other.clientId))
            return false;
        if (this.detailsJson == null) {
            if (other.detailsJson != null)
                return false;
        }
        else if (!this.detailsJson.equals(other.detailsJson))
            return false;
        if (this.error == null) {
            if (other.error != null)
                return false;
        }
        else if (!this.error.equals(other.error))
            return false;
        if (this.ipAddress == null) {
            if (other.ipAddress != null)
                return false;
        }
        else if (!this.ipAddress.equals(other.ipAddress))
            return false;
        if (this.realmId == null) {
            if (other.realmId != null)
                return false;
        }
        else if (!this.realmId.equals(other.realmId))
            return false;
        if (this.sessionId == null) {
            if (other.sessionId != null)
                return false;
        }
        else if (!this.sessionId.equals(other.sessionId))
            return false;
        if (this.eventTime == null) {
            if (other.eventTime != null)
                return false;
        }
        else if (!this.eventTime.equals(other.eventTime))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.clientId == null) ? 0 : this.clientId.hashCode());
        result = prime * result + ((this.detailsJson == null) ? 0 : this.detailsJson.hashCode());
        result = prime * result + ((this.error == null) ? 0 : this.error.hashCode());
        result = prime * result + ((this.ipAddress == null) ? 0 : this.ipAddress.hashCode());
        result = prime * result + ((this.realmId == null) ? 0 : this.realmId.hashCode());
        result = prime * result + ((this.sessionId == null) ? 0 : this.sessionId.hashCode());
        result = prime * result + ((this.eventTime == null) ? 0 : this.eventTime.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("EventEntity (");

        sb.append(id);
        sb.append(", ").append(clientId);
        sb.append(", ").append(detailsJson);
        sb.append(", ").append(error);
        sb.append(", ").append(ipAddress);
        sb.append(", ").append(realmId);
        sb.append(", ").append(sessionId);
        sb.append(", ").append(eventTime);
        sb.append(", ").append(type);
        sb.append(", ").append(userId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IEventEntity from) {
        setId(from.getId());
        setClientId(from.getClientId());
        setDetailsJson(from.getDetailsJson());
        setError(from.getError());
        setIpAddress(from.getIpAddress());
        setRealmId(from.getRealmId());
        setSessionId(from.getSessionId());
        setEventTime(from.getEventTime());
        setType(from.getType());
        setUserId(from.getUserId());
    }

    @Override
    public <E extends IEventEntity> E into(E into) {
        into.from(this);
        return into;
    }
}
