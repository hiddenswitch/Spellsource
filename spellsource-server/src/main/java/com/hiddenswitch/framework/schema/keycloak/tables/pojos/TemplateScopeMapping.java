/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.ITemplateScopeMapping;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TemplateScopeMapping implements VertxPojo, ITemplateScopeMapping {

    private static final long serialVersionUID = 1L;

    private String templateId;
    private String roleId;

    public TemplateScopeMapping() {}

    public TemplateScopeMapping(ITemplateScopeMapping value) {
        this.templateId = value.getTemplateId();
        this.roleId = value.getRoleId();
    }

    public TemplateScopeMapping(
        String templateId,
        String roleId
    ) {
        this.templateId = templateId;
        this.roleId = roleId;
    }

        public TemplateScopeMapping(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>keycloak.template_scope_mapping.template_id</code>.
     */
    @Override
    public String getTemplateId() {
        return this.templateId;
    }

    /**
     * Setter for <code>keycloak.template_scope_mapping.template_id</code>.
     */
    @Override
    public TemplateScopeMapping setTemplateId(String templateId) {
        this.templateId = templateId;
        return this;
    }

    /**
     * Getter for <code>keycloak.template_scope_mapping.role_id</code>.
     */
    @Override
    public String getRoleId() {
        return this.roleId;
    }

    /**
     * Setter for <code>keycloak.template_scope_mapping.role_id</code>.
     */
    @Override
    public TemplateScopeMapping setRoleId(String roleId) {
        this.roleId = roleId;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TemplateScopeMapping (");

        sb.append(templateId);
        sb.append(", ").append(roleId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITemplateScopeMapping from) {
        setTemplateId(from.getTemplateId());
        setRoleId(from.getRoleId());
    }

    @Override
    public <E extends ITemplateScopeMapping> E into(E into) {
        into.from(this);
        return into;
    }
}
