/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.records;


import com.hiddenswitch.framework.schema.keycloak.tables.AdminEventEntity;
import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IAdminEventEntity;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.TableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminEventEntityRecord extends TableRecordImpl<AdminEventEntityRecord> implements VertxPojo, Record12<String, Long, String, String, String, String, String, String, String, String, String, String>, IAdminEventEntity {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>keycloak.admin_event_entity.id</code>.
     */
    @Override
    public AdminEventEntityRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.admin_event_entity.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>keycloak.admin_event_entity.admin_event_time</code>.
     */
    @Override
    public AdminEventEntityRecord setAdminEventTime(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.admin_event_entity.admin_event_time</code>.
     */
    @Override
    public Long getAdminEventTime() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>keycloak.admin_event_entity.realm_id</code>.
     */
    @Override
    public AdminEventEntityRecord setRealmId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.admin_event_entity.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>keycloak.admin_event_entity.operation_type</code>.
     */
    @Override
    public AdminEventEntityRecord setOperationType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.admin_event_entity.operation_type</code>.
     */
    @Override
    public String getOperationType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>keycloak.admin_event_entity.auth_realm_id</code>.
     */
    @Override
    public AdminEventEntityRecord setAuthRealmId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.admin_event_entity.auth_realm_id</code>.
     */
    @Override
    public String getAuthRealmId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>keycloak.admin_event_entity.auth_client_id</code>.
     */
    @Override
    public AdminEventEntityRecord setAuthClientId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.admin_event_entity.auth_client_id</code>.
     */
    @Override
    public String getAuthClientId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>keycloak.admin_event_entity.auth_user_id</code>.
     */
    @Override
    public AdminEventEntityRecord setAuthUserId(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.admin_event_entity.auth_user_id</code>.
     */
    @Override
    public String getAuthUserId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>keycloak.admin_event_entity.ip_address</code>.
     */
    @Override
    public AdminEventEntityRecord setIpAddress(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.admin_event_entity.ip_address</code>.
     */
    @Override
    public String getIpAddress() {
        return (String) get(7);
    }

    /**
     * Setter for <code>keycloak.admin_event_entity.resource_path</code>.
     */
    @Override
    public AdminEventEntityRecord setResourcePath(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.admin_event_entity.resource_path</code>.
     */
    @Override
    public String getResourcePath() {
        return (String) get(8);
    }

    /**
     * Setter for <code>keycloak.admin_event_entity.representation</code>.
     */
    @Override
    public AdminEventEntityRecord setRepresentation(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.admin_event_entity.representation</code>.
     */
    @Override
    public String getRepresentation() {
        return (String) get(9);
    }

    /**
     * Setter for <code>keycloak.admin_event_entity.error</code>.
     */
    @Override
    public AdminEventEntityRecord setError(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.admin_event_entity.error</code>.
     */
    @Override
    public String getError() {
        return (String) get(10);
    }

    /**
     * Setter for <code>keycloak.admin_event_entity.resource_type</code>.
     */
    @Override
    public AdminEventEntityRecord setResourceType(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.admin_event_entity.resource_type</code>.
     */
    @Override
    public String getResourceType() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, Long, String, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<String, Long, String, String, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AdminEventEntity.ADMIN_EVENT_ENTITY.ID;
    }

    @Override
    public Field<Long> field2() {
        return AdminEventEntity.ADMIN_EVENT_ENTITY.ADMIN_EVENT_TIME;
    }

    @Override
    public Field<String> field3() {
        return AdminEventEntity.ADMIN_EVENT_ENTITY.REALM_ID;
    }

    @Override
    public Field<String> field4() {
        return AdminEventEntity.ADMIN_EVENT_ENTITY.OPERATION_TYPE;
    }

    @Override
    public Field<String> field5() {
        return AdminEventEntity.ADMIN_EVENT_ENTITY.AUTH_REALM_ID;
    }

    @Override
    public Field<String> field6() {
        return AdminEventEntity.ADMIN_EVENT_ENTITY.AUTH_CLIENT_ID;
    }

    @Override
    public Field<String> field7() {
        return AdminEventEntity.ADMIN_EVENT_ENTITY.AUTH_USER_ID;
    }

    @Override
    public Field<String> field8() {
        return AdminEventEntity.ADMIN_EVENT_ENTITY.IP_ADDRESS;
    }

    @Override
    public Field<String> field9() {
        return AdminEventEntity.ADMIN_EVENT_ENTITY.RESOURCE_PATH;
    }

    @Override
    public Field<String> field10() {
        return AdminEventEntity.ADMIN_EVENT_ENTITY.REPRESENTATION;
    }

    @Override
    public Field<String> field11() {
        return AdminEventEntity.ADMIN_EVENT_ENTITY.ERROR;
    }

    @Override
    public Field<String> field12() {
        return AdminEventEntity.ADMIN_EVENT_ENTITY.RESOURCE_TYPE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAdminEventTime();
    }

    @Override
    public String component3() {
        return getRealmId();
    }

    @Override
    public String component4() {
        return getOperationType();
    }

    @Override
    public String component5() {
        return getAuthRealmId();
    }

    @Override
    public String component6() {
        return getAuthClientId();
    }

    @Override
    public String component7() {
        return getAuthUserId();
    }

    @Override
    public String component8() {
        return getIpAddress();
    }

    @Override
    public String component9() {
        return getResourcePath();
    }

    @Override
    public String component10() {
        return getRepresentation();
    }

    @Override
    public String component11() {
        return getError();
    }

    @Override
    public String component12() {
        return getResourceType();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAdminEventTime();
    }

    @Override
    public String value3() {
        return getRealmId();
    }

    @Override
    public String value4() {
        return getOperationType();
    }

    @Override
    public String value5() {
        return getAuthRealmId();
    }

    @Override
    public String value6() {
        return getAuthClientId();
    }

    @Override
    public String value7() {
        return getAuthUserId();
    }

    @Override
    public String value8() {
        return getIpAddress();
    }

    @Override
    public String value9() {
        return getResourcePath();
    }

    @Override
    public String value10() {
        return getRepresentation();
    }

    @Override
    public String value11() {
        return getError();
    }

    @Override
    public String value12() {
        return getResourceType();
    }

    @Override
    public AdminEventEntityRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public AdminEventEntityRecord value2(Long value) {
        setAdminEventTime(value);
        return this;
    }

    @Override
    public AdminEventEntityRecord value3(String value) {
        setRealmId(value);
        return this;
    }

    @Override
    public AdminEventEntityRecord value4(String value) {
        setOperationType(value);
        return this;
    }

    @Override
    public AdminEventEntityRecord value5(String value) {
        setAuthRealmId(value);
        return this;
    }

    @Override
    public AdminEventEntityRecord value6(String value) {
        setAuthClientId(value);
        return this;
    }

    @Override
    public AdminEventEntityRecord value7(String value) {
        setAuthUserId(value);
        return this;
    }

    @Override
    public AdminEventEntityRecord value8(String value) {
        setIpAddress(value);
        return this;
    }

    @Override
    public AdminEventEntityRecord value9(String value) {
        setResourcePath(value);
        return this;
    }

    @Override
    public AdminEventEntityRecord value10(String value) {
        setRepresentation(value);
        return this;
    }

    @Override
    public AdminEventEntityRecord value11(String value) {
        setError(value);
        return this;
    }

    @Override
    public AdminEventEntityRecord value12(String value) {
        setResourceType(value);
        return this;
    }

    @Override
    public AdminEventEntityRecord values(String value1, Long value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IAdminEventEntity from) {
        setId(from.getId());
        setAdminEventTime(from.getAdminEventTime());
        setRealmId(from.getRealmId());
        setOperationType(from.getOperationType());
        setAuthRealmId(from.getAuthRealmId());
        setAuthClientId(from.getAuthClientId());
        setAuthUserId(from.getAuthUserId());
        setIpAddress(from.getIpAddress());
        setResourcePath(from.getResourcePath());
        setRepresentation(from.getRepresentation());
        setError(from.getError());
        setResourceType(from.getResourceType());
    }

    @Override
    public <E extends IAdminEventEntity> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdminEventEntityRecord
     */
    public AdminEventEntityRecord() {
        super(AdminEventEntity.ADMIN_EVENT_ENTITY);
    }

    /**
     * Create a detached, initialised AdminEventEntityRecord
     */
    public AdminEventEntityRecord(String id, Long adminEventTime, String realmId, String operationType, String authRealmId, String authClientId, String authUserId, String ipAddress, String resourcePath, String representation, String error, String resourceType) {
        super(AdminEventEntity.ADMIN_EVENT_ENTITY);

        setId(id);
        setAdminEventTime(adminEventTime);
        setRealmId(realmId);
        setOperationType(operationType);
        setAuthRealmId(authRealmId);
        setAuthClientId(authClientId);
        setAuthUserId(authUserId);
        setIpAddress(ipAddress);
        setResourcePath(resourcePath);
        setRepresentation(representation);
        setError(error);
        setResourceType(resourceType);
    }

    /**
     * Create a detached, initialised AdminEventEntityRecord
     */
    public AdminEventEntityRecord(com.hiddenswitch.framework.schema.keycloak.tables.pojos.AdminEventEntity value) {
        super(AdminEventEntity.ADMIN_EVENT_ENTITY);

        if (value != null) {
            setId(value.getId());
            setAdminEventTime(value.getAdminEventTime());
            setRealmId(value.getRealmId());
            setOperationType(value.getOperationType());
            setAuthRealmId(value.getAuthRealmId());
            setAuthClientId(value.getAuthClientId());
            setAuthUserId(value.getAuthUserId());
            setIpAddress(value.getIpAddress());
            setResourcePath(value.getResourcePath());
            setRepresentation(value.getRepresentation());
            setError(value.getError());
            setResourceType(value.getResourceType());
        }
    }

        public AdminEventEntityRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
