/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.daos;


import com.hiddenswitch.framework.schema.keycloak.tables.MigrationModel;
import com.hiddenswitch.framework.schema.keycloak.tables.records.MigrationModelRecord;

import io.github.jklingsporn.vertx.jooq.shared.reactive.AbstractReactiveVertxDAO;

import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import io.vertx.core.Future;
import io.github.jklingsporn.vertx.jooq.classic.reactivepg.ReactiveClassicQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MigrationModelDao extends AbstractReactiveVertxDAO<MigrationModelRecord, com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel, String, Future<List<com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel>>, Future<com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<MigrationModelRecord,com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel,String> {

        /**
     * @param configuration Used for rendering, so only SQLDialect must be set
     * and must be one of the POSTGREs types.
     * @param delegate A configured AsyncSQLClient that is used for query
     * execution
     */
        public MigrationModelDao(Configuration configuration, io.vertx.sqlclient.SqlClient delegate) {
                super(MigrationModel.MIGRATION_MODEL, com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel.class, new ReactiveClassicQueryExecutor<MigrationModelRecord,com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel,String>(configuration,delegate,com.hiddenswitch.framework.schema.keycloak.tables.mappers.RowMappers.getMigrationModelMapper()));
        }

        @Override
        protected String getId(com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel object) {
                return object.getId();
        }

        /**
     * Find records that have <code>version IN (values)</code> asynchronously
     */
        public Future<List<com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel>> findManyByVersion(Collection<String> values) {
                return findManyByCondition(MigrationModel.MIGRATION_MODEL.VERSION.in(values));
        }

        /**
     * Find records that have <code>version IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel>> findManyByVersion(Collection<String> values, int limit) {
                return findManyByCondition(MigrationModel.MIGRATION_MODEL.VERSION.in(values),limit);
        }

        /**
     * Find records that have <code>update_time IN (values)</code>
     * asynchronously
     */
        public Future<List<com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel>> findManyByUpdateTime(Collection<Long> values) {
                return findManyByCondition(MigrationModel.MIGRATION_MODEL.UPDATE_TIME.in(values));
        }

        /**
     * Find records that have <code>update_time IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel>> findManyByUpdateTime(Collection<Long> values, int limit) {
                return findManyByCondition(MigrationModel.MIGRATION_MODEL.UPDATE_TIME.in(values),limit);
        }

        @Override
        public ReactiveClassicQueryExecutor<MigrationModelRecord,com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel,String> queryExecutor(){
                return (ReactiveClassicQueryExecutor<MigrationModelRecord,com.hiddenswitch.framework.schema.keycloak.tables.pojos.MigrationModel,String>) super.queryExecutor();
        }
}
