/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.vertx.core.json.JsonObject;

import java.io.Serializable;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IGeneratedArt extends VertxPojo, Serializable {

    /**
     * Setter for <code>spellsource.generated_art.hash</code>.
     */
    public IGeneratedArt setHash(String value);

    /**
     * Getter for <code>spellsource.generated_art.hash</code>.
     */
    public String getHash();

    /**
     * Setter for <code>spellsource.generated_art.owner</code>.
     */
    public IGeneratedArt setOwner(String value);

    /**
     * Getter for <code>spellsource.generated_art.owner</code>.
     */
    public String getOwner();

    /**
     * Setter for <code>spellsource.generated_art.urls</code>.
     */
    public IGeneratedArt setUrls(String[] value);

    /**
     * Getter for <code>spellsource.generated_art.urls</code>.
     */
    public String[] getUrls();

    /**
     * Setter for <code>spellsource.generated_art.info</code>.
     */
    public IGeneratedArt setInfo(JsonObject value);

    /**
     * Getter for <code>spellsource.generated_art.info</code>.
     */
    public JsonObject getInfo();

    /**
     * Setter for <code>spellsource.generated_art.is_archived</code>.
     */
    public IGeneratedArt setIsArchived(Boolean value);

    /**
     * Getter for <code>spellsource.generated_art.is_archived</code>.
     */
    public Boolean getIsArchived();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IGeneratedArt
     */
    public void from(IGeneratedArt from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IGeneratedArt
     */
    public <E extends IGeneratedArt> E into(E into);

        @Override
        public default IGeneratedArt fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setHash,json::getString,"hash","java.lang.String");
                setOrThrow(this::setOwner,json::getString,"owner","java.lang.String");
                // Omitting unrecognized type java.lang.String[] for column urls!
                setInfo(com.hiddenswitch.framework.schema.spellsource.tables.converters.Converters.IO_GITHUB_JKLINGSPORN_VERTX_JOOQ_SHARED_POSTGRES_JSONBTOJSONOBJECTCONVERTER_INSTANCE.pgConverter().from(json.getJsonObject("info")));
                setOrThrow(this::setIsArchived,json::getBoolean,"is_archived","java.lang.Boolean");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("hash",getHash());
                json.put("owner",getOwner());
                // Omitting unrecognized type java.lang.String[] for column urls!
                json.put("info",com.hiddenswitch.framework.schema.spellsource.tables.converters.Converters.IO_GITHUB_JKLINGSPORN_VERTX_JOOQ_SHARED_POSTGRES_JSONBTOJSONOBJECTCONVERTER_INSTANCE.pgConverter().to(getInfo()));
                json.put("is_archived",getIsArchived());
                return json;
        }

}
