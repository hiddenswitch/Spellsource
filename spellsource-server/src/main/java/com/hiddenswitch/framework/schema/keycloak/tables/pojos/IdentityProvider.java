/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IIdentityProvider;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdentityProvider implements VertxPojo, IIdentityProvider {

    private static final long serialVersionUID = 1L;

    private String internalId;
    private Boolean enabled;
    private String providerAlias;
    private String providerId;
    private Boolean storeToken;
    private Boolean authenticateByDefault;
    private String realmId;
    private Boolean addTokenRole;
    private Boolean trustEmail;
    private String firstBrokerLoginFlowId;
    private String postBrokerLoginFlowId;
    private String providerDisplayName;
    private Boolean linkOnly;

    public IdentityProvider() {}

    public IdentityProvider(IIdentityProvider value) {
        this.internalId = value.getInternalId();
        this.enabled = value.getEnabled();
        this.providerAlias = value.getProviderAlias();
        this.providerId = value.getProviderId();
        this.storeToken = value.getStoreToken();
        this.authenticateByDefault = value.getAuthenticateByDefault();
        this.realmId = value.getRealmId();
        this.addTokenRole = value.getAddTokenRole();
        this.trustEmail = value.getTrustEmail();
        this.firstBrokerLoginFlowId = value.getFirstBrokerLoginFlowId();
        this.postBrokerLoginFlowId = value.getPostBrokerLoginFlowId();
        this.providerDisplayName = value.getProviderDisplayName();
        this.linkOnly = value.getLinkOnly();
    }

    public IdentityProvider(
        String internalId,
        Boolean enabled,
        String providerAlias,
        String providerId,
        Boolean storeToken,
        Boolean authenticateByDefault,
        String realmId,
        Boolean addTokenRole,
        Boolean trustEmail,
        String firstBrokerLoginFlowId,
        String postBrokerLoginFlowId,
        String providerDisplayName,
        Boolean linkOnly
    ) {
        this.internalId = internalId;
        this.enabled = enabled;
        this.providerAlias = providerAlias;
        this.providerId = providerId;
        this.storeToken = storeToken;
        this.authenticateByDefault = authenticateByDefault;
        this.realmId = realmId;
        this.addTokenRole = addTokenRole;
        this.trustEmail = trustEmail;
        this.firstBrokerLoginFlowId = firstBrokerLoginFlowId;
        this.postBrokerLoginFlowId = postBrokerLoginFlowId;
        this.providerDisplayName = providerDisplayName;
        this.linkOnly = linkOnly;
    }

        public IdentityProvider(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>keycloak.identity_provider.internal_id</code>.
     */
    @Override
    public String getInternalId() {
        return this.internalId;
    }

    /**
     * Setter for <code>keycloak.identity_provider.internal_id</code>.
     */
    @Override
    public IdentityProvider setInternalId(String internalId) {
        this.internalId = internalId;
        return this;
    }

    /**
     * Getter for <code>keycloak.identity_provider.enabled</code>.
     */
    @Override
    public Boolean getEnabled() {
        return this.enabled;
    }

    /**
     * Setter for <code>keycloak.identity_provider.enabled</code>.
     */
    @Override
    public IdentityProvider setEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Getter for <code>keycloak.identity_provider.provider_alias</code>.
     */
    @Override
    public String getProviderAlias() {
        return this.providerAlias;
    }

    /**
     * Setter for <code>keycloak.identity_provider.provider_alias</code>.
     */
    @Override
    public IdentityProvider setProviderAlias(String providerAlias) {
        this.providerAlias = providerAlias;
        return this;
    }

    /**
     * Getter for <code>keycloak.identity_provider.provider_id</code>.
     */
    @Override
    public String getProviderId() {
        return this.providerId;
    }

    /**
     * Setter for <code>keycloak.identity_provider.provider_id</code>.
     */
    @Override
    public IdentityProvider setProviderId(String providerId) {
        this.providerId = providerId;
        return this;
    }

    /**
     * Getter for <code>keycloak.identity_provider.store_token</code>.
     */
    @Override
    public Boolean getStoreToken() {
        return this.storeToken;
    }

    /**
     * Setter for <code>keycloak.identity_provider.store_token</code>.
     */
    @Override
    public IdentityProvider setStoreToken(Boolean storeToken) {
        this.storeToken = storeToken;
        return this;
    }

    /**
     * Getter for
     * <code>keycloak.identity_provider.authenticate_by_default</code>.
     */
    @Override
    public Boolean getAuthenticateByDefault() {
        return this.authenticateByDefault;
    }

    /**
     * Setter for
     * <code>keycloak.identity_provider.authenticate_by_default</code>.
     */
    @Override
    public IdentityProvider setAuthenticateByDefault(Boolean authenticateByDefault) {
        this.authenticateByDefault = authenticateByDefault;
        return this;
    }

    /**
     * Getter for <code>keycloak.identity_provider.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return this.realmId;
    }

    /**
     * Setter for <code>keycloak.identity_provider.realm_id</code>.
     */
    @Override
    public IdentityProvider setRealmId(String realmId) {
        this.realmId = realmId;
        return this;
    }

    /**
     * Getter for <code>keycloak.identity_provider.add_token_role</code>.
     */
    @Override
    public Boolean getAddTokenRole() {
        return this.addTokenRole;
    }

    /**
     * Setter for <code>keycloak.identity_provider.add_token_role</code>.
     */
    @Override
    public IdentityProvider setAddTokenRole(Boolean addTokenRole) {
        this.addTokenRole = addTokenRole;
        return this;
    }

    /**
     * Getter for <code>keycloak.identity_provider.trust_email</code>.
     */
    @Override
    public Boolean getTrustEmail() {
        return this.trustEmail;
    }

    /**
     * Setter for <code>keycloak.identity_provider.trust_email</code>.
     */
    @Override
    public IdentityProvider setTrustEmail(Boolean trustEmail) {
        this.trustEmail = trustEmail;
        return this;
    }

    /**
     * Getter for
     * <code>keycloak.identity_provider.first_broker_login_flow_id</code>.
     */
    @Override
    public String getFirstBrokerLoginFlowId() {
        return this.firstBrokerLoginFlowId;
    }

    /**
     * Setter for
     * <code>keycloak.identity_provider.first_broker_login_flow_id</code>.
     */
    @Override
    public IdentityProvider setFirstBrokerLoginFlowId(String firstBrokerLoginFlowId) {
        this.firstBrokerLoginFlowId = firstBrokerLoginFlowId;
        return this;
    }

    /**
     * Getter for
     * <code>keycloak.identity_provider.post_broker_login_flow_id</code>.
     */
    @Override
    public String getPostBrokerLoginFlowId() {
        return this.postBrokerLoginFlowId;
    }

    /**
     * Setter for
     * <code>keycloak.identity_provider.post_broker_login_flow_id</code>.
     */
    @Override
    public IdentityProvider setPostBrokerLoginFlowId(String postBrokerLoginFlowId) {
        this.postBrokerLoginFlowId = postBrokerLoginFlowId;
        return this;
    }

    /**
     * Getter for <code>keycloak.identity_provider.provider_display_name</code>.
     */
    @Override
    public String getProviderDisplayName() {
        return this.providerDisplayName;
    }

    /**
     * Setter for <code>keycloak.identity_provider.provider_display_name</code>.
     */
    @Override
    public IdentityProvider setProviderDisplayName(String providerDisplayName) {
        this.providerDisplayName = providerDisplayName;
        return this;
    }

    /**
     * Getter for <code>keycloak.identity_provider.link_only</code>.
     */
    @Override
    public Boolean getLinkOnly() {
        return this.linkOnly;
    }

    /**
     * Setter for <code>keycloak.identity_provider.link_only</code>.
     */
    @Override
    public IdentityProvider setLinkOnly(Boolean linkOnly) {
        this.linkOnly = linkOnly;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final IdentityProvider other = (IdentityProvider) obj;
        if (this.internalId == null) {
            if (other.internalId != null)
                return false;
        }
        else if (!this.internalId.equals(other.internalId))
            return false;
        if (this.enabled == null) {
            if (other.enabled != null)
                return false;
        }
        else if (!this.enabled.equals(other.enabled))
            return false;
        if (this.providerAlias == null) {
            if (other.providerAlias != null)
                return false;
        }
        else if (!this.providerAlias.equals(other.providerAlias))
            return false;
        if (this.providerId == null) {
            if (other.providerId != null)
                return false;
        }
        else if (!this.providerId.equals(other.providerId))
            return false;
        if (this.storeToken == null) {
            if (other.storeToken != null)
                return false;
        }
        else if (!this.storeToken.equals(other.storeToken))
            return false;
        if (this.authenticateByDefault == null) {
            if (other.authenticateByDefault != null)
                return false;
        }
        else if (!this.authenticateByDefault.equals(other.authenticateByDefault))
            return false;
        if (this.realmId == null) {
            if (other.realmId != null)
                return false;
        }
        else if (!this.realmId.equals(other.realmId))
            return false;
        if (this.addTokenRole == null) {
            if (other.addTokenRole != null)
                return false;
        }
        else if (!this.addTokenRole.equals(other.addTokenRole))
            return false;
        if (this.trustEmail == null) {
            if (other.trustEmail != null)
                return false;
        }
        else if (!this.trustEmail.equals(other.trustEmail))
            return false;
        if (this.firstBrokerLoginFlowId == null) {
            if (other.firstBrokerLoginFlowId != null)
                return false;
        }
        else if (!this.firstBrokerLoginFlowId.equals(other.firstBrokerLoginFlowId))
            return false;
        if (this.postBrokerLoginFlowId == null) {
            if (other.postBrokerLoginFlowId != null)
                return false;
        }
        else if (!this.postBrokerLoginFlowId.equals(other.postBrokerLoginFlowId))
            return false;
        if (this.providerDisplayName == null) {
            if (other.providerDisplayName != null)
                return false;
        }
        else if (!this.providerDisplayName.equals(other.providerDisplayName))
            return false;
        if (this.linkOnly == null) {
            if (other.linkOnly != null)
                return false;
        }
        else if (!this.linkOnly.equals(other.linkOnly))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.internalId == null) ? 0 : this.internalId.hashCode());
        result = prime * result + ((this.enabled == null) ? 0 : this.enabled.hashCode());
        result = prime * result + ((this.providerAlias == null) ? 0 : this.providerAlias.hashCode());
        result = prime * result + ((this.providerId == null) ? 0 : this.providerId.hashCode());
        result = prime * result + ((this.storeToken == null) ? 0 : this.storeToken.hashCode());
        result = prime * result + ((this.authenticateByDefault == null) ? 0 : this.authenticateByDefault.hashCode());
        result = prime * result + ((this.realmId == null) ? 0 : this.realmId.hashCode());
        result = prime * result + ((this.addTokenRole == null) ? 0 : this.addTokenRole.hashCode());
        result = prime * result + ((this.trustEmail == null) ? 0 : this.trustEmail.hashCode());
        result = prime * result + ((this.firstBrokerLoginFlowId == null) ? 0 : this.firstBrokerLoginFlowId.hashCode());
        result = prime * result + ((this.postBrokerLoginFlowId == null) ? 0 : this.postBrokerLoginFlowId.hashCode());
        result = prime * result + ((this.providerDisplayName == null) ? 0 : this.providerDisplayName.hashCode());
        result = prime * result + ((this.linkOnly == null) ? 0 : this.linkOnly.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("IdentityProvider (");

        sb.append(internalId);
        sb.append(", ").append(enabled);
        sb.append(", ").append(providerAlias);
        sb.append(", ").append(providerId);
        sb.append(", ").append(storeToken);
        sb.append(", ").append(authenticateByDefault);
        sb.append(", ").append(realmId);
        sb.append(", ").append(addTokenRole);
        sb.append(", ").append(trustEmail);
        sb.append(", ").append(firstBrokerLoginFlowId);
        sb.append(", ").append(postBrokerLoginFlowId);
        sb.append(", ").append(providerDisplayName);
        sb.append(", ").append(linkOnly);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IIdentityProvider from) {
        setInternalId(from.getInternalId());
        setEnabled(from.getEnabled());
        setProviderAlias(from.getProviderAlias());
        setProviderId(from.getProviderId());
        setStoreToken(from.getStoreToken());
        setAuthenticateByDefault(from.getAuthenticateByDefault());
        setRealmId(from.getRealmId());
        setAddTokenRole(from.getAddTokenRole());
        setTrustEmail(from.getTrustEmail());
        setFirstBrokerLoginFlowId(from.getFirstBrokerLoginFlowId());
        setPostBrokerLoginFlowId(from.getPostBrokerLoginFlowId());
        setProviderDisplayName(from.getProviderDisplayName());
        setLinkOnly(from.getLinkOnly());
    }

    @Override
    public <E extends IIdentityProvider> E into(E into) {
        into.from(this);
        return into;
    }
}
