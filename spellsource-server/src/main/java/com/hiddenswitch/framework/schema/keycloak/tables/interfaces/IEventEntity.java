/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IEventEntity extends VertxPojo, Serializable {

    /**
     * Setter for <code>keycloak.event_entity.id</code>.
     */
    public IEventEntity setId(String value);

    /**
     * Getter for <code>keycloak.event_entity.id</code>.
     */
    public String getId();

    /**
     * Setter for <code>keycloak.event_entity.client_id</code>.
     */
    public IEventEntity setClientId(String value);

    /**
     * Getter for <code>keycloak.event_entity.client_id</code>.
     */
    public String getClientId();

    /**
     * Setter for <code>keycloak.event_entity.details_json</code>.
     */
    public IEventEntity setDetailsJson(String value);

    /**
     * Getter for <code>keycloak.event_entity.details_json</code>.
     */
    public String getDetailsJson();

    /**
     * Setter for <code>keycloak.event_entity.error</code>.
     */
    public IEventEntity setError(String value);

    /**
     * Getter for <code>keycloak.event_entity.error</code>.
     */
    public String getError();

    /**
     * Setter for <code>keycloak.event_entity.ip_address</code>.
     */
    public IEventEntity setIpAddress(String value);

    /**
     * Getter for <code>keycloak.event_entity.ip_address</code>.
     */
    public String getIpAddress();

    /**
     * Setter for <code>keycloak.event_entity.realm_id</code>.
     */
    public IEventEntity setRealmId(String value);

    /**
     * Getter for <code>keycloak.event_entity.realm_id</code>.
     */
    public String getRealmId();

    /**
     * Setter for <code>keycloak.event_entity.session_id</code>.
     */
    public IEventEntity setSessionId(String value);

    /**
     * Getter for <code>keycloak.event_entity.session_id</code>.
     */
    public String getSessionId();

    /**
     * Setter for <code>keycloak.event_entity.event_time</code>.
     */
    public IEventEntity setEventTime(Long value);

    /**
     * Getter for <code>keycloak.event_entity.event_time</code>.
     */
    public Long getEventTime();

    /**
     * Setter for <code>keycloak.event_entity.type</code>.
     */
    public IEventEntity setType(String value);

    /**
     * Getter for <code>keycloak.event_entity.type</code>.
     */
    public String getType();

    /**
     * Setter for <code>keycloak.event_entity.user_id</code>.
     */
    public IEventEntity setUserId(String value);

    /**
     * Getter for <code>keycloak.event_entity.user_id</code>.
     */
    public String getUserId();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IEventEntity
     */
    public void from(IEventEntity from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IEventEntity
     */
    public <E extends IEventEntity> E into(E into);

    @Override
    public default IEventEntity fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setId(json.getString("id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("id","java.lang.String",e);
        }
        try {
            setClientId(json.getString("client_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("client_id","java.lang.String",e);
        }
        try {
            setDetailsJson(json.getString("details_json"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("details_json","java.lang.String",e);
        }
        try {
            setError(json.getString("error"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("error","java.lang.String",e);
        }
        try {
            setIpAddress(json.getString("ip_address"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("ip_address","java.lang.String",e);
        }
        try {
            setRealmId(json.getString("realm_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("realm_id","java.lang.String",e);
        }
        try {
            setSessionId(json.getString("session_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("session_id","java.lang.String",e);
        }
        try {
            setEventTime(json.getLong("event_time"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("event_time","java.lang.Long",e);
        }
        try {
            setType(json.getString("type"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("type","java.lang.String",e);
        }
        try {
            setUserId(json.getString("user_id"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("user_id","java.lang.String",e);
        }
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("client_id",getClientId());
        json.put("details_json",getDetailsJson());
        json.put("error",getError());
        json.put("ip_address",getIpAddress());
        json.put("realm_id",getRealmId());
        json.put("session_id",getSessionId());
        json.put("event_time",getEventTime());
        json.put("type",getType());
        json.put("user_id",getUserId());
        return json;
    }

}
