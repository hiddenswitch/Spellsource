/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.records;


import com.hiddenswitch.framework.schema.spellsource.tables.MatchmakingQueues;
import com.hiddenswitch.framework.schema.spellsource.tables.interfaces.IMatchmakingQueues;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchmakingQueuesRecord extends UpdatableRecordImpl<MatchmakingQueuesRecord> implements VertxPojo, Record12<String, String, Boolean, Boolean, Boolean, Long, Long, Long, Boolean, Boolean, Integer, OffsetDateTime>, IMatchmakingQueues {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>spellsource.matchmaking_queues.id</code>.
     */
    @Override
    public MatchmakingQueuesRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.matchmaking_queues.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>spellsource.matchmaking_queues.name</code>.
     */
    @Override
    public MatchmakingQueuesRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.matchmaking_queues.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>spellsource.matchmaking_queues.bot_opponent</code>.
     */
    @Override
    public MatchmakingQueuesRecord setBotOpponent(Boolean value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.matchmaking_queues.bot_opponent</code>.
     */
    @Override
    public Boolean getBotOpponent() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>spellsource.matchmaking_queues.private_lobby</code>.
     */
    @Override
    public MatchmakingQueuesRecord setPrivateLobby(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.matchmaking_queues.private_lobby</code>.
     */
    @Override
    public Boolean getPrivateLobby() {
        return (Boolean) get(3);
    }

    /**
     * Setter for
     * <code>spellsource.matchmaking_queues.starts_automatically</code>.
     */
    @Override
    public MatchmakingQueuesRecord setStartsAutomatically(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>spellsource.matchmaking_queues.starts_automatically</code>.
     */
    @Override
    public Boolean getStartsAutomatically() {
        return (Boolean) get(4);
    }

    /**
     * Setter for
     * <code>spellsource.matchmaking_queues.still_connected_timeout</code>.
     */
    @Override
    public MatchmakingQueuesRecord setStillConnectedTimeout(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>spellsource.matchmaking_queues.still_connected_timeout</code>.
     */
    @Override
    public Long getStillConnectedTimeout() {
        return (Long) get(5);
    }

    /**
     * Setter for
     * <code>spellsource.matchmaking_queues.empty_lobby_timeout</code>.
     */
    @Override
    public MatchmakingQueuesRecord setEmptyLobbyTimeout(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>spellsource.matchmaking_queues.empty_lobby_timeout</code>.
     */
    @Override
    public Long getEmptyLobbyTimeout() {
        return (Long) get(6);
    }

    /**
     * Setter for
     * <code>spellsource.matchmaking_queues.awaiting_lobby_timeout</code>.
     */
    @Override
    public MatchmakingQueuesRecord setAwaitingLobbyTimeout(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>spellsource.matchmaking_queues.awaiting_lobby_timeout</code>.
     */
    @Override
    public Long getAwaitingLobbyTimeout() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>spellsource.matchmaking_queues.once</code>.
     */
    @Override
    public MatchmakingQueuesRecord setOnce(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.matchmaking_queues.once</code>.
     */
    @Override
    public Boolean getOnce() {
        return (Boolean) get(8);
    }

    /**
     * Setter for
     * <code>spellsource.matchmaking_queues.automatically_close</code>.
     */
    @Override
    public MatchmakingQueuesRecord setAutomaticallyClose(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>spellsource.matchmaking_queues.automatically_close</code>.
     */
    @Override
    public Boolean getAutomaticallyClose() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>spellsource.matchmaking_queues.lobby_size</code>.
     */
    @Override
    public MatchmakingQueuesRecord setLobbySize(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.matchmaking_queues.lobby_size</code>.
     */
    @Override
    public Integer getLobbySize() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>spellsource.matchmaking_queues.queue_created_at</code>.
     */
    @Override
    public MatchmakingQueuesRecord setQueueCreatedAt(OffsetDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.matchmaking_queues.queue_created_at</code>.
     */
    @Override
    public OffsetDateTime getQueueCreatedAt() {
        return (OffsetDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, String, Boolean, Boolean, Boolean, Long, Long, Long, Boolean, Boolean, Integer, OffsetDateTime> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<String, String, Boolean, Boolean, Boolean, Long, Long, Long, Boolean, Boolean, Integer, OffsetDateTime> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MatchmakingQueues.MATCHMAKING_QUEUES.ID;
    }

    @Override
    public Field<String> field2() {
        return MatchmakingQueues.MATCHMAKING_QUEUES.NAME;
    }

    @Override
    public Field<Boolean> field3() {
        return MatchmakingQueues.MATCHMAKING_QUEUES.BOT_OPPONENT;
    }

    @Override
    public Field<Boolean> field4() {
        return MatchmakingQueues.MATCHMAKING_QUEUES.PRIVATE_LOBBY;
    }

    @Override
    public Field<Boolean> field5() {
        return MatchmakingQueues.MATCHMAKING_QUEUES.STARTS_AUTOMATICALLY;
    }

    @Override
    public Field<Long> field6() {
        return MatchmakingQueues.MATCHMAKING_QUEUES.STILL_CONNECTED_TIMEOUT;
    }

    @Override
    public Field<Long> field7() {
        return MatchmakingQueues.MATCHMAKING_QUEUES.EMPTY_LOBBY_TIMEOUT;
    }

    @Override
    public Field<Long> field8() {
        return MatchmakingQueues.MATCHMAKING_QUEUES.AWAITING_LOBBY_TIMEOUT;
    }

    @Override
    public Field<Boolean> field9() {
        return MatchmakingQueues.MATCHMAKING_QUEUES.ONCE;
    }

    @Override
    public Field<Boolean> field10() {
        return MatchmakingQueues.MATCHMAKING_QUEUES.AUTOMATICALLY_CLOSE;
    }

    @Override
    public Field<Integer> field11() {
        return MatchmakingQueues.MATCHMAKING_QUEUES.LOBBY_SIZE;
    }

    @Override
    public Field<OffsetDateTime> field12() {
        return MatchmakingQueues.MATCHMAKING_QUEUES.QUEUE_CREATED_AT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Boolean component3() {
        return getBotOpponent();
    }

    @Override
    public Boolean component4() {
        return getPrivateLobby();
    }

    @Override
    public Boolean component5() {
        return getStartsAutomatically();
    }

    @Override
    public Long component6() {
        return getStillConnectedTimeout();
    }

    @Override
    public Long component7() {
        return getEmptyLobbyTimeout();
    }

    @Override
    public Long component8() {
        return getAwaitingLobbyTimeout();
    }

    @Override
    public Boolean component9() {
        return getOnce();
    }

    @Override
    public Boolean component10() {
        return getAutomaticallyClose();
    }

    @Override
    public Integer component11() {
        return getLobbySize();
    }

    @Override
    public OffsetDateTime component12() {
        return getQueueCreatedAt();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Boolean value3() {
        return getBotOpponent();
    }

    @Override
    public Boolean value4() {
        return getPrivateLobby();
    }

    @Override
    public Boolean value5() {
        return getStartsAutomatically();
    }

    @Override
    public Long value6() {
        return getStillConnectedTimeout();
    }

    @Override
    public Long value7() {
        return getEmptyLobbyTimeout();
    }

    @Override
    public Long value8() {
        return getAwaitingLobbyTimeout();
    }

    @Override
    public Boolean value9() {
        return getOnce();
    }

    @Override
    public Boolean value10() {
        return getAutomaticallyClose();
    }

    @Override
    public Integer value11() {
        return getLobbySize();
    }

    @Override
    public OffsetDateTime value12() {
        return getQueueCreatedAt();
    }

    @Override
    public MatchmakingQueuesRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public MatchmakingQueuesRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public MatchmakingQueuesRecord value3(Boolean value) {
        setBotOpponent(value);
        return this;
    }

    @Override
    public MatchmakingQueuesRecord value4(Boolean value) {
        setPrivateLobby(value);
        return this;
    }

    @Override
    public MatchmakingQueuesRecord value5(Boolean value) {
        setStartsAutomatically(value);
        return this;
    }

    @Override
    public MatchmakingQueuesRecord value6(Long value) {
        setStillConnectedTimeout(value);
        return this;
    }

    @Override
    public MatchmakingQueuesRecord value7(Long value) {
        setEmptyLobbyTimeout(value);
        return this;
    }

    @Override
    public MatchmakingQueuesRecord value8(Long value) {
        setAwaitingLobbyTimeout(value);
        return this;
    }

    @Override
    public MatchmakingQueuesRecord value9(Boolean value) {
        setOnce(value);
        return this;
    }

    @Override
    public MatchmakingQueuesRecord value10(Boolean value) {
        setAutomaticallyClose(value);
        return this;
    }

    @Override
    public MatchmakingQueuesRecord value11(Integer value) {
        setLobbySize(value);
        return this;
    }

    @Override
    public MatchmakingQueuesRecord value12(OffsetDateTime value) {
        setQueueCreatedAt(value);
        return this;
    }

    @Override
    public MatchmakingQueuesRecord values(String value1, String value2, Boolean value3, Boolean value4, Boolean value5, Long value6, Long value7, Long value8, Boolean value9, Boolean value10, Integer value11, OffsetDateTime value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IMatchmakingQueues from) {
        setId(from.getId());
        setName(from.getName());
        setBotOpponent(from.getBotOpponent());
        setPrivateLobby(from.getPrivateLobby());
        setStartsAutomatically(from.getStartsAutomatically());
        setStillConnectedTimeout(from.getStillConnectedTimeout());
        setEmptyLobbyTimeout(from.getEmptyLobbyTimeout());
        setAwaitingLobbyTimeout(from.getAwaitingLobbyTimeout());
        setOnce(from.getOnce());
        setAutomaticallyClose(from.getAutomaticallyClose());
        setLobbySize(from.getLobbySize());
        setQueueCreatedAt(from.getQueueCreatedAt());
    }

    @Override
    public <E extends IMatchmakingQueues> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MatchmakingQueuesRecord
     */
    public MatchmakingQueuesRecord() {
        super(MatchmakingQueues.MATCHMAKING_QUEUES);
    }

    /**
     * Create a detached, initialised MatchmakingQueuesRecord
     */
    public MatchmakingQueuesRecord(String id, String name, Boolean botOpponent, Boolean privateLobby, Boolean startsAutomatically, Long stillConnectedTimeout, Long emptyLobbyTimeout, Long awaitingLobbyTimeout, Boolean once, Boolean automaticallyClose, Integer lobbySize, OffsetDateTime queueCreatedAt) {
        super(MatchmakingQueues.MATCHMAKING_QUEUES);

        setId(id);
        setName(name);
        setBotOpponent(botOpponent);
        setPrivateLobby(privateLobby);
        setStartsAutomatically(startsAutomatically);
        setStillConnectedTimeout(stillConnectedTimeout);
        setEmptyLobbyTimeout(emptyLobbyTimeout);
        setAwaitingLobbyTimeout(awaitingLobbyTimeout);
        setOnce(once);
        setAutomaticallyClose(automaticallyClose);
        setLobbySize(lobbySize);
        setQueueCreatedAt(queueCreatedAt);
    }

    /**
     * Create a detached, initialised MatchmakingQueuesRecord
     */
    public MatchmakingQueuesRecord(com.hiddenswitch.framework.schema.spellsource.tables.pojos.MatchmakingQueues value) {
        super(MatchmakingQueues.MATCHMAKING_QUEUES);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setBotOpponent(value.getBotOpponent());
            setPrivateLobby(value.getPrivateLobby());
            setStartsAutomatically(value.getStartsAutomatically());
            setStillConnectedTimeout(value.getStillConnectedTimeout());
            setEmptyLobbyTimeout(value.getEmptyLobbyTimeout());
            setAwaitingLobbyTimeout(value.getAwaitingLobbyTimeout());
            setOnce(value.getOnce());
            setAutomaticallyClose(value.getAutomaticallyClose());
            setLobbySize(value.getLobbySize());
            setQueueCreatedAt(value.getQueueCreatedAt());
        }
    }

        public MatchmakingQueuesRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
