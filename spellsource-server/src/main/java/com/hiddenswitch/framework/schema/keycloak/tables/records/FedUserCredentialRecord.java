/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.records;


import com.hiddenswitch.framework.schema.keycloak.tables.FedUserCredential;
import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IFedUserCredential;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FedUserCredentialRecord extends UpdatableRecordImpl<FedUserCredentialRecord> implements VertxPojo, Record11<String, byte[], String, Long, String, String, String, String, String, String, Integer>, IFedUserCredential {

    private static final long serialVersionUID = -109925247;

    /**
     * Setter for <code>keycloak.fed_user_credential.id</code>.
     */
    @Override
    public FedUserCredentialRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.salt</code>.
     */
    @Override
    public FedUserCredentialRecord setSalt(byte[] value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.salt</code>.
     */
    @Override
    public byte[] getSalt() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.type</code>.
     */
    @Override
    public FedUserCredentialRecord setType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.type</code>.
     */
    @Override
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.created_date</code>.
     */
    @Override
    public FedUserCredentialRecord setCreatedDate(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.created_date</code>.
     */
    @Override
    public Long getCreatedDate() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.user_id</code>.
     */
    @Override
    public FedUserCredentialRecord setUserId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.user_id</code>.
     */
    @Override
    public String getUserId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.realm_id</code>.
     */
    @Override
    public FedUserCredentialRecord setRealmId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.storage_provider_id</code>.
     */
    @Override
    public FedUserCredentialRecord setStorageProviderId(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.storage_provider_id</code>.
     */
    @Override
    public String getStorageProviderId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.user_label</code>.
     */
    @Override
    public FedUserCredentialRecord setUserLabel(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.user_label</code>.
     */
    @Override
    public String getUserLabel() {
        return (String) get(7);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.secret_data</code>.
     */
    @Override
    public FedUserCredentialRecord setSecretData(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.secret_data</code>.
     */
    @Override
    public String getSecretData() {
        return (String) get(8);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.credential_data</code>.
     */
    @Override
    public FedUserCredentialRecord setCredentialData(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.credential_data</code>.
     */
    @Override
    public String getCredentialData() {
        return (String) get(9);
    }

    /**
     * Setter for <code>keycloak.fed_user_credential.priority</code>.
     */
    @Override
    public FedUserCredentialRecord setPriority(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.fed_user_credential.priority</code>.
     */
    @Override
    public Integer getPriority() {
        return (Integer) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, byte[], String, Long, String, String, String, String, String, String, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<String, byte[], String, Long, String, String, String, String, String, String, Integer> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return FedUserCredential.FED_USER_CREDENTIAL.ID;
    }

    @Override
    public Field<byte[]> field2() {
        return FedUserCredential.FED_USER_CREDENTIAL.SALT;
    }

    @Override
    public Field<String> field3() {
        return FedUserCredential.FED_USER_CREDENTIAL.TYPE;
    }

    @Override
    public Field<Long> field4() {
        return FedUserCredential.FED_USER_CREDENTIAL.CREATED_DATE;
    }

    @Override
    public Field<String> field5() {
        return FedUserCredential.FED_USER_CREDENTIAL.USER_ID;
    }

    @Override
    public Field<String> field6() {
        return FedUserCredential.FED_USER_CREDENTIAL.REALM_ID;
    }

    @Override
    public Field<String> field7() {
        return FedUserCredential.FED_USER_CREDENTIAL.STORAGE_PROVIDER_ID;
    }

    @Override
    public Field<String> field8() {
        return FedUserCredential.FED_USER_CREDENTIAL.USER_LABEL;
    }

    @Override
    public Field<String> field9() {
        return FedUserCredential.FED_USER_CREDENTIAL.SECRET_DATA;
    }

    @Override
    public Field<String> field10() {
        return FedUserCredential.FED_USER_CREDENTIAL.CREDENTIAL_DATA;
    }

    @Override
    public Field<Integer> field11() {
        return FedUserCredential.FED_USER_CREDENTIAL.PRIORITY;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public byte[] component2() {
        return getSalt();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public Long component4() {
        return getCreatedDate();
    }

    @Override
    public String component5() {
        return getUserId();
    }

    @Override
    public String component6() {
        return getRealmId();
    }

    @Override
    public String component7() {
        return getStorageProviderId();
    }

    @Override
    public String component8() {
        return getUserLabel();
    }

    @Override
    public String component9() {
        return getSecretData();
    }

    @Override
    public String component10() {
        return getCredentialData();
    }

    @Override
    public Integer component11() {
        return getPriority();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public byte[] value2() {
        return getSalt();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public Long value4() {
        return getCreatedDate();
    }

    @Override
    public String value5() {
        return getUserId();
    }

    @Override
    public String value6() {
        return getRealmId();
    }

    @Override
    public String value7() {
        return getStorageProviderId();
    }

    @Override
    public String value8() {
        return getUserLabel();
    }

    @Override
    public String value9() {
        return getSecretData();
    }

    @Override
    public String value10() {
        return getCredentialData();
    }

    @Override
    public Integer value11() {
        return getPriority();
    }

    @Override
    public FedUserCredentialRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value2(byte[] value) {
        setSalt(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value4(Long value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value5(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value6(String value) {
        setRealmId(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value7(String value) {
        setStorageProviderId(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value8(String value) {
        setUserLabel(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value9(String value) {
        setSecretData(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value10(String value) {
        setCredentialData(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord value11(Integer value) {
        setPriority(value);
        return this;
    }

    @Override
    public FedUserCredentialRecord values(String value1, byte[] value2, String value3, Long value4, String value5, String value6, String value7, String value8, String value9, String value10, Integer value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFedUserCredential from) {
        setId(from.getId());
        setSalt(from.getSalt());
        setType(from.getType());
        setCreatedDate(from.getCreatedDate());
        setUserId(from.getUserId());
        setRealmId(from.getRealmId());
        setStorageProviderId(from.getStorageProviderId());
        setUserLabel(from.getUserLabel());
        setSecretData(from.getSecretData());
        setCredentialData(from.getCredentialData());
        setPriority(from.getPriority());
    }

    @Override
    public <E extends IFedUserCredential> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FedUserCredentialRecord
     */
    public FedUserCredentialRecord() {
        super(FedUserCredential.FED_USER_CREDENTIAL);
    }

    /**
     * Create a detached, initialised FedUserCredentialRecord
     */
    public FedUserCredentialRecord(String id, byte[] salt, String type, Long createdDate, String userId, String realmId, String storageProviderId, String userLabel, String secretData, String credentialData, Integer priority) {
        super(FedUserCredential.FED_USER_CREDENTIAL);

        set(0, id);
        set(1, salt);
        set(2, type);
        set(3, createdDate);
        set(4, userId);
        set(5, realmId);
        set(6, storageProviderId);
        set(7, userLabel);
        set(8, secretData);
        set(9, credentialData);
        set(10, priority);
    }

    public FedUserCredentialRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
