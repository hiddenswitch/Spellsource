/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IDatabasechangelog extends VertxPojo, Serializable {

    /**
     * Setter for <code>keycloak.databasechangelog.id</code>.
     */
    public IDatabasechangelog setId(String value);

    /**
     * Getter for <code>keycloak.databasechangelog.id</code>.
     */
    public String getId();

    /**
     * Setter for <code>keycloak.databasechangelog.author</code>.
     */
    public IDatabasechangelog setAuthor(String value);

    /**
     * Getter for <code>keycloak.databasechangelog.author</code>.
     */
    public String getAuthor();

    /**
     * Setter for <code>keycloak.databasechangelog.filename</code>.
     */
    public IDatabasechangelog setFilename(String value);

    /**
     * Getter for <code>keycloak.databasechangelog.filename</code>.
     */
    public String getFilename();

    /**
     * Setter for <code>keycloak.databasechangelog.dateexecuted</code>.
     */
    public IDatabasechangelog setDateexecuted(LocalDateTime value);

    /**
     * Getter for <code>keycloak.databasechangelog.dateexecuted</code>.
     */
    public LocalDateTime getDateexecuted();

    /**
     * Setter for <code>keycloak.databasechangelog.orderexecuted</code>.
     */
    public IDatabasechangelog setOrderexecuted(Integer value);

    /**
     * Getter for <code>keycloak.databasechangelog.orderexecuted</code>.
     */
    public Integer getOrderexecuted();

    /**
     * Setter for <code>keycloak.databasechangelog.exectype</code>.
     */
    public IDatabasechangelog setExectype(String value);

    /**
     * Getter for <code>keycloak.databasechangelog.exectype</code>.
     */
    public String getExectype();

    /**
     * Setter for <code>keycloak.databasechangelog.md5sum</code>.
     */
    public IDatabasechangelog setMd5sum(String value);

    /**
     * Getter for <code>keycloak.databasechangelog.md5sum</code>.
     */
    public String getMd5sum();

    /**
     * Setter for <code>keycloak.databasechangelog.description</code>.
     */
    public IDatabasechangelog setDescription(String value);

    /**
     * Getter for <code>keycloak.databasechangelog.description</code>.
     */
    public String getDescription();

    /**
     * Setter for <code>keycloak.databasechangelog.comments</code>.
     */
    public IDatabasechangelog setComments(String value);

    /**
     * Getter for <code>keycloak.databasechangelog.comments</code>.
     */
    public String getComments();

    /**
     * Setter for <code>keycloak.databasechangelog.tag</code>.
     */
    public IDatabasechangelog setTag(String value);

    /**
     * Getter for <code>keycloak.databasechangelog.tag</code>.
     */
    public String getTag();

    /**
     * Setter for <code>keycloak.databasechangelog.liquibase</code>.
     */
    public IDatabasechangelog setLiquibase(String value);

    /**
     * Getter for <code>keycloak.databasechangelog.liquibase</code>.
     */
    public String getLiquibase();

    /**
     * Setter for <code>keycloak.databasechangelog.contexts</code>.
     */
    public IDatabasechangelog setContexts(String value);

    /**
     * Getter for <code>keycloak.databasechangelog.contexts</code>.
     */
    public String getContexts();

    /**
     * Setter for <code>keycloak.databasechangelog.labels</code>.
     */
    public IDatabasechangelog setLabels(String value);

    /**
     * Getter for <code>keycloak.databasechangelog.labels</code>.
     */
    public String getLabels();

    /**
     * Setter for <code>keycloak.databasechangelog.deployment_id</code>.
     */
    public IDatabasechangelog setDeploymentId(String value);

    /**
     * Getter for <code>keycloak.databasechangelog.deployment_id</code>.
     */
    public String getDeploymentId();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IDatabasechangelog
     */
    public void from(IDatabasechangelog from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IDatabasechangelog
     */
    public <E extends IDatabasechangelog> E into(E into);

        @Override
        public default IDatabasechangelog fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setId,json::getString,"id","java.lang.String");
                setOrThrow(this::setAuthor,json::getString,"author","java.lang.String");
                setOrThrow(this::setFilename,json::getString,"filename","java.lang.String");
                setOrThrow(this::setDateexecuted,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"dateexecuted","java.time.LocalDateTime");
                setOrThrow(this::setOrderexecuted,json::getInteger,"orderexecuted","java.lang.Integer");
                setOrThrow(this::setExectype,json::getString,"exectype","java.lang.String");
                setOrThrow(this::setMd5sum,json::getString,"md5sum","java.lang.String");
                setOrThrow(this::setDescription,json::getString,"description","java.lang.String");
                setOrThrow(this::setComments,json::getString,"comments","java.lang.String");
                setOrThrow(this::setTag,json::getString,"tag","java.lang.String");
                setOrThrow(this::setLiquibase,json::getString,"liquibase","java.lang.String");
                setOrThrow(this::setContexts,json::getString,"contexts","java.lang.String");
                setOrThrow(this::setLabels,json::getString,"labels","java.lang.String");
                setOrThrow(this::setDeploymentId,json::getString,"deployment_id","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("id",getId());
                json.put("author",getAuthor());
                json.put("filename",getFilename());
                json.put("dateexecuted",getDateexecuted()==null?null:getDateexecuted().toString());
                json.put("orderexecuted",getOrderexecuted());
                json.put("exectype",getExectype());
                json.put("md5sum",getMd5sum());
                json.put("description",getDescription());
                json.put("comments",getComments());
                json.put("tag",getTag());
                json.put("liquibase",getLiquibase());
                json.put("contexts",getContexts());
                json.put("labels",getLabels());
                json.put("deployment_id",getDeploymentId());
                return json;
        }

}
