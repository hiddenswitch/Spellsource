/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables;


import com.hiddenswitch.framework.schema.spellsource.Spellsource;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardCatalogueGetBannedDraftCardsRecord;

import java.util.function.Function;

import org.jooq.Field;
import org.jooq.Function1;
import org.jooq.Name;
import org.jooq.Records;
import org.jooq.Row1;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardCatalogueGetBannedDraftCards extends TableImpl<CardCatalogueGetBannedDraftCardsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>spellsource.card_catalogue_get_banned_draft_cards</code>
     */
    public static final CardCatalogueGetBannedDraftCards CARD_CATALOGUE_GET_BANNED_DRAFT_CARDS = new CardCatalogueGetBannedDraftCards();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CardCatalogueGetBannedDraftCardsRecord> getRecordType() {
        return CardCatalogueGetBannedDraftCardsRecord.class;
    }

    /**
     * The column
     * <code>spellsource.card_catalogue_get_banned_draft_cards.card_id</code>.
     */
    public final TableField<CardCatalogueGetBannedDraftCardsRecord, String> CARD_ID = createField(DSL.name("card_id"), SQLDataType.CLOB, this, "");

    private CardCatalogueGetBannedDraftCards(Name alias, Table<CardCatalogueGetBannedDraftCardsRecord> aliased) {
        this(alias, aliased, new Field[] {
        });
    }

    private CardCatalogueGetBannedDraftCards(Name alias, Table<CardCatalogueGetBannedDraftCardsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
    }

    /**
     * Create an aliased
     * <code>spellsource.card_catalogue_get_banned_draft_cards</code> table
     * reference
     */
    public CardCatalogueGetBannedDraftCards(String alias) {
        this(DSL.name(alias), CARD_CATALOGUE_GET_BANNED_DRAFT_CARDS);
    }

    /**
     * Create an aliased
     * <code>spellsource.card_catalogue_get_banned_draft_cards</code> table
     * reference
     */
    public CardCatalogueGetBannedDraftCards(Name alias) {
        this(alias, CARD_CATALOGUE_GET_BANNED_DRAFT_CARDS);
    }

    /**
     * Create a <code>spellsource.card_catalogue_get_banned_draft_cards</code>
     * table reference
     */
    public CardCatalogueGetBannedDraftCards() {
        this(DSL.name("card_catalogue_get_banned_draft_cards"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Spellsource.SPELLSOURCE;
    }

    @Override
    public CardCatalogueGetBannedDraftCards as(String alias) {
        return new CardCatalogueGetBannedDraftCards(DSL.name(alias), this, parameters);
    }

    @Override
    public CardCatalogueGetBannedDraftCards as(Name alias) {
        return new CardCatalogueGetBannedDraftCards(alias, this, parameters);
    }

    @Override
    public CardCatalogueGetBannedDraftCards as(Table<?> alias) {
        return new CardCatalogueGetBannedDraftCards(alias.getQualifiedName(), this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public CardCatalogueGetBannedDraftCards rename(String name) {
        return new CardCatalogueGetBannedDraftCards(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public CardCatalogueGetBannedDraftCards rename(Name name) {
        return new CardCatalogueGetBannedDraftCards(name, null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public CardCatalogueGetBannedDraftCards rename(Table<?> name) {
        return new CardCatalogueGetBannedDraftCards(name.getQualifiedName(), null, parameters);
    }

    // -------------------------------------------------------------------------
    // Row1 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row1<String> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    /**
     * Call this table-valued function
     */
    public CardCatalogueGetBannedDraftCards call() {
        CardCatalogueGetBannedDraftCards result = new CardCatalogueGetBannedDraftCards(DSL.name("card_catalogue_get_banned_draft_cards"), null, new Field[] {});

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function1<? super String, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function1<? super String, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
