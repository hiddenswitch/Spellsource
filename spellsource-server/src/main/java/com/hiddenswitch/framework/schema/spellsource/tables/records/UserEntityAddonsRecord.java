/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.records;


import com.hiddenswitch.framework.schema.spellsource.tables.UserEntityAddons;
import com.hiddenswitch.framework.schema.spellsource.tables.interfaces.IUserEntityAddons;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserEntityAddonsRecord extends UpdatableRecordImpl<UserEntityAddonsRecord> implements VertxPojo, Record2<String, String>, IUserEntityAddons {

    private static final long serialVersionUID = 1738132225;

    /**
     * Setter for <code>spellsource.user_entity_addons.id</code>.
     */
    @Override
    public UserEntityAddonsRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.user_entity_addons.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>spellsource.user_entity_addons.privacy_token</code>.
     */
    @Override
    public UserEntityAddonsRecord setPrivacyToken(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.user_entity_addons.privacy_token</code>.
     */
    @Override
    public String getPrivacyToken() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return UserEntityAddons.USER_ENTITY_ADDONS.ID;
    }

    @Override
    public Field<String> field2() {
        return UserEntityAddons.USER_ENTITY_ADDONS.PRIVACY_TOKEN;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPrivacyToken();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPrivacyToken();
    }

    @Override
    public UserEntityAddonsRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public UserEntityAddonsRecord value2(String value) {
        setPrivacyToken(value);
        return this;
    }

    @Override
    public UserEntityAddonsRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUserEntityAddons from) {
        setId(from.getId());
        setPrivacyToken(from.getPrivacyToken());
    }

    @Override
    public <E extends IUserEntityAddons> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserEntityAddonsRecord
     */
    public UserEntityAddonsRecord() {
        super(UserEntityAddons.USER_ENTITY_ADDONS);
    }

    /**
     * Create a detached, initialised UserEntityAddonsRecord
     */
    public UserEntityAddonsRecord(String id, String privacyToken) {
        super(UserEntityAddons.USER_ENTITY_ADDONS);

        set(0, id);
        set(1, privacyToken);
    }

    public UserEntityAddonsRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
