/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.records;


import com.hiddenswitch.framework.schema.spellsource.tables.PublishedCards;
import com.hiddenswitch.framework.schema.spellsource.tables.interfaces.IPublishedCards;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PublishedCardsRecord extends UpdatableRecordImpl<PublishedCardsRecord> implements VertxPojo, Record2<String, Long>, IPublishedCards {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>spellsource.published_cards.id</code>.
     */
    @Override
    public PublishedCardsRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.published_cards.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>spellsource.published_cards.succession</code>.
     */
    @Override
    public PublishedCardsRecord setSuccession(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.published_cards.succession</code>.
     */
    @Override
    public Long getSuccession() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return PublishedCards.PUBLISHED_CARDS.ID;
    }

    @Override
    public Field<Long> field2() {
        return PublishedCards.PUBLISHED_CARDS.SUCCESSION;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getSuccession();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getSuccession();
    }

    @Override
    public PublishedCardsRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public PublishedCardsRecord value2(Long value) {
        setSuccession(value);
        return this;
    }

    @Override
    public PublishedCardsRecord values(String value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPublishedCards from) {
        setId(from.getId());
        setSuccession(from.getSuccession());
    }

    @Override
    public <E extends IPublishedCards> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PublishedCardsRecord
     */
    public PublishedCardsRecord() {
        super(PublishedCards.PUBLISHED_CARDS);
    }

    /**
     * Create a detached, initialised PublishedCardsRecord
     */
    public PublishedCardsRecord(String id, Long succession) {
        super(PublishedCards.PUBLISHED_CARDS);

        setId(id);
        setSuccession(succession);
    }

    /**
     * Create a detached, initialised PublishedCardsRecord
     */
    public PublishedCardsRecord(com.hiddenswitch.framework.schema.spellsource.tables.pojos.PublishedCards value) {
        super(PublishedCards.PUBLISHED_CARDS);

        if (value != null) {
            setId(value.getId());
            setSuccession(value.getSuccession());
        }
    }

        public PublishedCardsRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
