/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IResourceServer;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceServer implements VertxPojo, IResourceServer {

    private static final long serialVersionUID = 1L;

    private String  id;
    private String  clientId;
    private Boolean allowRsRemoteMgmt;
    private String  policyEnforceMode;

    public ResourceServer() {}

    public ResourceServer(IResourceServer value) {
        this.id = value.getId();
        this.clientId = value.getClientId();
        this.allowRsRemoteMgmt = value.getAllowRsRemoteMgmt();
        this.policyEnforceMode = value.getPolicyEnforceMode();
    }

    public ResourceServer(
        String  id,
        String  clientId,
        Boolean allowRsRemoteMgmt,
        String  policyEnforceMode
    ) {
        this.id = id;
        this.clientId = clientId;
        this.allowRsRemoteMgmt = allowRsRemoteMgmt;
        this.policyEnforceMode = policyEnforceMode;
    }

        public ResourceServer(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>keycloak.resource_server.id</code>.
     */
    @Override
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>keycloak.resource_server.id</code>.
     */
    @Override
    public ResourceServer setId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>keycloak.resource_server.client_id</code>.
     */
    @Override
    public String getClientId() {
        return this.clientId;
    }

    /**
     * Setter for <code>keycloak.resource_server.client_id</code>.
     */
    @Override
    public ResourceServer setClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Getter for <code>keycloak.resource_server.allow_rs_remote_mgmt</code>.
     */
    @Override
    public Boolean getAllowRsRemoteMgmt() {
        return this.allowRsRemoteMgmt;
    }

    /**
     * Setter for <code>keycloak.resource_server.allow_rs_remote_mgmt</code>.
     */
    @Override
    public ResourceServer setAllowRsRemoteMgmt(Boolean allowRsRemoteMgmt) {
        this.allowRsRemoteMgmt = allowRsRemoteMgmt;
        return this;
    }

    /**
     * Getter for <code>keycloak.resource_server.policy_enforce_mode</code>.
     */
    @Override
    public String getPolicyEnforceMode() {
        return this.policyEnforceMode;
    }

    /**
     * Setter for <code>keycloak.resource_server.policy_enforce_mode</code>.
     */
    @Override
    public ResourceServer setPolicyEnforceMode(String policyEnforceMode) {
        this.policyEnforceMode = policyEnforceMode;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ResourceServer (");

        sb.append(id);
        sb.append(", ").append(clientId);
        sb.append(", ").append(allowRsRemoteMgmt);
        sb.append(", ").append(policyEnforceMode);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IResourceServer from) {
        setId(from.getId());
        setClientId(from.getClientId());
        setAllowRsRemoteMgmt(from.getAllowRsRemoteMgmt());
        setPolicyEnforceMode(from.getPolicyEnforceMode());
    }

    @Override
    public <E extends IResourceServer> E into(E into) {
        into.from(this);
        return into;
    }
}
