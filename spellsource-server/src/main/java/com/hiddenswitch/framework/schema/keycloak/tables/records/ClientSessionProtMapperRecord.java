/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.records;


import com.hiddenswitch.framework.schema.keycloak.tables.ClientSessionProtMapper;
import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IClientSessionProtMapper;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientSessionProtMapperRecord extends UpdatableRecordImpl<ClientSessionProtMapperRecord> implements VertxPojo, Record2<String, String>, IClientSessionProtMapper {

    private static final long serialVersionUID = -100675681;

    /**
     * Setter for <code>keycloak.client_session_prot_mapper.protocol_mapper_id</code>.
     */
    @Override
    public ClientSessionProtMapperRecord setProtocolMapperId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.client_session_prot_mapper.protocol_mapper_id</code>.
     */
    @Override
    public String getProtocolMapperId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>keycloak.client_session_prot_mapper.client_session</code>.
     */
    @Override
    public ClientSessionProtMapperRecord setClientSession(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.client_session_prot_mapper.client_session</code>.
     */
    @Override
    public String getClientSession() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ClientSessionProtMapper.CLIENT_SESSION_PROT_MAPPER.PROTOCOL_MAPPER_ID;
    }

    @Override
    public Field<String> field2() {
        return ClientSessionProtMapper.CLIENT_SESSION_PROT_MAPPER.CLIENT_SESSION;
    }

    @Override
    public String component1() {
        return getProtocolMapperId();
    }

    @Override
    public String component2() {
        return getClientSession();
    }

    @Override
    public String value1() {
        return getProtocolMapperId();
    }

    @Override
    public String value2() {
        return getClientSession();
    }

    @Override
    public ClientSessionProtMapperRecord value1(String value) {
        setProtocolMapperId(value);
        return this;
    }

    @Override
    public ClientSessionProtMapperRecord value2(String value) {
        setClientSession(value);
        return this;
    }

    @Override
    public ClientSessionProtMapperRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IClientSessionProtMapper from) {
        setProtocolMapperId(from.getProtocolMapperId());
        setClientSession(from.getClientSession());
    }

    @Override
    public <E extends IClientSessionProtMapper> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientSessionProtMapperRecord
     */
    public ClientSessionProtMapperRecord() {
        super(ClientSessionProtMapper.CLIENT_SESSION_PROT_MAPPER);
    }

    /**
     * Create a detached, initialised ClientSessionProtMapperRecord
     */
    public ClientSessionProtMapperRecord(String protocolMapperId, String clientSession) {
        super(ClientSessionProtMapper.CLIENT_SESSION_PROT_MAPPER);

        set(0, protocolMapperId);
        set(1, clientSession);
    }

    public ClientSessionProtMapperRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
