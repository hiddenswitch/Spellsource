/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.interfaces;


import com.hiddenswitch.framework.schema.spellsource.enums.GameStateEnum;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.vertx.core.json.JsonObject;

import java.io.Serializable;
import java.time.OffsetDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IGames extends VertxPojo, Serializable {

    /**
     * Setter for <code>spellsource.games.id</code>.
     */
    public IGames setId(Long value);

    /**
     * Getter for <code>spellsource.games.id</code>.
     */
    public Long getId();

    /**
     * Setter for <code>spellsource.games.status</code>.
     */
    public IGames setStatus(GameStateEnum value);

    /**
     * Getter for <code>spellsource.games.status</code>.
     */
    public GameStateEnum getStatus();

    /**
     * Setter for <code>spellsource.games.git_hash</code>.
     */
    public IGames setGitHash(String value);

    /**
     * Getter for <code>spellsource.games.git_hash</code>.
     */
    public String getGitHash();

    /**
     * Setter for <code>spellsource.games.trace</code>.
     */
    public IGames setTrace(JsonObject value);

    /**
     * Getter for <code>spellsource.games.trace</code>.
     */
    public JsonObject getTrace();

    /**
     * Setter for <code>spellsource.games.created_at</code>.
     */
    public IGames setCreatedAt(OffsetDateTime value);

    /**
     * Getter for <code>spellsource.games.created_at</code>.
     */
    public OffsetDateTime getCreatedAt();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IGames
     */
    public void from(IGames from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IGames
     */
    public <E extends IGames> E into(E into);

        @Override
        public default IGames fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setId,json::getLong,"id","java.lang.Long");
                setOrThrow(this::setStatus,key -> java.util.Arrays.stream(com.hiddenswitch.framework.schema.spellsource.enums.GameStateEnum.values()).filter(td -> td.getLiteral().equals(json.getString(key))).findFirst().orElse(null),"status","com.hiddenswitch.framework.schema.spellsource.enums.GameStateEnum");
                setOrThrow(this::setGitHash,json::getString,"git_hash","java.lang.String");
                setTrace(com.hiddenswitch.framework.schema.spellsource.tables.converters.Converters.IO_GITHUB_JKLINGSPORN_VERTX_JOOQ_SHARED_POSTGRES_JSONBTOJSONOBJECTCONVERTER_INSTANCE.pgConverter().from(json.getJsonObject("trace")));
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.OffsetDateTime.parse(s);},"created_at","java.time.OffsetDateTime");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("id",getId());
                json.put("status",getStatus()==null?null:getStatus().getLiteral());
                json.put("git_hash",getGitHash());
                json.put("trace",com.hiddenswitch.framework.schema.spellsource.tables.converters.Converters.IO_GITHUB_JKLINGSPORN_VERTX_JOOQ_SHARED_POSTGRES_JSONBTOJSONOBJECTCONVERTER_INSTANCE.pgConverter().to(getTrace()));
                json.put("created_at",getCreatedAt()==null?null:getCreatedAt().toString());
                return json;
        }

}
