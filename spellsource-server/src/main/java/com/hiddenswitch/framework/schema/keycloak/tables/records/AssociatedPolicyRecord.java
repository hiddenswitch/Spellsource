/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.records;


import com.hiddenswitch.framework.schema.keycloak.tables.AssociatedPolicy;
import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IAssociatedPolicy;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssociatedPolicyRecord extends UpdatableRecordImpl<AssociatedPolicyRecord> implements VertxPojo, Record2<String, String>, IAssociatedPolicy {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>keycloak.associated_policy.policy_id</code>.
     */
    @Override
    public AssociatedPolicyRecord setPolicyId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.associated_policy.policy_id</code>.
     */
    @Override
    public String getPolicyId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>keycloak.associated_policy.associated_policy_id</code>.
     */
    @Override
    public AssociatedPolicyRecord setAssociatedPolicyId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.associated_policy.associated_policy_id</code>.
     */
    @Override
    public String getAssociatedPolicyId() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AssociatedPolicy.ASSOCIATED_POLICY.POLICY_ID;
    }

    @Override
    public Field<String> field2() {
        return AssociatedPolicy.ASSOCIATED_POLICY.ASSOCIATED_POLICY_ID;
    }

    @Override
    public String component1() {
        return getPolicyId();
    }

    @Override
    public String component2() {
        return getAssociatedPolicyId();
    }

    @Override
    public String value1() {
        return getPolicyId();
    }

    @Override
    public String value2() {
        return getAssociatedPolicyId();
    }

    @Override
    public AssociatedPolicyRecord value1(String value) {
        setPolicyId(value);
        return this;
    }

    @Override
    public AssociatedPolicyRecord value2(String value) {
        setAssociatedPolicyId(value);
        return this;
    }

    @Override
    public AssociatedPolicyRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IAssociatedPolicy from) {
        setPolicyId(from.getPolicyId());
        setAssociatedPolicyId(from.getAssociatedPolicyId());
    }

    @Override
    public <E extends IAssociatedPolicy> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssociatedPolicyRecord
     */
    public AssociatedPolicyRecord() {
        super(AssociatedPolicy.ASSOCIATED_POLICY);
    }

    /**
     * Create a detached, initialised AssociatedPolicyRecord
     */
    public AssociatedPolicyRecord(String policyId, String associatedPolicyId) {
        super(AssociatedPolicy.ASSOCIATED_POLICY);

        setPolicyId(policyId);
        setAssociatedPolicyId(associatedPolicyId);
    }

    /**
     * Create a detached, initialised AssociatedPolicyRecord
     */
    public AssociatedPolicyRecord(com.hiddenswitch.framework.schema.keycloak.tables.pojos.AssociatedPolicy value) {
        super(AssociatedPolicy.ASSOCIATED_POLICY);

        if (value != null) {
            setPolicyId(value.getPolicyId());
            setAssociatedPolicyId(value.getAssociatedPolicyId());
        }
    }

        public AssociatedPolicyRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
