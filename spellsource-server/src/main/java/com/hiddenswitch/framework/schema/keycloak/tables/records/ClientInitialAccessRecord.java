/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.records;


import com.hiddenswitch.framework.schema.keycloak.tables.ClientInitialAccess;
import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IClientInitialAccess;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientInitialAccessRecord extends UpdatableRecordImpl<ClientInitialAccessRecord> implements VertxPojo, Record6<String, String, Integer, Integer, Integer, Integer>, IClientInitialAccess {

    private static final long serialVersionUID = -32532536;

    /**
     * Setter for <code>keycloak.client_initial_access.id</code>.
     */
    @Override
    public ClientInitialAccessRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.client_initial_access.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>keycloak.client_initial_access.realm_id</code>.
     */
    @Override
    public ClientInitialAccessRecord setRealmId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.client_initial_access.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>keycloak.client_initial_access.timestamp</code>.
     */
    @Override
    public ClientInitialAccessRecord setTimestamp(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.client_initial_access.timestamp</code>.
     */
    @Override
    public Integer getTimestamp() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>keycloak.client_initial_access.expiration</code>.
     */
    @Override
    public ClientInitialAccessRecord setExpiration(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.client_initial_access.expiration</code>.
     */
    @Override
    public Integer getExpiration() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>keycloak.client_initial_access.count</code>.
     */
    @Override
    public ClientInitialAccessRecord setCount(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.client_initial_access.count</code>.
     */
    @Override
    public Integer getCount() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>keycloak.client_initial_access.remaining_count</code>.
     */
    @Override
    public ClientInitialAccessRecord setRemainingCount(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.client_initial_access.remaining_count</code>.
     */
    @Override
    public Integer getRemainingCount() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ClientInitialAccess.CLIENT_INITIAL_ACCESS.ID;
    }

    @Override
    public Field<String> field2() {
        return ClientInitialAccess.CLIENT_INITIAL_ACCESS.REALM_ID;
    }

    @Override
    public Field<Integer> field3() {
        return ClientInitialAccess.CLIENT_INITIAL_ACCESS.TIMESTAMP;
    }

    @Override
    public Field<Integer> field4() {
        return ClientInitialAccess.CLIENT_INITIAL_ACCESS.EXPIRATION;
    }

    @Override
    public Field<Integer> field5() {
        return ClientInitialAccess.CLIENT_INITIAL_ACCESS.COUNT;
    }

    @Override
    public Field<Integer> field6() {
        return ClientInitialAccess.CLIENT_INITIAL_ACCESS.REMAINING_COUNT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRealmId();
    }

    @Override
    public Integer component3() {
        return getTimestamp();
    }

    @Override
    public Integer component4() {
        return getExpiration();
    }

    @Override
    public Integer component5() {
        return getCount();
    }

    @Override
    public Integer component6() {
        return getRemainingCount();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRealmId();
    }

    @Override
    public Integer value3() {
        return getTimestamp();
    }

    @Override
    public Integer value4() {
        return getExpiration();
    }

    @Override
    public Integer value5() {
        return getCount();
    }

    @Override
    public Integer value6() {
        return getRemainingCount();
    }

    @Override
    public ClientInitialAccessRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ClientInitialAccessRecord value2(String value) {
        setRealmId(value);
        return this;
    }

    @Override
    public ClientInitialAccessRecord value3(Integer value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public ClientInitialAccessRecord value4(Integer value) {
        setExpiration(value);
        return this;
    }

    @Override
    public ClientInitialAccessRecord value5(Integer value) {
        setCount(value);
        return this;
    }

    @Override
    public ClientInitialAccessRecord value6(Integer value) {
        setRemainingCount(value);
        return this;
    }

    @Override
    public ClientInitialAccessRecord values(String value1, String value2, Integer value3, Integer value4, Integer value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IClientInitialAccess from) {
        setId(from.getId());
        setRealmId(from.getRealmId());
        setTimestamp(from.getTimestamp());
        setExpiration(from.getExpiration());
        setCount(from.getCount());
        setRemainingCount(from.getRemainingCount());
    }

    @Override
    public <E extends IClientInitialAccess> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientInitialAccessRecord
     */
    public ClientInitialAccessRecord() {
        super(ClientInitialAccess.CLIENT_INITIAL_ACCESS);
    }

    /**
     * Create a detached, initialised ClientInitialAccessRecord
     */
    public ClientInitialAccessRecord(String id, String realmId, Integer timestamp, Integer expiration, Integer count, Integer remainingCount) {
        super(ClientInitialAccess.CLIENT_INITIAL_ACCESS);

        set(0, id);
        set(1, realmId);
        set(2, timestamp);
        set(3, expiration);
        set(4, count);
        set(5, remainingCount);
    }

    public ClientInitialAccessRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
