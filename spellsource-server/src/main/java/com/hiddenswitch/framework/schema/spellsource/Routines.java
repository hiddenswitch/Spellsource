/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource;


import com.hiddenswitch.framework.schema.spellsource.routines.CanSeeDeck;
import com.hiddenswitch.framework.schema.spellsource.routines.CardMessage;
import com.hiddenswitch.framework.schema.spellsource.routines.CardsCollectible;
import com.hiddenswitch.framework.schema.spellsource.routines.CardsCost;
import com.hiddenswitch.framework.schema.spellsource.routines.CardsType;
import com.hiddenswitch.framework.schema.spellsource.routines.CreateDeckWithCards;
import com.hiddenswitch.framework.schema.spellsource.routines.GetUserId;
import com.hiddenswitch.framework.schema.spellsource.tables.GetClasses;
import com.hiddenswitch.framework.schema.spellsource.tables.GetCollectionCards;
import com.hiddenswitch.framework.schema.spellsource.tables.SetCardsInDeck;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardsRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.ClassesRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.DecksRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.GetClassesRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.GetCollectionCardsRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.SetCardsInDeckRecord;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;


/**
 * Convenience access to all stored procedures and functions in spellsource.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>spellsource.can_see_deck</code>
     */
    public static Boolean canSeeDeck(
          Configuration configuration
        , String userId
        , DecksRecord deck
    ) {
        CanSeeDeck f = new CanSeeDeck();
        f.setUserId(userId);
        f.setDeck(deck);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.can_see_deck</code> as a field.
     */
    public static Field<Boolean> canSeeDeck(
          String userId
        , DecksRecord deck
    ) {
        CanSeeDeck f = new CanSeeDeck();
        f.setUserId(userId);
        f.setDeck(deck);

        return f.asField();
    }

    /**
     * Get <code>spellsource.can_see_deck</code> as a field.
     */
    public static Field<Boolean> canSeeDeck(
          Field<String> userId
        , Field<DecksRecord> deck
    ) {
        CanSeeDeck f = new CanSeeDeck();
        f.setUserId(userId);
        f.setDeck(deck);

        return f.asField();
    }

    /**
     * Call <code>spellsource.card_message</code>
     */
    public static String cardMessage(
          Configuration configuration
        , CardsRecord card
        , ClassesRecord cl
    ) {
        CardMessage f = new CardMessage();
        f.setCard(card);
        f.setCl(cl);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.card_message</code> as a field.
     */
    public static Field<String> cardMessage(
          CardsRecord card
        , ClassesRecord cl
    ) {
        CardMessage f = new CardMessage();
        f.setCard(card);
        f.setCl(cl);

        return f.asField();
    }

    /**
     * Get <code>spellsource.card_message</code> as a field.
     */
    public static Field<String> cardMessage(
          Field<CardsRecord> card
        , Field<ClassesRecord> cl
    ) {
        CardMessage f = new CardMessage();
        f.setCard(card);
        f.setCl(cl);

        return f.asField();
    }

    /**
     * Call <code>spellsource.cards_collectible</code>
     */
    public static Boolean cardsCollectible(
          Configuration configuration
        , CardsRecord card
    ) {
        CardsCollectible f = new CardsCollectible();
        f.setCard(card);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.cards_collectible</code> as a field.
     */
    public static Field<Boolean> cardsCollectible(
          CardsRecord card
    ) {
        CardsCollectible f = new CardsCollectible();
        f.setCard(card);

        return f.asField();
    }

    /**
     * Get <code>spellsource.cards_collectible</code> as a field.
     */
    public static Field<Boolean> cardsCollectible(
          Field<CardsRecord> card
    ) {
        CardsCollectible f = new CardsCollectible();
        f.setCard(card);

        return f.asField();
    }

    /**
     * Call <code>spellsource.cards_cost</code>
     */
    public static Integer cardsCost(
          Configuration configuration
        , CardsRecord card
    ) {
        CardsCost f = new CardsCost();
        f.setCard(card);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.cards_cost</code> as a field.
     */
    public static Field<Integer> cardsCost(
          CardsRecord card
    ) {
        CardsCost f = new CardsCost();
        f.setCard(card);

        return f.asField();
    }

    /**
     * Get <code>spellsource.cards_cost</code> as a field.
     */
    public static Field<Integer> cardsCost(
          Field<CardsRecord> card
    ) {
        CardsCost f = new CardsCost();
        f.setCard(card);

        return f.asField();
    }

    /**
     * Call <code>spellsource.cards_type</code>
     */
    public static String cardsType(
          Configuration configuration
        , CardsRecord card
    ) {
        CardsType f = new CardsType();
        f.setCard(card);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.cards_type</code> as a field.
     */
    public static Field<String> cardsType(
          CardsRecord card
    ) {
        CardsType f = new CardsType();
        f.setCard(card);

        return f.asField();
    }

    /**
     * Get <code>spellsource.cards_type</code> as a field.
     */
    public static Field<String> cardsType(
          Field<CardsRecord> card
    ) {
        CardsType f = new CardsType();
        f.setCard(card);

        return f.asField();
    }

    /**
     * Call <code>spellsource.create_deck_with_cards</code>
     */
    public static DecksRecord createDeckWithCards(
          Configuration configuration
        , String deckName
        , String classHero
        , String formatName
        , String[] cardIds
    ) {
        CreateDeckWithCards f = new CreateDeckWithCards();
        f.setDeckName(deckName);
        f.setClassHero(classHero);
        f.setFormatName(formatName);
        f.setCardIds(cardIds);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.create_deck_with_cards</code> as a field.
     */
    public static Field<DecksRecord> createDeckWithCards(
          String deckName
        , String classHero
        , String formatName
        , String[] cardIds
    ) {
        CreateDeckWithCards f = new CreateDeckWithCards();
        f.setDeckName(deckName);
        f.setClassHero(classHero);
        f.setFormatName(formatName);
        f.setCardIds(cardIds);

        return f.asField();
    }

    /**
     * Get <code>spellsource.create_deck_with_cards</code> as a field.
     */
    public static Field<DecksRecord> createDeckWithCards(
          Field<String> deckName
        , Field<String> classHero
        , Field<String> formatName
        , Field<String[]> cardIds
    ) {
        CreateDeckWithCards f = new CreateDeckWithCards();
        f.setDeckName(deckName);
        f.setClassHero(classHero);
        f.setFormatName(formatName);
        f.setCardIds(cardIds);

        return f.asField();
    }

    /**
     * Call <code>spellsource.get_user_id</code>
     */
    public static String getUserId(
          Configuration configuration
    ) {
        GetUserId f = new GetUserId();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.get_user_id</code> as a field.
     */
    public static Field<String> getUserId() {
        GetUserId f = new GetUserId();

        return f.asField();
    }

    /**
     * Call <code>spellsource.get_classes</code>.
     */
    public static Result<GetClassesRecord> getClasses(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.GetClasses.GET_CLASSES.call(
        )).fetch();
    }

    /**
     * Get <code>spellsource.get_classes</code> as a table.
     */
    public static GetClasses getClasses() {
        return com.hiddenswitch.framework.schema.spellsource.tables.GetClasses.GET_CLASSES.call(
        );
    }

    /**
     * Call <code>spellsource.get_collection_cards</code>.
     */
    public static Result<GetCollectionCardsRecord> getCollectionCards(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.GetCollectionCards.GET_COLLECTION_CARDS.call(
        )).fetch();
    }

    /**
     * Get <code>spellsource.get_collection_cards</code> as a table.
     */
    public static GetCollectionCards getCollectionCards() {
        return com.hiddenswitch.framework.schema.spellsource.tables.GetCollectionCards.GET_COLLECTION_CARDS.call(
        );
    }

    /**
     * Call <code>spellsource.set_cards_in_deck</code>.
     */
    public static Result<SetCardsInDeckRecord> setCardsInDeck(
          Configuration configuration
        , String deck
        , String[] cardIds
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.SetCardsInDeck.SET_CARDS_IN_DECK.call(
              deck
            , cardIds
        )).fetch();
    }

    /**
     * Get <code>spellsource.set_cards_in_deck</code> as a table.
     */
    public static SetCardsInDeck setCardsInDeck(
          String deck
        , String[] cardIds
    ) {
        return com.hiddenswitch.framework.schema.spellsource.tables.SetCardsInDeck.SET_CARDS_IN_DECK.call(
            deck,
            cardIds
        );
    }

    /**
     * Get <code>spellsource.set_cards_in_deck</code> as a table.
     */
    public static SetCardsInDeck setCardsInDeck(
          Field<String> deck
        , Field<String[]> cardIds
    ) {
        return com.hiddenswitch.framework.schema.spellsource.tables.SetCardsInDeck.SET_CARDS_IN_DECK.call(
            deck,
            cardIds
        );
    }
}
