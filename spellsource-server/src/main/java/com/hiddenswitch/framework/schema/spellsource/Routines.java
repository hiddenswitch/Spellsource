/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource;


import com.hiddenswitch.framework.schema.spellsource.routines.ArchiveCard;
import com.hiddenswitch.framework.schema.spellsource.routines.CanSeeDeck;
import com.hiddenswitch.framework.schema.spellsource.routines.CardCatalogueGetCardByName;
import com.hiddenswitch.framework.schema.spellsource.routines.CardCatalogueGetCardByNameAndClass;
import com.hiddenswitch.framework.schema.spellsource.routines.CardCatalogueGetHeroCard;
import com.hiddenswitch.framework.schema.spellsource.routines.CardMessage;
import com.hiddenswitch.framework.schema.spellsource.routines.CardsCollectible;
import com.hiddenswitch.framework.schema.spellsource.routines.CardsCost;
import com.hiddenswitch.framework.schema.spellsource.routines.CardsInDeckCardByCardId;
import com.hiddenswitch.framework.schema.spellsource.routines.CardsType;
import com.hiddenswitch.framework.schema.spellsource.routines.ClusteredGamesUpdateGameAndUsers;
import com.hiddenswitch.framework.schema.spellsource.routines.CreateDeckWithCards;
import com.hiddenswitch.framework.schema.spellsource.routines.GetLatestCard;
import com.hiddenswitch.framework.schema.spellsource.routines.GetUserId;
import com.hiddenswitch.framework.schema.spellsource.routines.PublishCard;
import com.hiddenswitch.framework.schema.spellsource.routines.PublishGitCard;
import com.hiddenswitch.framework.schema.spellsource.routines.SaveCard;
import com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueFormats;
import com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetBannedDraftCards;
import com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetBaseClasses;
import com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetCardById;
import com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetClassCards;
import com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetFormat;
import com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetHardRemovalCards;
import com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueQuery;
import com.hiddenswitch.framework.schema.spellsource.tables.GetClasses;
import com.hiddenswitch.framework.schema.spellsource.tables.GetCollectionCards;
import com.hiddenswitch.framework.schema.spellsource.tables.SetCardsInDeck;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardCatalogueFormatsRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardCatalogueGetBannedDraftCardsRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardCatalogueGetBaseClassesRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardCatalogueGetCardByIdRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardCatalogueGetClassCardsRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardCatalogueGetFormatRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardCatalogueGetHardRemovalCardsRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardCatalogueQueryRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardsInDeckRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.CardsRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.ClassesRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.DecksRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.GetClassesRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.GetCollectionCardsRecord;
import com.hiddenswitch.framework.schema.spellsource.tables.records.SetCardsInDeckRecord;

import io.vertx.core.json.JsonObject;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Result;
import org.jooq.XML;


/**
 * Convenience access to all stored procedures and functions in spellsource.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>spellsource.archive_card</code>
     */
    public static void archiveCard(
          Configuration configuration
        , String cardId
    ) {
        ArchiveCard p = new ArchiveCard();
        p.setCardId(cardId);

        p.execute(configuration);
    }

    /**
     * Call <code>spellsource.can_see_deck</code>
     */
    public static Boolean canSeeDeck(
          Configuration configuration
        , String userId
        , DecksRecord deck
    ) {
        CanSeeDeck f = new CanSeeDeck();
        f.setUserId(userId);
        f.setDeck(deck);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.can_see_deck</code> as a field.
     */
    public static Field<Boolean> canSeeDeck(
          String userId
        , DecksRecord deck
    ) {
        CanSeeDeck f = new CanSeeDeck();
        f.setUserId(userId);
        f.setDeck(deck);

        return f.asField();
    }

    /**
     * Get <code>spellsource.can_see_deck</code> as a field.
     */
    public static Field<Boolean> canSeeDeck(
          Field<String> userId
        , Field<DecksRecord> deck
    ) {
        CanSeeDeck f = new CanSeeDeck();
        f.setUserId(userId);
        f.setDeck(deck);

        return f.asField();
    }

    /**
     * Call <code>spellsource.card_catalogue_get_card_by_name</code>
     */
    public static CardsRecord cardCatalogueGetCardByName(
          Configuration configuration
        , String cardName
    ) {
        CardCatalogueGetCardByName f = new CardCatalogueGetCardByName();
        f.setCardName(cardName);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.card_catalogue_get_card_by_name</code> as a field.
     */
    public static Field<CardsRecord> cardCatalogueGetCardByName(
          String cardName
    ) {
        CardCatalogueGetCardByName f = new CardCatalogueGetCardByName();
        f.setCardName(cardName);

        return f.asField();
    }

    /**
     * Get <code>spellsource.card_catalogue_get_card_by_name</code> as a field.
     */
    public static Field<CardsRecord> cardCatalogueGetCardByName(
          Field<String> cardName
    ) {
        CardCatalogueGetCardByName f = new CardCatalogueGetCardByName();
        f.setCardName(cardName);

        return f.asField();
    }

    /**
     * Call <code>spellsource.card_catalogue_get_card_by_name_and_class</code>
     */
    public static CardsRecord cardCatalogueGetCardByNameAndClass(
          Configuration configuration
        , String cardName
        , String heroClass
    ) {
        CardCatalogueGetCardByNameAndClass f = new CardCatalogueGetCardByNameAndClass();
        f.setCardName(cardName);
        f.setHeroClass(heroClass);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.card_catalogue_get_card_by_name_and_class</code> as
     * a field.
     */
    public static Field<CardsRecord> cardCatalogueGetCardByNameAndClass(
          String cardName
        , String heroClass
    ) {
        CardCatalogueGetCardByNameAndClass f = new CardCatalogueGetCardByNameAndClass();
        f.setCardName(cardName);
        f.setHeroClass(heroClass);

        return f.asField();
    }

    /**
     * Get <code>spellsource.card_catalogue_get_card_by_name_and_class</code> as
     * a field.
     */
    public static Field<CardsRecord> cardCatalogueGetCardByNameAndClass(
          Field<String> cardName
        , Field<String> heroClass
    ) {
        CardCatalogueGetCardByNameAndClass f = new CardCatalogueGetCardByNameAndClass();
        f.setCardName(cardName);
        f.setHeroClass(heroClass);

        return f.asField();
    }

    /**
     * Call <code>spellsource.card_catalogue_get_hero_card</code>
     */
    public static CardsRecord cardCatalogueGetHeroCard(
          Configuration configuration
        , String heroClass
    ) {
        CardCatalogueGetHeroCard f = new CardCatalogueGetHeroCard();
        f.setHeroClass(heroClass);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.card_catalogue_get_hero_card</code> as a field.
     */
    public static Field<CardsRecord> cardCatalogueGetHeroCard(
          String heroClass
    ) {
        CardCatalogueGetHeroCard f = new CardCatalogueGetHeroCard();
        f.setHeroClass(heroClass);

        return f.asField();
    }

    /**
     * Get <code>spellsource.card_catalogue_get_hero_card</code> as a field.
     */
    public static Field<CardsRecord> cardCatalogueGetHeroCard(
          Field<String> heroClass
    ) {
        CardCatalogueGetHeroCard f = new CardCatalogueGetHeroCard();
        f.setHeroClass(heroClass);

        return f.asField();
    }

    /**
     * Call <code>spellsource.card_message</code>
     */
    public static String cardMessage(
          Configuration configuration
        , CardsRecord card
        , ClassesRecord cl
    ) {
        CardMessage f = new CardMessage();
        f.setCard(card);
        f.setCl(cl);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.card_message</code> as a field.
     */
    public static Field<String> cardMessage(
          CardsRecord card
        , ClassesRecord cl
    ) {
        CardMessage f = new CardMessage();
        f.setCard(card);
        f.setCl(cl);

        return f.asField();
    }

    /**
     * Get <code>spellsource.card_message</code> as a field.
     */
    public static Field<String> cardMessage(
          Field<CardsRecord> card
        , Field<ClassesRecord> cl
    ) {
        CardMessage f = new CardMessage();
        f.setCard(card);
        f.setCl(cl);

        return f.asField();
    }

    /**
     * Call <code>spellsource.cards_collectible</code>
     */
    public static Boolean cardsCollectible(
          Configuration configuration
        , CardsRecord card
    ) {
        CardsCollectible f = new CardsCollectible();
        f.setCard(card);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.cards_collectible</code> as a field.
     */
    public static Field<Boolean> cardsCollectible(
          CardsRecord card
    ) {
        CardsCollectible f = new CardsCollectible();
        f.setCard(card);

        return f.asField();
    }

    /**
     * Get <code>spellsource.cards_collectible</code> as a field.
     */
    public static Field<Boolean> cardsCollectible(
          Field<CardsRecord> card
    ) {
        CardsCollectible f = new CardsCollectible();
        f.setCard(card);

        return f.asField();
    }

    /**
     * Call <code>spellsource.cards_cost</code>
     */
    public static Integer cardsCost(
          Configuration configuration
        , CardsRecord card
    ) {
        CardsCost f = new CardsCost();
        f.setCard(card);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.cards_cost</code> as a field.
     */
    public static Field<Integer> cardsCost(
          CardsRecord card
    ) {
        CardsCost f = new CardsCost();
        f.setCard(card);

        return f.asField();
    }

    /**
     * Get <code>spellsource.cards_cost</code> as a field.
     */
    public static Field<Integer> cardsCost(
          Field<CardsRecord> card
    ) {
        CardsCost f = new CardsCost();
        f.setCard(card);

        return f.asField();
    }

    /**
     * Call <code>spellsource.cards_in_deck_card_by_card_id</code>
     */
    public static CardsRecord cardsInDeckCardByCardId(
          Configuration configuration
        , CardsInDeckRecord cardsInDeck
    ) {
        CardsInDeckCardByCardId f = new CardsInDeckCardByCardId();
        f.setCardsInDeck(cardsInDeck);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.cards_in_deck_card_by_card_id</code> as a field.
     */
    public static Field<CardsRecord> cardsInDeckCardByCardId(
          CardsInDeckRecord cardsInDeck
    ) {
        CardsInDeckCardByCardId f = new CardsInDeckCardByCardId();
        f.setCardsInDeck(cardsInDeck);

        return f.asField();
    }

    /**
     * Get <code>spellsource.cards_in_deck_card_by_card_id</code> as a field.
     */
    public static Field<CardsRecord> cardsInDeckCardByCardId(
          Field<CardsInDeckRecord> cardsInDeck
    ) {
        CardsInDeckCardByCardId f = new CardsInDeckCardByCardId();
        f.setCardsInDeck(cardsInDeck);

        return f.asField();
    }

    /**
     * Call <code>spellsource.cards_type</code>
     */
    public static String cardsType(
          Configuration configuration
        , CardsRecord card
    ) {
        CardsType f = new CardsType();
        f.setCard(card);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.cards_type</code> as a field.
     */
    public static Field<String> cardsType(
          CardsRecord card
    ) {
        CardsType f = new CardsType();
        f.setCard(card);

        return f.asField();
    }

    /**
     * Get <code>spellsource.cards_type</code> as a field.
     */
    public static Field<String> cardsType(
          Field<CardsRecord> card
    ) {
        CardsType f = new CardsType();
        f.setCard(card);

        return f.asField();
    }

    /**
     * Call <code>spellsource.clustered_games_update_game_and_users</code>
     */
    public static Boolean clusteredGamesUpdateGameAndUsers(
          Configuration configuration
        , String pUserIdWinner
        , String pUserIdLoser
        , Long pGameId
        , JSON pTrace
    ) {
        ClusteredGamesUpdateGameAndUsers f = new ClusteredGamesUpdateGameAndUsers();
        f.setPUserIdWinner(pUserIdWinner);
        f.setPUserIdLoser(pUserIdLoser);
        f.setPGameId(pGameId);
        f.setPTrace(pTrace);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.clustered_games_update_game_and_users</code> as a
     * field.
     */
    public static Field<Boolean> clusteredGamesUpdateGameAndUsers(
          String pUserIdWinner
        , String pUserIdLoser
        , Long pGameId
        , JSON pTrace
    ) {
        ClusteredGamesUpdateGameAndUsers f = new ClusteredGamesUpdateGameAndUsers();
        f.setPUserIdWinner(pUserIdWinner);
        f.setPUserIdLoser(pUserIdLoser);
        f.setPGameId(pGameId);
        f.setPTrace(pTrace);

        return f.asField();
    }

    /**
     * Get <code>spellsource.clustered_games_update_game_and_users</code> as a
     * field.
     */
    public static Field<Boolean> clusteredGamesUpdateGameAndUsers(
          Field<String> pUserIdWinner
        , Field<String> pUserIdLoser
        , Field<Long> pGameId
        , Field<JSON> pTrace
    ) {
        ClusteredGamesUpdateGameAndUsers f = new ClusteredGamesUpdateGameAndUsers();
        f.setPUserIdWinner(pUserIdWinner);
        f.setPUserIdLoser(pUserIdLoser);
        f.setPGameId(pGameId);
        f.setPTrace(pTrace);

        return f.asField();
    }

    /**
     * Call <code>spellsource.create_deck_with_cards</code>
     */
    public static DecksRecord createDeckWithCards(
          Configuration configuration
        , String deckName
        , String classHero
        , String formatName
        , String[] cardIds
    ) {
        CreateDeckWithCards f = new CreateDeckWithCards();
        f.setDeckName(deckName);
        f.setClassHero(classHero);
        f.setFormatName(formatName);
        f.setCardIds(cardIds);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.create_deck_with_cards</code> as a field.
     */
    public static Field<DecksRecord> createDeckWithCards(
          String deckName
        , String classHero
        , String formatName
        , String[] cardIds
    ) {
        CreateDeckWithCards f = new CreateDeckWithCards();
        f.setDeckName(deckName);
        f.setClassHero(classHero);
        f.setFormatName(formatName);
        f.setCardIds(cardIds);

        return f.asField();
    }

    /**
     * Get <code>spellsource.create_deck_with_cards</code> as a field.
     */
    public static Field<DecksRecord> createDeckWithCards(
          Field<String> deckName
        , Field<String> classHero
        , Field<String> formatName
        , Field<String[]> cardIds
    ) {
        CreateDeckWithCards f = new CreateDeckWithCards();
        f.setDeckName(deckName);
        f.setClassHero(classHero);
        f.setFormatName(formatName);
        f.setCardIds(cardIds);

        return f.asField();
    }

    /**
     * Call <code>spellsource.get_latest_card</code>
     */
    public static CardsRecord getLatestCard(
          Configuration configuration
        , String cardId
        , Boolean published
    ) {
        GetLatestCard f = new GetLatestCard();
        f.setCardId(cardId);
        f.setPublished(published);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.get_latest_card</code> as a field.
     */
    public static Field<CardsRecord> getLatestCard(
          String cardId
        , Boolean published
    ) {
        GetLatestCard f = new GetLatestCard();
        f.setCardId(cardId);
        f.setPublished(published);

        return f.asField();
    }

    /**
     * Get <code>spellsource.get_latest_card</code> as a field.
     */
    public static Field<CardsRecord> getLatestCard(
          Field<String> cardId
        , Field<Boolean> published
    ) {
        GetLatestCard f = new GetLatestCard();
        f.setCardId(cardId);
        f.setPublished(published);

        return f.asField();
    }

    /**
     * Call <code>spellsource.get_user_id</code>
     */
    public static String getUserId(
          Configuration configuration
    ) {
        GetUserId f = new GetUserId();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.get_user_id</code> as a field.
     */
    public static Field<String> getUserId() {
        GetUserId f = new GetUserId();

        return f.asField();
    }

    /**
     * Call <code>spellsource.publish_card</code>
     */
    public static Long publishCard(
          Configuration configuration
        , String cardId
    ) {
        PublishCard f = new PublishCard();
        f.setCardId(cardId);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.publish_card</code> as a field.
     */
    public static Field<Long> publishCard(
          String cardId
    ) {
        PublishCard f = new PublishCard();
        f.setCardId(cardId);

        return f.asField();
    }

    /**
     * Get <code>spellsource.publish_card</code> as a field.
     */
    public static Field<Long> publishCard(
          Field<String> cardId
    ) {
        PublishCard f = new PublishCard();
        f.setCardId(cardId);

        return f.asField();
    }

    /**
     * Call <code>spellsource.publish_git_card</code>
     */
    public static CardsRecord publishGitCard(
          Configuration configuration
        , String cardId
        , JsonObject json
        , String creator
    ) {
        PublishGitCard f = new PublishGitCard();
        f.setCardId(cardId);
        f.setJson(json);
        f.setCreator(creator);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.publish_git_card</code> as a field.
     */
    public static Field<CardsRecord> publishGitCard(
          String cardId
        , JsonObject json
        , String creator
    ) {
        PublishGitCard f = new PublishGitCard();
        f.setCardId(cardId);
        f.setJson(json);
        f.setCreator(creator);

        return f.asField();
    }

    /**
     * Get <code>spellsource.publish_git_card</code> as a field.
     */
    public static Field<CardsRecord> publishGitCard(
          Field<String> cardId
        , Field<JsonObject> json
        , Field<String> creator
    ) {
        PublishGitCard f = new PublishGitCard();
        f.setCardId(cardId);
        f.setJson(json);
        f.setCreator(creator);

        return f.asField();
    }

    /**
     * Call <code>spellsource.save_card</code>
     */
    public static CardsRecord saveCard(
          Configuration configuration
        , String cardId
        , XML workspace
        , JsonObject json
    ) {
        SaveCard f = new SaveCard();
        f.setCardId(cardId);
        f.setWorkspace(workspace);
        f.setJson(json);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>spellsource.save_card</code> as a field.
     */
    public static Field<CardsRecord> saveCard(
          String cardId
        , XML workspace
        , JsonObject json
    ) {
        SaveCard f = new SaveCard();
        f.setCardId(cardId);
        f.setWorkspace(workspace);
        f.setJson(json);

        return f.asField();
    }

    /**
     * Get <code>spellsource.save_card</code> as a field.
     */
    public static Field<CardsRecord> saveCard(
          Field<String> cardId
        , Field<XML> workspace
        , Field<JsonObject> json
    ) {
        SaveCard f = new SaveCard();
        f.setCardId(cardId);
        f.setWorkspace(workspace);
        f.setJson(json);

        return f.asField();
    }

    /**
     * Call <code>spellsource.card_catalogue_formats</code>.
     */
    public static Result<CardCatalogueFormatsRecord> cardCatalogueFormats(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueFormats.CARD_CATALOGUE_FORMATS.call(
        )).fetch();
    }

    /**
     * Get <code>spellsource.card_catalogue_formats</code> as a table.
     */
    public static CardCatalogueFormats cardCatalogueFormats() {
        return com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueFormats.CARD_CATALOGUE_FORMATS.call(
        );
    }

    /**
     * Call <code>spellsource.card_catalogue_get_banned_draft_cards</code>.
     */
    public static Result<CardCatalogueGetBannedDraftCardsRecord> cardCatalogueGetBannedDraftCards(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetBannedDraftCards.CARD_CATALOGUE_GET_BANNED_DRAFT_CARDS.call(
        )).fetch();
    }

    /**
     * Get <code>spellsource.card_catalogue_get_banned_draft_cards</code> as a
     * table.
     */
    public static CardCatalogueGetBannedDraftCards cardCatalogueGetBannedDraftCards() {
        return com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetBannedDraftCards.CARD_CATALOGUE_GET_BANNED_DRAFT_CARDS.call(
        );
    }

    /**
     * Call <code>spellsource.card_catalogue_get_base_classes</code>.
     */
    public static Result<CardCatalogueGetBaseClassesRecord> cardCatalogueGetBaseClasses(
          Configuration configuration
        , String[] sets
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetBaseClasses.CARD_CATALOGUE_GET_BASE_CLASSES.call(
              sets
        )).fetch();
    }

    /**
     * Get <code>spellsource.card_catalogue_get_base_classes</code> as a table.
     */
    public static CardCatalogueGetBaseClasses cardCatalogueGetBaseClasses(
          String[] sets
    ) {
        return com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetBaseClasses.CARD_CATALOGUE_GET_BASE_CLASSES.call(
            sets
        );
    }

    /**
     * Get <code>spellsource.card_catalogue_get_base_classes</code> as a table.
     */
    public static CardCatalogueGetBaseClasses cardCatalogueGetBaseClasses(
          Field<String[]> sets
    ) {
        return com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetBaseClasses.CARD_CATALOGUE_GET_BASE_CLASSES.call(
            sets
        );
    }

    /**
     * Call <code>spellsource.card_catalogue_get_card_by_id</code>.
     */
    public static Result<CardCatalogueGetCardByIdRecord> cardCatalogueGetCardById(
          Configuration configuration
        , String cardId
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetCardById.CARD_CATALOGUE_GET_CARD_BY_ID.call(
              cardId
        )).fetch();
    }

    /**
     * Get <code>spellsource.card_catalogue_get_card_by_id</code> as a table.
     */
    public static CardCatalogueGetCardById cardCatalogueGetCardById(
          String cardId
    ) {
        return com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetCardById.CARD_CATALOGUE_GET_CARD_BY_ID.call(
            cardId
        );
    }

    /**
     * Get <code>spellsource.card_catalogue_get_card_by_id</code> as a table.
     */
    public static CardCatalogueGetCardById cardCatalogueGetCardById(
          Field<String> cardId
    ) {
        return com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetCardById.CARD_CATALOGUE_GET_CARD_BY_ID.call(
            cardId
        );
    }

    /**
     * Call <code>spellsource.card_catalogue_get_class_cards</code>.
     */
    public static Result<CardCatalogueGetClassCardsRecord> cardCatalogueGetClassCards(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetClassCards.CARD_CATALOGUE_GET_CLASS_CARDS.call(
        )).fetch();
    }

    /**
     * Get <code>spellsource.card_catalogue_get_class_cards</code> as a table.
     */
    public static CardCatalogueGetClassCards cardCatalogueGetClassCards() {
        return com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetClassCards.CARD_CATALOGUE_GET_CLASS_CARDS.call(
        );
    }

    /**
     * Call <code>spellsource.card_catalogue_get_format</code>.
     */
    public static Result<CardCatalogueGetFormatRecord> cardCatalogueGetFormat(
          Configuration configuration
        , String cardName
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetFormat.CARD_CATALOGUE_GET_FORMAT.call(
              cardName
        )).fetch();
    }

    /**
     * Get <code>spellsource.card_catalogue_get_format</code> as a table.
     */
    public static CardCatalogueGetFormat cardCatalogueGetFormat(
          String cardName
    ) {
        return com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetFormat.CARD_CATALOGUE_GET_FORMAT.call(
            cardName
        );
    }

    /**
     * Get <code>spellsource.card_catalogue_get_format</code> as a table.
     */
    public static CardCatalogueGetFormat cardCatalogueGetFormat(
          Field<String> cardName
    ) {
        return com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetFormat.CARD_CATALOGUE_GET_FORMAT.call(
            cardName
        );
    }

    /**
     * Call <code>spellsource.card_catalogue_get_hard_removal_cards</code>.
     */
    public static Result<CardCatalogueGetHardRemovalCardsRecord> cardCatalogueGetHardRemovalCards(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetHardRemovalCards.CARD_CATALOGUE_GET_HARD_REMOVAL_CARDS.call(
        )).fetch();
    }

    /**
     * Get <code>spellsource.card_catalogue_get_hard_removal_cards</code> as a
     * table.
     */
    public static CardCatalogueGetHardRemovalCards cardCatalogueGetHardRemovalCards() {
        return com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueGetHardRemovalCards.CARD_CATALOGUE_GET_HARD_REMOVAL_CARDS.call(
        );
    }

    /**
     * Call <code>spellsource.card_catalogue_query</code>.
     */
    public static Result<CardCatalogueQueryRecord> cardCatalogueQuery(
          Configuration configuration
        , String[] sets
        , String cardType
        , String rarity
        , String heroClass
        , String attribute
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueQuery.CARD_CATALOGUE_QUERY.call(
              sets
            , cardType
            , rarity
            , heroClass
            , attribute
        )).fetch();
    }

    /**
     * Get <code>spellsource.card_catalogue_query</code> as a table.
     */
    public static CardCatalogueQuery cardCatalogueQuery(
          String[] sets
        , String cardType
        , String rarity
        , String heroClass
        , String attribute
    ) {
        return com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueQuery.CARD_CATALOGUE_QUERY.call(
            sets,
            cardType,
            rarity,
            heroClass,
            attribute
        );
    }

    /**
     * Get <code>spellsource.card_catalogue_query</code> as a table.
     */
    public static CardCatalogueQuery cardCatalogueQuery(
          Field<String[]> sets
        , Field<String> cardType
        , Field<String> rarity
        , Field<String> heroClass
        , Field<String> attribute
    ) {
        return com.hiddenswitch.framework.schema.spellsource.tables.CardCatalogueQuery.CARD_CATALOGUE_QUERY.call(
            sets,
            cardType,
            rarity,
            heroClass,
            attribute
        );
    }

    /**
     * Call <code>spellsource.get_classes</code>.
     */
    public static Result<GetClassesRecord> getClasses(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.GetClasses.GET_CLASSES.call(
        )).fetch();
    }

    /**
     * Get <code>spellsource.get_classes</code> as a table.
     */
    public static GetClasses getClasses() {
        return com.hiddenswitch.framework.schema.spellsource.tables.GetClasses.GET_CLASSES.call(
        );
    }

    /**
     * Call <code>spellsource.get_collection_cards</code>.
     */
    public static Result<GetCollectionCardsRecord> getCollectionCards(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.GetCollectionCards.GET_COLLECTION_CARDS.call(
        )).fetch();
    }

    /**
     * Get <code>spellsource.get_collection_cards</code> as a table.
     */
    public static GetCollectionCards getCollectionCards() {
        return com.hiddenswitch.framework.schema.spellsource.tables.GetCollectionCards.GET_COLLECTION_CARDS.call(
        );
    }

    /**
     * Call <code>spellsource.set_cards_in_deck</code>.
     */
    public static Result<SetCardsInDeckRecord> setCardsInDeck(
          Configuration configuration
        , String deck
        , String[] cardIds
    ) {
        return configuration.dsl().selectFrom(com.hiddenswitch.framework.schema.spellsource.tables.SetCardsInDeck.SET_CARDS_IN_DECK.call(
              deck
            , cardIds
        )).fetch();
    }

    /**
     * Get <code>spellsource.set_cards_in_deck</code> as a table.
     */
    public static SetCardsInDeck setCardsInDeck(
          String deck
        , String[] cardIds
    ) {
        return com.hiddenswitch.framework.schema.spellsource.tables.SetCardsInDeck.SET_CARDS_IN_DECK.call(
            deck,
            cardIds
        );
    }

    /**
     * Get <code>spellsource.set_cards_in_deck</code> as a table.
     */
    public static SetCardsInDeck setCardsInDeck(
          Field<String> deck
        , Field<String[]> cardIds
    ) {
        return com.hiddenswitch.framework.schema.spellsource.tables.SetCardsInDeck.SET_CARDS_IN_DECK.call(
            deck,
            cardIds
        );
    }
}
