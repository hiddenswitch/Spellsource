/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.records;


import com.hiddenswitch.framework.schema.keycloak.tables.ResourceServerResource;
import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IResourceServerResource;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourceServerResourceRecord extends UpdatableRecordImpl<ResourceServerResourceRecord> implements VertxPojo, Record7<String, String, String, String, String, String, String>, IResourceServerResource {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>keycloak.resource_server_resource.id</code>.
     */
    @Override
    public ResourceServerResourceRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.resource_server_resource.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>keycloak.resource_server_resource.name</code>.
     */
    @Override
    public ResourceServerResourceRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.resource_server_resource.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>keycloak.resource_server_resource.uri</code>.
     */
    @Override
    public ResourceServerResourceRecord setUri(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.resource_server_resource.uri</code>.
     */
    @Override
    public String getUri() {
        return (String) get(2);
    }

    /**
     * Setter for <code>keycloak.resource_server_resource.type</code>.
     */
    @Override
    public ResourceServerResourceRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.resource_server_resource.type</code>.
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>keycloak.resource_server_resource.icon_uri</code>.
     */
    @Override
    public ResourceServerResourceRecord setIconUri(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.resource_server_resource.icon_uri</code>.
     */
    @Override
    public String getIconUri() {
        return (String) get(4);
    }

    /**
     * Setter for <code>keycloak.resource_server_resource.owner</code>.
     */
    @Override
    public ResourceServerResourceRecord setOwner(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.resource_server_resource.owner</code>.
     */
    @Override
    public String getOwner() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>keycloak.resource_server_resource.resource_server_id</code>.
     */
    @Override
    public ResourceServerResourceRecord setResourceServerId(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>keycloak.resource_server_resource.resource_server_id</code>.
     */
    @Override
    public String getResourceServerId() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ResourceServerResource.RESOURCE_SERVER_RESOURCE.ID;
    }

    @Override
    public Field<String> field2() {
        return ResourceServerResource.RESOURCE_SERVER_RESOURCE.NAME;
    }

    @Override
    public Field<String> field3() {
        return ResourceServerResource.RESOURCE_SERVER_RESOURCE.URI;
    }

    @Override
    public Field<String> field4() {
        return ResourceServerResource.RESOURCE_SERVER_RESOURCE.TYPE;
    }

    @Override
    public Field<String> field5() {
        return ResourceServerResource.RESOURCE_SERVER_RESOURCE.ICON_URI;
    }

    @Override
    public Field<String> field6() {
        return ResourceServerResource.RESOURCE_SERVER_RESOURCE.OWNER;
    }

    @Override
    public Field<String> field7() {
        return ResourceServerResource.RESOURCE_SERVER_RESOURCE.RESOURCE_SERVER_ID;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getUri();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getIconUri();
    }

    @Override
    public String component6() {
        return getOwner();
    }

    @Override
    public String component7() {
        return getResourceServerId();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getUri();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getIconUri();
    }

    @Override
    public String value6() {
        return getOwner();
    }

    @Override
    public String value7() {
        return getResourceServerId();
    }

    @Override
    public ResourceServerResourceRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ResourceServerResourceRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ResourceServerResourceRecord value3(String value) {
        setUri(value);
        return this;
    }

    @Override
    public ResourceServerResourceRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public ResourceServerResourceRecord value5(String value) {
        setIconUri(value);
        return this;
    }

    @Override
    public ResourceServerResourceRecord value6(String value) {
        setOwner(value);
        return this;
    }

    @Override
    public ResourceServerResourceRecord value7(String value) {
        setResourceServerId(value);
        return this;
    }

    @Override
    public ResourceServerResourceRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IResourceServerResource from) {
        setId(from.getId());
        setName(from.getName());
        setUri(from.getUri());
        setType(from.getType());
        setIconUri(from.getIconUri());
        setOwner(from.getOwner());
        setResourceServerId(from.getResourceServerId());
    }

    @Override
    public <E extends IResourceServerResource> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResourceServerResourceRecord
     */
    public ResourceServerResourceRecord() {
        super(ResourceServerResource.RESOURCE_SERVER_RESOURCE);
    }

    /**
     * Create a detached, initialised ResourceServerResourceRecord
     */
    public ResourceServerResourceRecord(String id, String name, String uri, String type, String iconUri, String owner, String resourceServerId) {
        super(ResourceServerResource.RESOURCE_SERVER_RESOURCE);

        setId(id);
        setName(name);
        setUri(uri);
        setType(type);
        setIconUri(iconUri);
        setOwner(owner);
        setResourceServerId(resourceServerId);
    }

    /**
     * Create a detached, initialised ResourceServerResourceRecord
     */
    public ResourceServerResourceRecord(com.hiddenswitch.framework.schema.keycloak.tables.pojos.ResourceServerResource value) {
        super(ResourceServerResource.RESOURCE_SERVER_RESOURCE);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setUri(value.getUri());
            setType(value.getType());
            setIconUri(value.getIconUri());
            setOwner(value.getOwner());
            setResourceServerId(value.getResourceServerId());
        }
    }

        public ResourceServerResourceRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
