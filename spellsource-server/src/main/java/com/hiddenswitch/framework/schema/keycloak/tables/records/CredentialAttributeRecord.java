/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.records;


import com.hiddenswitch.framework.schema.keycloak.tables.CredentialAttribute;
import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.ICredentialAttribute;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CredentialAttributeRecord extends TableRecordImpl<CredentialAttributeRecord> implements VertxPojo, Record4<String, String, String, String>, ICredentialAttribute {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>keycloak.credential_attribute.id</code>.
     */
    @Override
    public CredentialAttributeRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.credential_attribute.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>keycloak.credential_attribute.credential_id</code>.
     */
    @Override
    public CredentialAttributeRecord setCredentialId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.credential_attribute.credential_id</code>.
     */
    @Override
    public String getCredentialId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>keycloak.credential_attribute.name</code>.
     */
    @Override
    public CredentialAttributeRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.credential_attribute.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>keycloak.credential_attribute.value</code>.
     */
    @Override
    public CredentialAttributeRecord setValue(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.credential_attribute.value</code>.
     */
    @Override
    public String getValue() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CredentialAttribute.CREDENTIAL_ATTRIBUTE.ID;
    }

    @Override
    public Field<String> field2() {
        return CredentialAttribute.CREDENTIAL_ATTRIBUTE.CREDENTIAL_ID;
    }

    @Override
    public Field<String> field3() {
        return CredentialAttribute.CREDENTIAL_ATTRIBUTE.NAME;
    }

    @Override
    public Field<String> field4() {
        return CredentialAttribute.CREDENTIAL_ATTRIBUTE.VALUE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCredentialId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getValue();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCredentialId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getValue();
    }

    @Override
    public CredentialAttributeRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public CredentialAttributeRecord value2(String value) {
        setCredentialId(value);
        return this;
    }

    @Override
    public CredentialAttributeRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public CredentialAttributeRecord value4(String value) {
        setValue(value);
        return this;
    }

    @Override
    public CredentialAttributeRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ICredentialAttribute from) {
        setId(from.getId());
        setCredentialId(from.getCredentialId());
        setName(from.getName());
        setValue(from.getValue());
    }

    @Override
    public <E extends ICredentialAttribute> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CredentialAttributeRecord
     */
    public CredentialAttributeRecord() {
        super(CredentialAttribute.CREDENTIAL_ATTRIBUTE);
    }

    /**
     * Create a detached, initialised CredentialAttributeRecord
     */
    public CredentialAttributeRecord(String id, String credentialId, String name, String value) {
        super(CredentialAttribute.CREDENTIAL_ATTRIBUTE);

        setId(id);
        setCredentialId(credentialId);
        setName(name);
        setValue(value);
    }

    /**
     * Create a detached, initialised CredentialAttributeRecord
     */
    public CredentialAttributeRecord(com.hiddenswitch.framework.schema.keycloak.tables.pojos.CredentialAttribute value) {
        super(CredentialAttribute.CREDENTIAL_ATTRIBUTE);

        if (value != null) {
            setId(value.getId());
            setCredentialId(value.getCredentialId());
            setName(value.getName());
            setValue(value.getValue());
        }
    }

        public CredentialAttributeRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
