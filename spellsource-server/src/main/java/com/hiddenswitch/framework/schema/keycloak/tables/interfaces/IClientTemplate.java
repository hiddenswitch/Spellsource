/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IClientTemplate extends VertxPojo, Serializable {

    /**
     * Setter for <code>keycloak.client_template.id</code>.
     */
    public IClientTemplate setId(String value);

    /**
     * Getter for <code>keycloak.client_template.id</code>.
     */
    public String getId();

    /**
     * Setter for <code>keycloak.client_template.name</code>.
     */
    public IClientTemplate setName(String value);

    /**
     * Getter for <code>keycloak.client_template.name</code>.
     */
    public String getName();

    /**
     * Setter for <code>keycloak.client_template.realm_id</code>.
     */
    public IClientTemplate setRealmId(String value);

    /**
     * Getter for <code>keycloak.client_template.realm_id</code>.
     */
    public String getRealmId();

    /**
     * Setter for <code>keycloak.client_template.description</code>.
     */
    public IClientTemplate setDescription(String value);

    /**
     * Getter for <code>keycloak.client_template.description</code>.
     */
    public String getDescription();

    /**
     * Setter for <code>keycloak.client_template.protocol</code>.
     */
    public IClientTemplate setProtocol(String value);

    /**
     * Getter for <code>keycloak.client_template.protocol</code>.
     */
    public String getProtocol();

    /**
     * Setter for <code>keycloak.client_template.full_scope_allowed</code>.
     */
    public IClientTemplate setFullScopeAllowed(Boolean value);

    /**
     * Getter for <code>keycloak.client_template.full_scope_allowed</code>.
     */
    public Boolean getFullScopeAllowed();

    /**
     * Setter for <code>keycloak.client_template.consent_required</code>.
     */
    public IClientTemplate setConsentRequired(Boolean value);

    /**
     * Getter for <code>keycloak.client_template.consent_required</code>.
     */
    public Boolean getConsentRequired();

    /**
     * Setter for <code>keycloak.client_template.standard_flow_enabled</code>.
     */
    public IClientTemplate setStandardFlowEnabled(Boolean value);

    /**
     * Getter for <code>keycloak.client_template.standard_flow_enabled</code>.
     */
    public Boolean getStandardFlowEnabled();

    /**
     * Setter for <code>keycloak.client_template.implicit_flow_enabled</code>.
     */
    public IClientTemplate setImplicitFlowEnabled(Boolean value);

    /**
     * Getter for <code>keycloak.client_template.implicit_flow_enabled</code>.
     */
    public Boolean getImplicitFlowEnabled();

    /**
     * Setter for
     * <code>keycloak.client_template.direct_access_grants_enabled</code>.
     */
    public IClientTemplate setDirectAccessGrantsEnabled(Boolean value);

    /**
     * Getter for
     * <code>keycloak.client_template.direct_access_grants_enabled</code>.
     */
    public Boolean getDirectAccessGrantsEnabled();

    /**
     * Setter for
     * <code>keycloak.client_template.service_accounts_enabled</code>.
     */
    public IClientTemplate setServiceAccountsEnabled(Boolean value);

    /**
     * Getter for
     * <code>keycloak.client_template.service_accounts_enabled</code>.
     */
    public Boolean getServiceAccountsEnabled();

    /**
     * Setter for <code>keycloak.client_template.frontchannel_logout</code>.
     */
    public IClientTemplate setFrontchannelLogout(Boolean value);

    /**
     * Getter for <code>keycloak.client_template.frontchannel_logout</code>.
     */
    public Boolean getFrontchannelLogout();

    /**
     * Setter for <code>keycloak.client_template.bearer_only</code>.
     */
    public IClientTemplate setBearerOnly(Boolean value);

    /**
     * Getter for <code>keycloak.client_template.bearer_only</code>.
     */
    public Boolean getBearerOnly();

    /**
     * Setter for <code>keycloak.client_template.public_client</code>.
     */
    public IClientTemplate setPublicClient(Boolean value);

    /**
     * Getter for <code>keycloak.client_template.public_client</code>.
     */
    public Boolean getPublicClient();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IClientTemplate
     */
    public void from(IClientTemplate from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IClientTemplate
     */
    public <E extends IClientTemplate> E into(E into);

        @Override
        public default IClientTemplate fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setId,json::getString,"id","java.lang.String");
                setOrThrow(this::setName,json::getString,"name","java.lang.String");
                setOrThrow(this::setRealmId,json::getString,"realm_id","java.lang.String");
                setOrThrow(this::setDescription,json::getString,"description","java.lang.String");
                setOrThrow(this::setProtocol,json::getString,"protocol","java.lang.String");
                setOrThrow(this::setFullScopeAllowed,json::getBoolean,"full_scope_allowed","java.lang.Boolean");
                setOrThrow(this::setConsentRequired,json::getBoolean,"consent_required","java.lang.Boolean");
                setOrThrow(this::setStandardFlowEnabled,json::getBoolean,"standard_flow_enabled","java.lang.Boolean");
                setOrThrow(this::setImplicitFlowEnabled,json::getBoolean,"implicit_flow_enabled","java.lang.Boolean");
                setOrThrow(this::setDirectAccessGrantsEnabled,json::getBoolean,"direct_access_grants_enabled","java.lang.Boolean");
                setOrThrow(this::setServiceAccountsEnabled,json::getBoolean,"service_accounts_enabled","java.lang.Boolean");
                setOrThrow(this::setFrontchannelLogout,json::getBoolean,"frontchannel_logout","java.lang.Boolean");
                setOrThrow(this::setBearerOnly,json::getBoolean,"bearer_only","java.lang.Boolean");
                setOrThrow(this::setPublicClient,json::getBoolean,"public_client","java.lang.Boolean");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("id",getId());
                json.put("name",getName());
                json.put("realm_id",getRealmId());
                json.put("description",getDescription());
                json.put("protocol",getProtocol());
                json.put("full_scope_allowed",getFullScopeAllowed());
                json.put("consent_required",getConsentRequired());
                json.put("standard_flow_enabled",getStandardFlowEnabled());
                json.put("implicit_flow_enabled",getImplicitFlowEnabled());
                json.put("direct_access_grants_enabled",getDirectAccessGrantsEnabled());
                json.put("service_accounts_enabled",getServiceAccountsEnabled());
                json.put("frontchannel_logout",getFrontchannelLogout());
                json.put("bearer_only",getBearerOnly());
                json.put("public_client",getPublicClient());
                return json;
        }

}
