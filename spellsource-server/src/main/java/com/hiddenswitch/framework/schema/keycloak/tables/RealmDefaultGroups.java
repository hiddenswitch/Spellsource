/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables;


import com.hiddenswitch.framework.schema.keycloak.Indexes;
import com.hiddenswitch.framework.schema.keycloak.Keycloak;
import com.hiddenswitch.framework.schema.keycloak.Keys;
import com.hiddenswitch.framework.schema.keycloak.tables.records.RealmDefaultGroupsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RealmDefaultGroups extends TableImpl<RealmDefaultGroupsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>keycloak.realm_default_groups</code>
     */
    public static final RealmDefaultGroups REALM_DEFAULT_GROUPS = new RealmDefaultGroups();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RealmDefaultGroupsRecord> getRecordType() {
        return RealmDefaultGroupsRecord.class;
    }

    /**
     * The column <code>keycloak.realm_default_groups.realm_id</code>.
     */
    public final TableField<RealmDefaultGroupsRecord, String> REALM_ID = createField(DSL.name("realm_id"), SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>keycloak.realm_default_groups.group_id</code>.
     */
    public final TableField<RealmDefaultGroupsRecord, String> GROUP_ID = createField(DSL.name("group_id"), SQLDataType.VARCHAR(36).nullable(false), this, "");

    private RealmDefaultGroups(Name alias, Table<RealmDefaultGroupsRecord> aliased) {
        this(alias, aliased, null);
    }

    private RealmDefaultGroups(Name alias, Table<RealmDefaultGroupsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>keycloak.realm_default_groups</code> table
     * reference
     */
    public RealmDefaultGroups(String alias) {
        this(DSL.name(alias), REALM_DEFAULT_GROUPS);
    }

    /**
     * Create an aliased <code>keycloak.realm_default_groups</code> table
     * reference
     */
    public RealmDefaultGroups(Name alias) {
        this(alias, REALM_DEFAULT_GROUPS);
    }

    /**
     * Create a <code>keycloak.realm_default_groups</code> table reference
     */
    public RealmDefaultGroups() {
        this(DSL.name("realm_default_groups"), null);
    }

    public <O extends Record> RealmDefaultGroups(Table<O> child, ForeignKey<O, RealmDefaultGroupsRecord> key) {
        super(child, key, REALM_DEFAULT_GROUPS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Keycloak.KEYCLOAK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.IDX_REALM_DEF_GRP_REALM);
    }

    @Override
    public List<UniqueKey<RealmDefaultGroupsRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.CON_GROUP_ID_DEF_GROUPS);
    }

    @Override
    public List<ForeignKey<RealmDefaultGroupsRecord, ?>> getReferences() {
        return Arrays.asList(Keys.REALM_DEFAULT_GROUPS__FK_DEF_GROUPS_REALM, Keys.REALM_DEFAULT_GROUPS__FK_DEF_GROUPS_GROUP);
    }

    private transient Realm _realm;
    private transient KeycloakGroup _keycloakGroup;

    /**
     * Get the implicit join path to the <code>keycloak.realm</code> table.
     */
    public Realm realm() {
        if (_realm == null)
            _realm = new Realm(this, Keys.REALM_DEFAULT_GROUPS__FK_DEF_GROUPS_REALM);

        return _realm;
    }

    /**
     * Get the implicit join path to the <code>keycloak.keycloak_group</code>
     * table.
     */
    public KeycloakGroup keycloakGroup() {
        if (_keycloakGroup == null)
            _keycloakGroup = new KeycloakGroup(this, Keys.REALM_DEFAULT_GROUPS__FK_DEF_GROUPS_GROUP);

        return _keycloakGroup;
    }

    @Override
    public RealmDefaultGroups as(String alias) {
        return new RealmDefaultGroups(DSL.name(alias), this);
    }

    @Override
    public RealmDefaultGroups as(Name alias) {
        return new RealmDefaultGroups(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RealmDefaultGroups rename(String name) {
        return new RealmDefaultGroups(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RealmDefaultGroups rename(Name name) {
        return new RealmDefaultGroups(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
