/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.pojos;


import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IBrokerLink;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BrokerLink implements VertxPojo, IBrokerLink {

    private static final long serialVersionUID = 1L;

    private String identityProvider;
    private String storageProviderId;
    private String realmId;
    private String brokerUserId;
    private String brokerUsername;
    private String token;
    private String userId;

    public BrokerLink() {}

    public BrokerLink(IBrokerLink value) {
        this.identityProvider = value.getIdentityProvider();
        this.storageProviderId = value.getStorageProviderId();
        this.realmId = value.getRealmId();
        this.brokerUserId = value.getBrokerUserId();
        this.brokerUsername = value.getBrokerUsername();
        this.token = value.getToken();
        this.userId = value.getUserId();
    }

    public BrokerLink(
        String identityProvider,
        String storageProviderId,
        String realmId,
        String brokerUserId,
        String brokerUsername,
        String token,
        String userId
    ) {
        this.identityProvider = identityProvider;
        this.storageProviderId = storageProviderId;
        this.realmId = realmId;
        this.brokerUserId = brokerUserId;
        this.brokerUsername = brokerUsername;
        this.token = token;
        this.userId = userId;
    }

        public BrokerLink(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>keycloak.broker_link.identity_provider</code>.
     */
    @Override
    public String getIdentityProvider() {
        return this.identityProvider;
    }

    /**
     * Setter for <code>keycloak.broker_link.identity_provider</code>.
     */
    @Override
    public BrokerLink setIdentityProvider(String identityProvider) {
        this.identityProvider = identityProvider;
        return this;
    }

    /**
     * Getter for <code>keycloak.broker_link.storage_provider_id</code>.
     */
    @Override
    public String getStorageProviderId() {
        return this.storageProviderId;
    }

    /**
     * Setter for <code>keycloak.broker_link.storage_provider_id</code>.
     */
    @Override
    public BrokerLink setStorageProviderId(String storageProviderId) {
        this.storageProviderId = storageProviderId;
        return this;
    }

    /**
     * Getter for <code>keycloak.broker_link.realm_id</code>.
     */
    @Override
    public String getRealmId() {
        return this.realmId;
    }

    /**
     * Setter for <code>keycloak.broker_link.realm_id</code>.
     */
    @Override
    public BrokerLink setRealmId(String realmId) {
        this.realmId = realmId;
        return this;
    }

    /**
     * Getter for <code>keycloak.broker_link.broker_user_id</code>.
     */
    @Override
    public String getBrokerUserId() {
        return this.brokerUserId;
    }

    /**
     * Setter for <code>keycloak.broker_link.broker_user_id</code>.
     */
    @Override
    public BrokerLink setBrokerUserId(String brokerUserId) {
        this.brokerUserId = brokerUserId;
        return this;
    }

    /**
     * Getter for <code>keycloak.broker_link.broker_username</code>.
     */
    @Override
    public String getBrokerUsername() {
        return this.brokerUsername;
    }

    /**
     * Setter for <code>keycloak.broker_link.broker_username</code>.
     */
    @Override
    public BrokerLink setBrokerUsername(String brokerUsername) {
        this.brokerUsername = brokerUsername;
        return this;
    }

    /**
     * Getter for <code>keycloak.broker_link.token</code>.
     */
    @Override
    public String getToken() {
        return this.token;
    }

    /**
     * Setter for <code>keycloak.broker_link.token</code>.
     */
    @Override
    public BrokerLink setToken(String token) {
        this.token = token;
        return this;
    }

    /**
     * Getter for <code>keycloak.broker_link.user_id</code>.
     */
    @Override
    public String getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>keycloak.broker_link.user_id</code>.
     */
    @Override
    public BrokerLink setUserId(String userId) {
        this.userId = userId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final BrokerLink other = (BrokerLink) obj;
        if (this.identityProvider == null) {
            if (other.identityProvider != null)
                return false;
        }
        else if (!this.identityProvider.equals(other.identityProvider))
            return false;
        if (this.storageProviderId == null) {
            if (other.storageProviderId != null)
                return false;
        }
        else if (!this.storageProviderId.equals(other.storageProviderId))
            return false;
        if (this.realmId == null) {
            if (other.realmId != null)
                return false;
        }
        else if (!this.realmId.equals(other.realmId))
            return false;
        if (this.brokerUserId == null) {
            if (other.brokerUserId != null)
                return false;
        }
        else if (!this.brokerUserId.equals(other.brokerUserId))
            return false;
        if (this.brokerUsername == null) {
            if (other.brokerUsername != null)
                return false;
        }
        else if (!this.brokerUsername.equals(other.brokerUsername))
            return false;
        if (this.token == null) {
            if (other.token != null)
                return false;
        }
        else if (!this.token.equals(other.token))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.identityProvider == null) ? 0 : this.identityProvider.hashCode());
        result = prime * result + ((this.storageProviderId == null) ? 0 : this.storageProviderId.hashCode());
        result = prime * result + ((this.realmId == null) ? 0 : this.realmId.hashCode());
        result = prime * result + ((this.brokerUserId == null) ? 0 : this.brokerUserId.hashCode());
        result = prime * result + ((this.brokerUsername == null) ? 0 : this.brokerUsername.hashCode());
        result = prime * result + ((this.token == null) ? 0 : this.token.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("BrokerLink (");

        sb.append(identityProvider);
        sb.append(", ").append(storageProviderId);
        sb.append(", ").append(realmId);
        sb.append(", ").append(brokerUserId);
        sb.append(", ").append(brokerUsername);
        sb.append(", ").append(token);
        sb.append(", ").append(userId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IBrokerLink from) {
        setIdentityProvider(from.getIdentityProvider());
        setStorageProviderId(from.getStorageProviderId());
        setRealmId(from.getRealmId());
        setBrokerUserId(from.getBrokerUserId());
        setBrokerUsername(from.getBrokerUsername());
        setToken(from.getToken());
        setUserId(from.getUserId());
    }

    @Override
    public <E extends IBrokerLink> E into(E into) {
        into.from(this);
        return into;
    }
}
