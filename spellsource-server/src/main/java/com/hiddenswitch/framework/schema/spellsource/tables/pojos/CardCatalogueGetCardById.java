/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.pojos;


import com.hiddenswitch.framework.schema.spellsource.tables.interfaces.ICardCatalogueGetCardById;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.vertx.core.json.JsonObject;

import java.time.OffsetDateTime;

import org.jooq.XML;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardCatalogueGetCardById implements VertxPojo, ICardCatalogueGetCardById {

    private static final long serialVersionUID = 1L;

    private String id;
    private String createdBy;
    private String uri;
    private XML blocklyWorkspace;
    private JsonObject cardScript;
    private OffsetDateTime createdAt;
    private OffsetDateTime lastModified;
    private Boolean isArchived;
    private Boolean isPrivate;

    public CardCatalogueGetCardById() {}

    public CardCatalogueGetCardById(ICardCatalogueGetCardById value) {
        this.id = value.getId();
        this.createdBy = value.getCreatedBy();
        this.uri = value.getUri();
        this.blocklyWorkspace = value.getBlocklyWorkspace();
        this.cardScript = value.getCardScript();
        this.createdAt = value.getCreatedAt();
        this.lastModified = value.getLastModified();
        this.isArchived = value.getIsArchived();
        this.isPrivate = value.getIsPrivate();
    }

    public CardCatalogueGetCardById(
        String id,
        String createdBy,
        String uri,
        XML blocklyWorkspace,
        JsonObject cardScript,
        OffsetDateTime createdAt,
        OffsetDateTime lastModified,
        Boolean isArchived,
        Boolean isPrivate
    ) {
        this.id = id;
        this.createdBy = createdBy;
        this.uri = uri;
        this.blocklyWorkspace = blocklyWorkspace;
        this.cardScript = cardScript;
        this.createdAt = createdAt;
        this.lastModified = lastModified;
        this.isArchived = isArchived;
        this.isPrivate = isPrivate;
    }

        public CardCatalogueGetCardById(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>spellsource.card_catalogue_get_card_by_id.id</code>.
     */
    @Override
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>spellsource.card_catalogue_get_card_by_id.id</code>.
     */
    @Override
    public CardCatalogueGetCardById setId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for
     * <code>spellsource.card_catalogue_get_card_by_id.created_by</code>.
     */
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for
     * <code>spellsource.card_catalogue_get_card_by_id.created_by</code>.
     */
    @Override
    public CardCatalogueGetCardById setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>spellsource.card_catalogue_get_card_by_id.uri</code>.
     */
    @Override
    public String getUri() {
        return this.uri;
    }

    /**
     * Setter for <code>spellsource.card_catalogue_get_card_by_id.uri</code>.
     */
    @Override
    public CardCatalogueGetCardById setUri(String uri) {
        this.uri = uri;
        return this;
    }

    /**
     * Getter for
     * <code>spellsource.card_catalogue_get_card_by_id.blockly_workspace</code>.
     */
    @Override
    public XML getBlocklyWorkspace() {
        return this.blocklyWorkspace;
    }

    /**
     * Setter for
     * <code>spellsource.card_catalogue_get_card_by_id.blockly_workspace</code>.
     */
    @Override
    public CardCatalogueGetCardById setBlocklyWorkspace(XML blocklyWorkspace) {
        this.blocklyWorkspace = blocklyWorkspace;
        return this;
    }

    /**
     * Getter for
     * <code>spellsource.card_catalogue_get_card_by_id.card_script</code>.
     */
    @Override
    public JsonObject getCardScript() {
        return this.cardScript;
    }

    /**
     * Setter for
     * <code>spellsource.card_catalogue_get_card_by_id.card_script</code>.
     */
    @Override
    public CardCatalogueGetCardById setCardScript(JsonObject cardScript) {
        this.cardScript = cardScript;
        return this;
    }

    /**
     * Getter for
     * <code>spellsource.card_catalogue_get_card_by_id.created_at</code>.
     */
    @Override
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for
     * <code>spellsource.card_catalogue_get_card_by_id.created_at</code>.
     */
    @Override
    public CardCatalogueGetCardById setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for
     * <code>spellsource.card_catalogue_get_card_by_id.last_modified</code>.
     */
    @Override
    public OffsetDateTime getLastModified() {
        return this.lastModified;
    }

    /**
     * Setter for
     * <code>spellsource.card_catalogue_get_card_by_id.last_modified</code>.
     */
    @Override
    public CardCatalogueGetCardById setLastModified(OffsetDateTime lastModified) {
        this.lastModified = lastModified;
        return this;
    }

    /**
     * Getter for
     * <code>spellsource.card_catalogue_get_card_by_id.is_archived</code>.
     */
    @Override
    public Boolean getIsArchived() {
        return this.isArchived;
    }

    /**
     * Setter for
     * <code>spellsource.card_catalogue_get_card_by_id.is_archived</code>.
     */
    @Override
    public CardCatalogueGetCardById setIsArchived(Boolean isArchived) {
        this.isArchived = isArchived;
        return this;
    }

    /**
     * Getter for
     * <code>spellsource.card_catalogue_get_card_by_id.is_private</code>.
     */
    @Override
    public Boolean getIsPrivate() {
        return this.isPrivate;
    }

    /**
     * Setter for
     * <code>spellsource.card_catalogue_get_card_by_id.is_private</code>.
     */
    @Override
    public CardCatalogueGetCardById setIsPrivate(Boolean isPrivate) {
        this.isPrivate = isPrivate;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CardCatalogueGetCardById other = (CardCatalogueGetCardById) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.uri == null) {
            if (other.uri != null)
                return false;
        }
        else if (!this.uri.equals(other.uri))
            return false;
        if (this.blocklyWorkspace == null) {
            if (other.blocklyWorkspace != null)
                return false;
        }
        else if (!this.blocklyWorkspace.equals(other.blocklyWorkspace))
            return false;
        if (this.cardScript == null) {
            if (other.cardScript != null)
                return false;
        }
        else if (!this.cardScript.equals(other.cardScript))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.lastModified == null) {
            if (other.lastModified != null)
                return false;
        }
        else if (!this.lastModified.equals(other.lastModified))
            return false;
        if (this.isArchived == null) {
            if (other.isArchived != null)
                return false;
        }
        else if (!this.isArchived.equals(other.isArchived))
            return false;
        if (this.isPrivate == null) {
            if (other.isPrivate != null)
                return false;
        }
        else if (!this.isPrivate.equals(other.isPrivate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.uri == null) ? 0 : this.uri.hashCode());
        result = prime * result + ((this.blocklyWorkspace == null) ? 0 : this.blocklyWorkspace.hashCode());
        result = prime * result + ((this.cardScript == null) ? 0 : this.cardScript.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.lastModified == null) ? 0 : this.lastModified.hashCode());
        result = prime * result + ((this.isArchived == null) ? 0 : this.isArchived.hashCode());
        result = prime * result + ((this.isPrivate == null) ? 0 : this.isPrivate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CardCatalogueGetCardById (");

        sb.append(id);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(uri);
        sb.append(", ").append(blocklyWorkspace);
        sb.append(", ").append(cardScript);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(lastModified);
        sb.append(", ").append(isArchived);
        sb.append(", ").append(isPrivate);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ICardCatalogueGetCardById from) {
        setId(from.getId());
        setCreatedBy(from.getCreatedBy());
        setUri(from.getUri());
        setBlocklyWorkspace(from.getBlocklyWorkspace());
        setCardScript(from.getCardScript());
        setCreatedAt(from.getCreatedAt());
        setLastModified(from.getLastModified());
        setIsArchived(from.getIsArchived());
        setIsPrivate(from.getIsPrivate());
    }

    @Override
    public <E extends ICardCatalogueGetCardById> E into(E into) {
        into.from(this);
        return into;
    }
}
