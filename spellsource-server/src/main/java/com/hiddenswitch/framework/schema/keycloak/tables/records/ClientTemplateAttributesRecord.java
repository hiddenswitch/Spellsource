/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables.records;


import com.hiddenswitch.framework.schema.keycloak.tables.ClientTemplateAttributes;
import com.hiddenswitch.framework.schema.keycloak.tables.interfaces.IClientTemplateAttributes;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientTemplateAttributesRecord extends UpdatableRecordImpl<ClientTemplateAttributesRecord> implements VertxPojo, Record3<String, String, String>, IClientTemplateAttributes {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>keycloak.client_template_attributes.template_id</code>.
     */
    @Override
    public ClientTemplateAttributesRecord setTemplateId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.client_template_attributes.template_id</code>.
     */
    @Override
    public String getTemplateId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>keycloak.client_template_attributes.value</code>.
     */
    @Override
    public ClientTemplateAttributesRecord setValue(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.client_template_attributes.value</code>.
     */
    @Override
    public String getValue() {
        return (String) get(1);
    }

    /**
     * Setter for <code>keycloak.client_template_attributes.name</code>.
     */
    @Override
    public ClientTemplateAttributesRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>keycloak.client_template_attributes.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ClientTemplateAttributes.CLIENT_TEMPLATE_ATTRIBUTES.TEMPLATE_ID;
    }

    @Override
    public Field<String> field2() {
        return ClientTemplateAttributes.CLIENT_TEMPLATE_ATTRIBUTES.VALUE;
    }

    @Override
    public Field<String> field3() {
        return ClientTemplateAttributes.CLIENT_TEMPLATE_ATTRIBUTES.NAME;
    }

    @Override
    public String component1() {
        return getTemplateId();
    }

    @Override
    public String component2() {
        return getValue();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String value1() {
        return getTemplateId();
    }

    @Override
    public String value2() {
        return getValue();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public ClientTemplateAttributesRecord value1(String value) {
        setTemplateId(value);
        return this;
    }

    @Override
    public ClientTemplateAttributesRecord value2(String value) {
        setValue(value);
        return this;
    }

    @Override
    public ClientTemplateAttributesRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ClientTemplateAttributesRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IClientTemplateAttributes from) {
        setTemplateId(from.getTemplateId());
        setValue(from.getValue());
        setName(from.getName());
    }

    @Override
    public <E extends IClientTemplateAttributes> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientTemplateAttributesRecord
     */
    public ClientTemplateAttributesRecord() {
        super(ClientTemplateAttributes.CLIENT_TEMPLATE_ATTRIBUTES);
    }

    /**
     * Create a detached, initialised ClientTemplateAttributesRecord
     */
    public ClientTemplateAttributesRecord(String templateId, String value, String name) {
        super(ClientTemplateAttributes.CLIENT_TEMPLATE_ATTRIBUTES);

        setTemplateId(templateId);
        setValue(value);
        setName(name);
    }

    /**
     * Create a detached, initialised ClientTemplateAttributesRecord
     */
    public ClientTemplateAttributesRecord(com.hiddenswitch.framework.schema.keycloak.tables.pojos.ClientTemplateAttributes value) {
        super(ClientTemplateAttributes.CLIENT_TEMPLATE_ATTRIBUTES);

        if (value != null) {
            setTemplateId(value.getTemplateId());
            setValue(value.getValue());
            setName(value.getName());
        }
    }

        public ClientTemplateAttributesRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
