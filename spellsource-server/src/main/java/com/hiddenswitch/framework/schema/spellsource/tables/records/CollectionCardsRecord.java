/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.spellsource.tables.records;


import com.hiddenswitch.framework.schema.spellsource.tables.CollectionCards;
import com.hiddenswitch.framework.schema.spellsource.tables.interfaces.ICollectionCards;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.vertx.core.json.JsonObject;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.XML;
import org.jooq.impl.TableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CollectionCardsRecord extends TableRecordImpl<CollectionCardsRecord> implements VertxPojo, Record12<String, String, JsonObject, XML, String, String, String, Integer, Boolean, String, OffsetDateTime, OffsetDateTime>, ICollectionCards {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>spellsource.collection_cards.id</code>.
     */
    @Override
    public CollectionCardsRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.collection_cards.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>spellsource.collection_cards.created_by</code>.
     */
    @Override
    public CollectionCardsRecord setCreatedBy(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.collection_cards.created_by</code>.
     */
    @Override
    public String getCreatedBy() {
        return (String) get(1);
    }

    /**
     * Setter for <code>spellsource.collection_cards.card_script</code>.
     */
    @Override
    public CollectionCardsRecord setCardScript(JsonObject value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.collection_cards.card_script</code>.
     */
    @Override
    public JsonObject getCardScript() {
        return (JsonObject) get(2);
    }

    /**
     * Setter for <code>spellsource.collection_cards.blockly_workspace</code>.
     */
    @Override
    public CollectionCardsRecord setBlocklyWorkspace(XML value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.collection_cards.blockly_workspace</code>.
     */
    @Override
    public XML getBlocklyWorkspace() {
        return (XML) get(3);
    }

    /**
     * Setter for <code>spellsource.collection_cards.name</code>.
     */
    @Override
    public CollectionCardsRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.collection_cards.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>spellsource.collection_cards.type</code>.
     */
    @Override
    public CollectionCardsRecord setType(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.collection_cards.type</code>.
     */
    @Override
    public String getType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>spellsource.collection_cards.class</code>.
     */
    @Override
    public CollectionCardsRecord setClass_(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.collection_cards.class</code>.
     */
    @Override
    public String getClass_() {
        return (String) get(6);
    }

    /**
     * Setter for <code>spellsource.collection_cards.cost</code>.
     */
    @Override
    public CollectionCardsRecord setCost(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.collection_cards.cost</code>.
     */
    @Override
    public Integer getCost() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>spellsource.collection_cards.collectible</code>.
     */
    @Override
    public CollectionCardsRecord setCollectible(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.collection_cards.collectible</code>.
     */
    @Override
    public Boolean getCollectible() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>spellsource.collection_cards.search_message</code>.
     */
    @Override
    public CollectionCardsRecord setSearchMessage(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.collection_cards.search_message</code>.
     */
    @Override
    public String getSearchMessage() {
        return (String) get(9);
    }

    /**
     * Setter for <code>spellsource.collection_cards.last_modified</code>.
     */
    @Override
    public CollectionCardsRecord setLastModified(OffsetDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.collection_cards.last_modified</code>.
     */
    @Override
    public OffsetDateTime getLastModified() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for <code>spellsource.collection_cards.created_at</code>.
     */
    @Override
    public CollectionCardsRecord setCreatedAt(OffsetDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>spellsource.collection_cards.created_at</code>.
     */
    @Override
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, String, JsonObject, XML, String, String, String, Integer, Boolean, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<String, String, JsonObject, XML, String, String, String, Integer, Boolean, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CollectionCards.COLLECTION_CARDS.ID;
    }

    @Override
    public Field<String> field2() {
        return CollectionCards.COLLECTION_CARDS.CREATED_BY;
    }

    @Override
    public Field<JsonObject> field3() {
        return CollectionCards.COLLECTION_CARDS.CARD_SCRIPT;
    }

    @Override
    public Field<XML> field4() {
        return CollectionCards.COLLECTION_CARDS.BLOCKLY_WORKSPACE;
    }

    @Override
    public Field<String> field5() {
        return CollectionCards.COLLECTION_CARDS.NAME;
    }

    @Override
    public Field<String> field6() {
        return CollectionCards.COLLECTION_CARDS.TYPE;
    }

    @Override
    public Field<String> field7() {
        return CollectionCards.COLLECTION_CARDS.CLASS;
    }

    @Override
    public Field<Integer> field8() {
        return CollectionCards.COLLECTION_CARDS.COST;
    }

    @Override
    public Field<Boolean> field9() {
        return CollectionCards.COLLECTION_CARDS.COLLECTIBLE;
    }

    @Override
    public Field<String> field10() {
        return CollectionCards.COLLECTION_CARDS.SEARCH_MESSAGE;
    }

    @Override
    public Field<OffsetDateTime> field11() {
        return CollectionCards.COLLECTION_CARDS.LAST_MODIFIED;
    }

    @Override
    public Field<OffsetDateTime> field12() {
        return CollectionCards.COLLECTION_CARDS.CREATED_AT;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCreatedBy();
    }

    @Override
    public JsonObject component3() {
        return getCardScript();
    }

    @Override
    public XML component4() {
        return getBlocklyWorkspace();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public String component6() {
        return getType();
    }

    @Override
    public String component7() {
        return getClass_();
    }

    @Override
    public Integer component8() {
        return getCost();
    }

    @Override
    public Boolean component9() {
        return getCollectible();
    }

    @Override
    public String component10() {
        return getSearchMessage();
    }

    @Override
    public OffsetDateTime component11() {
        return getLastModified();
    }

    @Override
    public OffsetDateTime component12() {
        return getCreatedAt();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCreatedBy();
    }

    @Override
    public JsonObject value3() {
        return getCardScript();
    }

    @Override
    public XML value4() {
        return getBlocklyWorkspace();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public String value6() {
        return getType();
    }

    @Override
    public String value7() {
        return getClass_();
    }

    @Override
    public Integer value8() {
        return getCost();
    }

    @Override
    public Boolean value9() {
        return getCollectible();
    }

    @Override
    public String value10() {
        return getSearchMessage();
    }

    @Override
    public OffsetDateTime value11() {
        return getLastModified();
    }

    @Override
    public OffsetDateTime value12() {
        return getCreatedAt();
    }

    @Override
    public CollectionCardsRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public CollectionCardsRecord value2(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public CollectionCardsRecord value3(JsonObject value) {
        setCardScript(value);
        return this;
    }

    @Override
    public CollectionCardsRecord value4(XML value) {
        setBlocklyWorkspace(value);
        return this;
    }

    @Override
    public CollectionCardsRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public CollectionCardsRecord value6(String value) {
        setType(value);
        return this;
    }

    @Override
    public CollectionCardsRecord value7(String value) {
        setClass_(value);
        return this;
    }

    @Override
    public CollectionCardsRecord value8(Integer value) {
        setCost(value);
        return this;
    }

    @Override
    public CollectionCardsRecord value9(Boolean value) {
        setCollectible(value);
        return this;
    }

    @Override
    public CollectionCardsRecord value10(String value) {
        setSearchMessage(value);
        return this;
    }

    @Override
    public CollectionCardsRecord value11(OffsetDateTime value) {
        setLastModified(value);
        return this;
    }

    @Override
    public CollectionCardsRecord value12(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public CollectionCardsRecord values(String value1, String value2, JsonObject value3, XML value4, String value5, String value6, String value7, Integer value8, Boolean value9, String value10, OffsetDateTime value11, OffsetDateTime value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ICollectionCards from) {
        setId(from.getId());
        setCreatedBy(from.getCreatedBy());
        setCardScript(from.getCardScript());
        setBlocklyWorkspace(from.getBlocklyWorkspace());
        setName(from.getName());
        setType(from.getType());
        setClass_(from.getClass_());
        setCost(from.getCost());
        setCollectible(from.getCollectible());
        setSearchMessage(from.getSearchMessage());
        setLastModified(from.getLastModified());
        setCreatedAt(from.getCreatedAt());
    }

    @Override
    public <E extends ICollectionCards> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CollectionCardsRecord
     */
    public CollectionCardsRecord() {
        super(CollectionCards.COLLECTION_CARDS);
    }

    /**
     * Create a detached, initialised CollectionCardsRecord
     */
    public CollectionCardsRecord(String id, String createdBy, JsonObject cardScript, XML blocklyWorkspace, String name, String type, String class_, Integer cost, Boolean collectible, String searchMessage, OffsetDateTime lastModified, OffsetDateTime createdAt) {
        super(CollectionCards.COLLECTION_CARDS);

        setId(id);
        setCreatedBy(createdBy);
        setCardScript(cardScript);
        setBlocklyWorkspace(blocklyWorkspace);
        setName(name);
        setType(type);
        setClass_(class_);
        setCost(cost);
        setCollectible(collectible);
        setSearchMessage(searchMessage);
        setLastModified(lastModified);
        setCreatedAt(createdAt);
    }

    /**
     * Create a detached, initialised CollectionCardsRecord
     */
    public CollectionCardsRecord(com.hiddenswitch.framework.schema.spellsource.tables.pojos.CollectionCards value) {
        super(CollectionCards.COLLECTION_CARDS);

        if (value != null) {
            setId(value.getId());
            setCreatedBy(value.getCreatedBy());
            setCardScript(value.getCardScript());
            setBlocklyWorkspace(value.getBlocklyWorkspace());
            setName(value.getName());
            setType(value.getType());
            setClass_(value.getClass_());
            setCost(value.getCost());
            setCollectible(value.getCollectible());
            setSearchMessage(value.getSearchMessage());
            setLastModified(value.getLastModified());
            setCreatedAt(value.getCreatedAt());
        }
    }

        public CollectionCardsRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
