/*
 * This file is generated by jOOQ.
 */
package com.hiddenswitch.framework.schema.keycloak.tables;


import com.hiddenswitch.framework.schema.keycloak.Indexes;
import com.hiddenswitch.framework.schema.keycloak.Keycloak;
import com.hiddenswitch.framework.schema.keycloak.Keys;
import com.hiddenswitch.framework.schema.keycloak.tables.records.FedUserAttributeRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FedUserAttribute extends TableImpl<FedUserAttributeRecord> {

    private static final long serialVersionUID = -687986982;

    /**
     * The reference instance of <code>keycloak.fed_user_attribute</code>
     */
    public static final FedUserAttribute FED_USER_ATTRIBUTE = new FedUserAttribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FedUserAttributeRecord> getRecordType() {
        return FedUserAttributeRecord.class;
    }

    /**
     * The column <code>keycloak.fed_user_attribute.id</code>.
     */
    public final TableField<FedUserAttributeRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>keycloak.fed_user_attribute.name</code>.
     */
    public final TableField<FedUserAttributeRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>keycloak.fed_user_attribute.user_id</code>.
     */
    public final TableField<FedUserAttributeRecord, String> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>keycloak.fed_user_attribute.realm_id</code>.
     */
    public final TableField<FedUserAttributeRecord, String> REALM_ID = createField(DSL.name("realm_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>keycloak.fed_user_attribute.storage_provider_id</code>.
     */
    public final TableField<FedUserAttributeRecord, String> STORAGE_PROVIDER_ID = createField(DSL.name("storage_provider_id"), org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>keycloak.fed_user_attribute.value</code>.
     */
    public final TableField<FedUserAttributeRecord, String> VALUE = createField(DSL.name("value"), org.jooq.impl.SQLDataType.VARCHAR(2024), this, "");

    /**
     * Create a <code>keycloak.fed_user_attribute</code> table reference
     */
    public FedUserAttribute() {
        this(DSL.name("fed_user_attribute"), null);
    }

    /**
     * Create an aliased <code>keycloak.fed_user_attribute</code> table reference
     */
    public FedUserAttribute(String alias) {
        this(DSL.name(alias), FED_USER_ATTRIBUTE);
    }

    /**
     * Create an aliased <code>keycloak.fed_user_attribute</code> table reference
     */
    public FedUserAttribute(Name alias) {
        this(alias, FED_USER_ATTRIBUTE);
    }

    private FedUserAttribute(Name alias, Table<FedUserAttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private FedUserAttribute(Name alias, Table<FedUserAttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> FedUserAttribute(Table<O> child, ForeignKey<O, FedUserAttributeRecord> key) {
        super(child, key, FED_USER_ATTRIBUTE);
    }

    @Override
    public Schema getSchema() {
        return Keycloak.KEYCLOAK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_FU_ATTRIBUTE);
    }

    @Override
    public UniqueKey<FedUserAttributeRecord> getPrimaryKey() {
        return Keys.CONSTR_FED_USER_ATTR_PK;
    }

    @Override
    public List<UniqueKey<FedUserAttributeRecord>> getKeys() {
        return Arrays.<UniqueKey<FedUserAttributeRecord>>asList(Keys.CONSTR_FED_USER_ATTR_PK);
    }

    @Override
    public FedUserAttribute as(String alias) {
        return new FedUserAttribute(DSL.name(alias), this);
    }

    @Override
    public FedUserAttribute as(Name alias) {
        return new FedUserAttribute(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FedUserAttribute rename(String name) {
        return new FedUserAttribute(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FedUserAttribute rename(Name name) {
        return new FedUserAttribute(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
