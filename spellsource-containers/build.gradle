plugins {
    id 'java-library'
    id 'idea'
    id 'com.bmuschko.docker-remote-api' version '7.3.0'
}

import com.bmuschko.gradle.docker.tasks.image.*

dependencies {
    api "org.testcontainers:testcontainers:$testcontainersVersion"
    api "org.testcontainers:toxiproxy:$testcontainersVersion"
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonDatabindVersion"
}

task createPostgresImage(type: DockerBuildImage) {
    dependsOn += [tasks.processResources]
    inputDir.set(new File("$project.projectDir/src/main/resources/docker/postgres"))
    quiet.set(true)
    images.set(["doctorpangloss/postgres:latest"])
}

task createPythonImage(type: DockerBuildImage) {
    dependsOn += [tasks.processResources]
    inputDir.set(new File("$project.projectDir/src/main/resources/docker/pythonjava/"))
    quiet.set(true)
    images.set(["doctorpangloss/spellsource-pythonjava:latest"])
}

task createKeycloakImage(type: DockerBuildImage) {
    dependsOn += [tasks.processResources]
    inputDir.set(new File("$project.projectDir/src/main/resources/docker/keycloak"))
    dockerFile.set(new File("$project.projectDir/src/main/resources/docker/keycloak/Dockerfile"))
    quiet.set(true)
    images.set(["doctorpangloss/keycloak-clustered:latest"])
}

task pushKeycloakClusteredImage(type: DockerPushImage) {
    dependsOn += [createKeycloakImage]
    images.set(createKeycloakImage.images.get())
}

compileJava {
    // you won't really be able to use the postgres image unless you build it
    dependsOn += [tasks.createPostgresImage, tasks.createKeycloakImage, tasks.createKeycloakImage]
    options.warnings = false
}

java {
    sourceCompatibility(JavaVersion.VERSION_1_8)
}