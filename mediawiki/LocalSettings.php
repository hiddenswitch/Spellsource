<?php
# This file was automatically generated by the MediaWiki 1.32.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if (!defined('MEDIAWIKI')) {
    exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = getenv("MEDIAWIKI_SITE_NAME");

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = getenv("MEDIAWIKI_URL");

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo = getenv("MEDIAWIKI_LOGO_URL");

## UPO means: this is also a user preference option

$wgSMTP = array(
    'host' => getenv("SMTP_HOST"), // could also be an IP address. Where the SMTP server is located
    'IDHost' => getenv("SMTP_DOMAIN"),      // Generally this will be the domain name of your website (aka mywiki.org)
    'port' => 25,                 // Port to use when connecting to the SMTP server
    'auth' => true,               // Should we use SMTP authentication (true or false)
    'username' => getenv("SMTP_USERNAME"),     // Username to use for SMTP authentication (if being used)
    'password' => getenv("SMTP_PASSWORD")       // Password to use for SMTP authentication (if being used)
);

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = getenv("SMTP_USERNAME");
$wgPasswordSender = getenv("SMTP_USERNAME");

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = getenv("MEDIAWIKI_DB_TYPE");
$wgDBserver = getenv("MEDIAWIKI_DB_SERVER");
$wgDBname = getenv("MEDIAWIKI_DB_NAME");
$wgDBuser = getenv("MEDIAWIKI_DB_USER");
$wgDBpassword = getenv("MEDIAWIKI_DB_PASSWORD");

# MySQL specific settings
$wgDBprefix = getenv("MEDIAWIKI_DB_PREFIX");

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "C.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en";

$wgSecretKey = getenv("MEDIAWIKI_SECURITY_KEY");

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = getenv("MEDIAWIKI_UPGRADE_KEY");

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['user']['edit'] = true;

# Load MobileFrontend first!
wfLoadExtension('MobileFrontend');

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin('MinervaNeue');
wfLoadSkin('Vector');

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "vector";
$wgMFDefaultSkinClass = "SkinMinerva";

# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtensions('ExtensionName');
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension('AWS');
wfLoadExtension('BetaFeatures');
wfLoadExtension('ConfirmEdit');
wfLoadExtension('Gadgets');
wfLoadExtension('LocalisationUpdate');
wfLoadExtension('MultimediaViewer');
wfLoadExtension('OATHAuth');
wfLoadExtension('SpamBlacklist');
wfLoadExtension('TemplateData');
wfLoadExtension('VisualEditor');
wfLoadExtension('UploadWizard');
wfLoadExtension('UserMerge');
wfLoadExtension('Nuke');
//wfLoadExtension('SmiteSpam');
wfLoadExtensions([ 'ConfirmEdit', 'ConfirmEdit/ReCaptchaNoCaptcha' ]);

# Configuration for UserMerge
$wgGroupPermissions['sysop']['usermerge'] = true;

# Configuration for ReCaptcha
$wgCaptchaClass = 'ReCaptchaNoCaptcha';
$wgReCaptchaSiteKey = getenv("GOOGLE_RECAPTCHA_SITE_KEY");
$wgReCaptchaSecretKey = getenv("GOOGLE_RECAPTCHA_SECRET_KEY");
$wgReCaptchaSendRemoteIP = true;

# Configuration for AWS extension
$wgAWSRegion = getenv('MEDIAWIKI_AWS_REGION');
$wgAWSBucketName = getenv('MEDIAWIKI_AWS_BUCKET_ID');

$wgAWSCredentials = [
    'key' => getenv('AWS_ACCESS_KEY_ID'),
    'secret' => getenv('AWS_SECRET_ACCESS_KEY'),
    'token' => false
];
# Configuration for Mobile Frontend
$wgMFAutodetectMobileView = true;

# Configuration for VisualEditor
$wgDefaultUserOptions['visualeditor-enable'] = 1;
$wgHiddenPrefs[] = 'visualeditor-enable';
$wgDefaultUserOptions['visualeditor-enable-experimental'] = 1;
$wgVirtualRestConfig['modules']['parsoid']['forwardCookies'] = true;
$wgVirtualRestConfig['modules']['parsoid'] = array(
    'url' => getenv("MEDIAWIKI_PARSOID_URL"),
    // Parsoid "domain", see below (optional)
    'domain' => getenv("MEDIAWIKI_PARSOID_DOMAIN"),
);
