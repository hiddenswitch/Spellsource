import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'base'

def isWindows = Os.isFamily(Os.FAMILY_WINDOWS)
def isMacOs = Os.isFamily(Os.FAMILY_MAC)
def spellsourceDepTask = ':spellsource-web-cardeditor-support:shadowJar'
def nodeBinary = isWindows ? "C:\\Program Files\\nodejs\\node.cmd" : (isMacOs ? "/opt/homebrew/bin/node" : "node")
def npmBinary = isWindows ? "C:\\Program Files\\nodejs\\npm.cmd" : (isMacOs ? "/opt/homebrew/bin/npm" : "npm")
def graalNpmPrefix = 'node_modules_graal'

evaluationDependsOn(":spellsource-server")

clean {
    delete '.cache'
}

tasks.register('npmInstall') {
    inputs.file('package.json')
    inputs.file('package-lock.json')
    outputs.dir('./node_modules')

    doLast {
        exec {
            commandLine npmBinary, 'install', '--legacy-peer-deps', '-D', '--frozen-lockfile'
        }
    }
}

tasks.register('npmInstallGraal') {
    // todo: check that we are executing as graal
    inputs.file('package.json')
    inputs.file('package-lock.json')
    outputs.dir(graalNpmPrefix)

    def javaHome = System.properties['java.home']
    doLast {
        exec {
            commandLine npmBinary, '--prefix', graalNpmPrefix, 'install', '--legacy-peer-deps', "--nodedir=$javaHome/languages/js", '--build-from-source'
        }
    }
}

tasks.register('testWithJava') {
    dependsOn += [spellsourceDepTask, npmInstallGraal]
    doLast {
        exec {
            commandLine nodeBinary, '--prefix', graalNpmPrefix, '--polyglot', '--jvm', './node_modules/jest/bin/jest.js', '--colors', '--verbose'
        }
    }
}

tasks.register('copyGameJavadoc', Copy) {
    description("Copies the game module's javadoc into the public directory of the website")
    dependsOn ':spellsource-game:javadoc'
    from tasks.getByPath(':spellsource-game:javadoc').outputs
    into './public/javadoc'
}

tasks.register('copyNetJavadoc', Copy) {
    description("Copies the net module's javadoc into the public directory of the website")
    dependsOn ':spellsource-server:javadoc'
    from tasks.getByPath(':spellsource-server:javadoc').outputs
    into './public/netjavadoc'
}

tasks.register('distWWW', Exec) {
    description("Builds and deploys the website")
    dependsOn += [gatsbyBuild, copyGameJavadoc, copyNetJavadoc]
    def commands = ['./bin/deploy.sh']
    if (isWindows) {
        commands = ["$project.rootProject.projectDir/bin/bash.exe"] + commands
    }

    commandLine commands
    doFirst {
        if (isWindows && !file('C:\\Program Files\\Amazon\\AWSCLIV2\\aws.exe').exists()) {
            logger.error("Install the AWS CLI from https://awscli.amazonaws.com/AWSCLIV2.msi")
        }
    }
}