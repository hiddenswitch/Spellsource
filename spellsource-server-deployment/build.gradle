import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'base'

def isWindows = Os.isFamily(Os.FAMILY_WINDOWS)
def sourceDir = "$project.projectDir.absolutePath/src/main/helm"
def kubectlBinary = isWindows ? "$project.rootProject.projectDir.absolutePath/bin/kubectl.exe" : "kubectl"
def privateProject = project(':spellsource-private')

tasks.register('deploySpellsourceProd') {
    description('Deploys Spellsource to production. Requires access to Spellsource secrets.')
    dependsOn ':spellsource-server:jib', ':spellsource-private:build', ':spellsource-containers:pushKeycloakClusteredImage'
    def taskPath = "${privateProject.projectDir}/src/secrets/"
    inputs.dir(sourceDir)

    def kubeconfigPath = "$taskPath/eksctl/kubeconfig.yaml"
    inputs.file(kubeconfigPath)
    doLast {
        [[kubectlBinary, "rollout", "restart", "deployments/spellsource", "--namespace", "spellsource"],
         [kubectlBinary, "rollout", "restart", "statefulset/keycloak", "--namespace", "spellsource"]]
                .forEach({ cmd ->
                    exec { t ->
                        Utilities.dotEnv(t, new File("${privateProject.projectDir}/src/secrets/common-deployment.env"))
                        environment "KUBECONFIG", kubeconfigPath
                        commandLine(cmd)
                    }
                })
    }
}