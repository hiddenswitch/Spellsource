redis:
  enabled: false
postgresql:
  enabled: false
keycloak:
  enabled: false
replicaCount: 1
image:
  repository: ghcr.io/hiddenswitch/spellsource
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "spellsource-service-account"

podAnnotations: { }
deployment:
  annotations: { }
podSecurityContext: { }
securityContext: { }
service:
  annotations: { }
  type: LoadBalancer
  port: 8081
resources: { }
migration:
  enabled: true
  resources:
    requests:
      cpu: 200m
      memory: 4Gi
  nodeSelector: { }
  annotations: { }
  tolerations: [ ]
  affinity: { }
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: { }
tolerations: [ ]
affinity: { }

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "1h"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1h"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1h"
  hosts:
    - host: spellsource.local
      paths: [ "/" ]
  tls: [ ]

configmap:
  grpcConfiguration:
    port: 8081
    serverKeepAliveTimeMillis: 400
    serverKeepAliveTimeoutMillis: 8000
    serverPermitKeepAliveWithoutCalls: true
  metrics:
    port: 8080
    livenessRoute: "/liveness"
    readinessRoute: "/readiness"
    metricsRoute: "/metrics"
  jaeger:
    enabled: false
    agentHost: "localhost"
    agentPort: 6831
  pg:
    host: "postgres-postgresql-ha-pgpool.default.svc.cluster.local"
    user: "postgres"
    password: "password"
    database: "spellsource"
    port: 5432
  keycloak:
    # keycloak port is 8080 by default on bitnami images, and we override it to 9090
    authUrl: "http://keycloak.default.svc.cluster.local:9090/"
    adminUsername: "admin"
    adminPassword: "password"
  redis:
    uri: "redis://redis-master.default.svc.cluster.local:6379"
extraJavaOptions: ""
extraEnv: [ ]
extraPorts: [ ]
logback: |
  <?xml version="1.0" encoding="UTF-8" ?>
  <!DOCTYPE configuration>

  <configuration
          xmlns="http://ch.qos.logback/xml/ns/logback"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://ch.qos.logback/xml/ns/logback https://raw.githubusercontent.com/enricopulatzo/logback-XSD/master/src/main/xsd/logback.xsd"
          scan="true" scanPeriod="10 seconds">
    <import class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"/>
    <import class="ch.qos.logback.core.ConsoleAppender"/>

    <appender name="STDOUT" class="ConsoleAppender">
      <encoder class="PatternLayoutEncoder">
        <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
      </encoder>
    </appender>

    <root level="WARN">
      <appender-ref ref="STDOUT"/>
    </root>
    <logger name="com.hiddenswitch.framework" level="DEBUG"/>
    <logger name="com.hiddenswitch.framework.impl.ClientMatchmakingService" level="DEBUG"/>
    <logger name="com.hiddenswitch.framework.Matchmaking" level="TRACE"/>
    <logger name="com.hiddenswitch.diagnostics" level="ALL"/>
    <logger name="net.demilich.metastone.game" level="WARN"/>
    <logger name="io.grpc.netty" level="WARN"/>
    <logger name="io.netty" level="WARN"/>
    <logger name="io.jaegertracing" level="OFF"/>
  </configuration>