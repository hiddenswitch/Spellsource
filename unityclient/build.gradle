buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'io.swagger:swagger-models:1.5.17'
        classpath 'io.swagger:swagger-codegen:2.3.0'
    }
}

apply plugin: 'base'


import io.swagger.codegen.ClientOptInput
import io.swagger.codegen.ClientOpts
import io.swagger.codegen.DefaultGenerator
import io.swagger.models.Swagger
import io.swagger.parser.SwaggerParser

// Limit the number of times we can run Unity3D on the same project directory
// See https://github.com/gradle/gradle/pull/9914 for more about how this works

task generateSwaggerCsharp() {
    description("Generates CSharp model files from the swagger-api.yaml file")
    def inputPath = "${project(':client').projectDir}/swagger-api.yaml"
    def outputPath = "src/unity/Assets/Plugins/Client"
    def outputDir = file(outputPath)
    def templatePath = "${project(':client').projectDir}/swagger-templates/csharp"
    def templateDir = file(templatePath)
    inputs.file(inputPath)
    inputs.dir(templatePath)
    outputs.dir(outputPath)
    doLast {
        delete("${outputPath}/**.cs")
        def config = new CSharpNullableGenerator()
        config.setInputSpec(file(inputPath).absolutePath)
        config.setOutputDir(outputDir.absolutePath)
        config.setTemplateDir(templateDir.absolutePath)
        config.additionalProperties().putAll([
                'supportFiles'           : false,
                'apiTests'               : false,
                'excludeTests'           : true,
                'modelTests'             : false,
                'modelDocs'              : false,
                'packageName'            : 'Spellsource.Client',
                'targetFramework'        : 'v3.5',
                'sourceFolder'           : 'Scripts',
                'hideGenerationTimestamp': true,
                'optionalProjectFile'    : false,
                'optionalAssemblyFile'   : false
        ])

        def optInput = new ClientOptInput();
        Swagger swagger = new SwaggerParser().read(file(inputPath).absolutePath, [], true);
        optInput.config(config)
                .opts(new ClientOpts())
                .swagger(swagger)
        new DefaultGenerator().opts(optInput).generate()

        // Remove additional files
        delete "src/unity/Assets/Plugins/Client/Scripts/Spellsource.Client/Api/", "src/unity/Assets/Plugins/Client/Scripts/Spellsource.Client/Properties/"
    }
}

task buildMacOS(type: UnityTask, group: 'Spellsource') {
    description("Builds the macOS versions of the game using deploy.sh file and your local Unity version.")
    flags = '-m'
    outputDir = 'osx'
}

task buildWindows(type: UnityTask, group: 'Spellsource') {
    description("Builds the Windows version of the game using deploy.sh file and your local Unity version.")
    flags = '-w'
    outputDir = 'win'
}

task buildIOS(type: UnityTask, group: 'Spellsource') {
    description("Builds the Windows version of the game using deploy.sh file and your local Unity version.")
    flags = '-i'
    outputDir = 'ios'
}

task buildAndroid(type: UnityTask, group: 'Spellsource') {
    description("Builds the Android version of the game using deploy.sh file and your local Unity version.")
    flags = '-a'
    outputDir = 'android'
}

task buildWebGL(type: UnityTask, group: 'Spellsource') {
    description("Builds the WebGL version of the game using deploy.sh file and your local Unity version.")
    flags = '-W'
    outputDir = 'webgl'
}