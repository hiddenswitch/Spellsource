buildscript {
  repositories {
    maven { url "file://${rootDir}/mavenRepository" }
    mavenCentral()
  }
}

plugins {
  id 'org.javamodularity.moduleplugin' version '1.8.15' apply false
}

dependencies {
  gradleApi()
  localGroovy()
}

allprojects {
  project.version = '0.10.1'
}

subprojects {
  repositories {
    maven { url "file://${rootDir}/mavenRepository" }
    mavenCentral()
    maven { url 'https://jitpack.io' }
  }

  apply plugin: "maven-publish"

  publishing {
    repositories {
      maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/hiddenswitch/Spellsource")
        credentials {
          username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
          password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
        }
      }
    }
    publications {
      if (components.hasProperty('java')) {
        gpr(MavenPublication) {
          from(components.java)
        }
      }
    }
  }

  configurations.configureEach {
    resolutionStrategy {
      preferProjectModules()
      failOnVersionConflict()
      eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.slf4j') {
          details.useVersion slf4jVersion
        }
        if ([
                'com.fasterxml.jackson.core',
                'com.fasterxml.jackson.jaxrs',
                'com.fasterxml.jackson.datatype',
                'com.fasterxml.jackson.module',
                'com.fasterxml.jackson.dataformat'
        ].contains(details.requested.group)) {
          details.useVersion jacksonVersion
        }

        if (details.requested.group == 'io.netty'
                && details.requested.version.contains('Final')
                && details.requested.name != 'netty-tcnative-boringssl-static'
                && details.requested.name != 'netty-tcnative-classes') {
          details.useVersion nettyVersion
        }

        if (details.requested.module.name == 'reactive-streams') {
          details.useVersion '1.0.4'
        }

        if (details.requested.group == 'io.reactivex.rxjava3' && details.requested.module.name == "rxjava") {
          details.useVersion "3.1.6"
        }

        if (details.requested.group == 'commons-io') {
          details.useVersion commonsIoVersion
        }

        if (details.requested.group == 'io.vertx' && !details.requested.version.toLowerCase().contains("snapshot")) {
          if (details.requested.module.name == "vertx-docgen") {
            details.useVersion "3.5.1"
          } else {
            details.useVersion vertxVersion
          }
        }

        if (details.requested.group == 'ch.qos.logback') {
          details.useVersion logbackVersion
        }

        if (details.requested.group == 'log4j') {
          details.useVersion log4jVersion
        }

        if (details.requested.module.name == 'mockito-core') {
          details.useVersion mockitoCoreVersion
        }

        if (details.requested.group == 'com.google.guava' && details.requested.module.name == 'guava') {
          details.useVersion guavaVersion
        }

        if (details.requested.group == 'com.google.protobuf' && details.requested.module.name == 'protobuf-java') {
          details.useVersion protocVersion
        }

        if (details.requested.group == 'org.openjdk.jmh') {
          details.useVersion jmhVersion
        }

        if (details.requested.group == 'org.junit.jupiter') {
          details.useVersion junitVersion
        }

        if (details.requested.group == 'org.jetbrains' && details.requested.name == 'annotations') {
          details.useVersion '24.1.0'
        }

        if (details.requested.group == 'org.jetbrains.kotlin') {
          details.useVersion kotlinVersion
        }

        if (details.requested.group == 'net.bytebuddy') {
          details.useVersion bytebuddyVersion
        }

        if (details.requested.group == 'org.jboss.logging') {
          details.useVersion '3.6.1.Final'
        }

        if (details.requested.group == 'com.google.code.findbugs') {
          details.useVersion '3.0.2'
        }

        if (details.requested.group == 'com.google.j2objc') {
          details.useVersion j2objcVersion
        }

        if (details.requested.group == 'com.google.errorprone') {
          details.useVersion googleErrorproneVersion
        }

        if (details.requested.group == 'com.google.code.gson') {
          details.useVersion gsonVersion
        }

        if (details.requested.group == 'io.grpc') {
          details.useVersion grpcVersion
        }

        if (details.requested.group == 'org.testcontainers') {
          details.useVersion testcontainersVersion
        }

        if (details.requested.group == 'commons-codec') {
          details.useVersion '1.15'
        }

        if (details.requested.group == 'org.jboss.resteasy') {
          details.useVersion resteasyVersion
        }

        if (details.requested.group == 'jakarta.xml.bind') {
          details.useVersion "3.0.1"
        }

        if (details.requested.group == 'jakarta.activation') {
          details.useVersion "2.1.3"
        }

        if (details.requested.group == 'io.micrometer') {
          details.useVersion micrometerVersion
        }

        if (details.requested.group == 'com.github.ben-manes.caffeine') {
          details.useVersion '3.1.8'
        }

        if (details.requested.group == 'org.hdrhistogram') {
          details.useVersion '2.2.2'
        }

        if (details.requested.group == 'org.infinispan') {
          details.useVersion infinispanVersion
        }

        if (details.requested.group == 'org.objenesis') {
          details.useVersion '3.4'
        }
      }
    }
  }
}

tasks.register("runServer") {
  group("spellsource")
  dependsOn ":spellsource-web:run", ":spellsource-server:run"
}