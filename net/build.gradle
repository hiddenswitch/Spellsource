plugins {
    id 'com.github.johnrengelman.shadow' version "5.2.0"
    id 'application'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'
apply plugin: 'maven'
apply from: '../gradle/instrument.gradle'

def testMainClassName = "com.hiddenswitch.spellsource.net.tests.LocalClustered"
mainClassName = "com.hiddenswitch.spellsource.net.applications.Clustered"

def debugSystemProperties = ["rootProject.projectDir"                  : rootProject.projectDir,
                             "spellsource.port"                        : System.getenv().getOrDefault("PORT", "8080"),
                             "spellsource.root.logger.level"           : "DEBUG",
                             "games.defaultNoActivityTimeout"          : "999999000",
                             "vertx.logger-delegate-factory-class-name": "io.vertx.core.logging.SLF4JLogDelegateFactory",
                             "gradle"                                  : "true"]


shadowJar {
    mergeServiceFiles()
    zip64 true
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

artifacts {
    archives shadowJar
}

repositories {
    jcenter()
}

configurations.runtime {
    exclude group: 'com.google.code.findbugs', module: 'jsr305'
    exclude group: 'javax.ws.rs', module: 'jsr311-api'
}

dependencies {
    implementation platform('org.testcontainers:testcontainers-bom:1.14.3')
    implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

    runtimeOnly group: 'org.codehaus.groovy', name: 'groovy', version: '3.0.2'
    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.10.2') {
        exclude group: 'jakarta.xml.bind', module: '*'
        exclude group: 'jakarta.activation', module: '*'
    }
    implementation('com.fasterxml.jackson.module:jackson-module-afterburner:2.10.2') {
        exclude group: 'jakarta.xml.bind', module: '*'
        exclude group: 'jakarta.activation', module: '*'
    }
    implementation "io.github.classgraph:classgraph:$classgraphVersion"
    implementation group: 'joda-time', name: 'joda-time', version: '2.10.2'
    implementation group: 'com.lambdaworks', name: 'scrypt', version: '1.4.0'
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.6'
    api group: 'io.vertx', name: 'vertx-core', version: '3.9.2'
    implementation 'org.apache.commons:commons-lang3:3.7'
    implementation 'com.google.guava:guava:26.0-jre'
    implementation project(':vertx-redis-cluster')
    implementation group: 'io.vertx', name: 'vertx-mongo-client', version: '3.9.2'
    implementation group: 'io.vertx', name: 'vertx-web-client', version: '3.9.2'
    implementation group: 'io.vertx', name: 'vertx-service-discovery', version: '3.9.2'
    implementation group: 'io.vertx', name: 'vertx-web', version: '3.9.2'
    implementation group: 'io.vertx', name: 'vertx-auth-common', version: '3.9.2'
    implementation group: 'io.vertx', name: 'vertx-rx-java2', version: '3.9.2'
    implementation group: 'io.vertx', name: 'vertx-micrometer-metrics', version: '3.9.2'
    implementation group: 'io.vertx', name: 'vertx-mail-client', version: '3.9.2'
    implementation 'org.jetbrains:annotations:16.0.2'
    implementation 'io.jaegertracing:jaeger-client:1.2.0'
    implementation 'io.netty:netty-transport-native-epoll:4.1.43.Final:linux-x86_64'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.5.1'

    implementation('com.esotericsoftware:kryo:4.0.2') {
        exclude group: 'org.objenesis', module: '*'
    }

    implementation group: 'javax.cache', name: 'cache-api', version: '1.1.1'
    implementation group: 'net.sf.py4j', name: 'py4j', version: '0.10.8.1'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'

    implementation project(':cards')
    implementation project(':framework')
    implementation(project(':client')) {
        exclude group: 'jakarta.activation', module: 'jakarta.activation-api'
        exclude group: 'javax.ws.rs', module: 'jsr311-api'
        exclude group: 'jakarta.ws.rs', module: '*'
    }

    implementation project(':game')
    implementation project(':vertx-sync')
    implementation project(':game')

    testRuntimeOnly group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    testRuntimeOnly 'org.glassfish.jersey.core:jersey-common:2.+'

    testImplementation(platform("org.junit:junit-bom:5.6.2"))
    testRuntimeOnly(project(':client')) {
        exclude group: 'jakarta.activation', module: 'jakarta.activation-api'
        exclude group: 'javax.ws.rs', module: 'jsr311-api'
    }

    testRuntimeOnly("org.junit.platform:junit-platform-launcher") {
        because 'allows tests to run from IDEs that bundle older version of launcher'
    }

    testImplementation project(':testcontainers')
    testImplementation project(':testutils')
    testImplementation "org.testcontainers:testcontainers"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation group: 'io.vertx', name: 'vertx-junit5', version: '3.9.2'
    testImplementation(group: 'org.jboss.resteasy', name: 'resteasy-client', version: '3.11.2.Final') {
        exclude group: 'javax.activation', module: 'activation'
        exclude group: 'org.jboss.spec.javax.annotation', module: '*'
        exclude group: 'org.jboss.spec.javax.ws.rs', module: '*'
        exclude group: 'org.jboss.spec.javax.xml.bind', module: '*'
    }
    testImplementation(group: 'org.asynchttpclient', name: 'async-http-client', version: '2.4.9') {
        exclude group: 'com.sun.activation', module: '*'
    }
}

run {
    description("Starts the Spellsource server")
    dependsOn += [classes, testClasses]
    classpath sourceSets.test.runtimeClasspath
    setSystemProperties(debugSystemProperties)
    main = testMainClassName
}

test {
    description('Tests the server.')
    setSystemProperties(debugSystemProperties)
    useJUnitPlatform()
    maxParallelForks = 1
    enableAssertions = false

    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }

    if (System.properties.containsKey("exclude-tests")) {
        exclude(System.properties.getProperty("exclude-tests").split(","))
    }
}