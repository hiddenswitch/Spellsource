plugins {
    id 'com.github.johnrengelman.shadow' version "5.2.0"
    id 'org.javamodularity.moduleplugin' version '1.6.0'
    id "org.beryx.jlink" version "2.17.0"
    id 'application'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'
apply plugin: 'org.javamodularity.moduleplugin'
apply plugin: "org.beryx.jlink"
apply from: '../gradle/instrument.gradle'

def localMainClassName = 'spellsource.net/com.hiddenswitch.spellsource.net.applications.LocalClustered'
def defaultMainClass = 'spellsource.net/com.hiddenswitch.spellsource.net.applications.Clustered'

def debugSystemProperties = ["spellsource.port"                        : System.getenv().getOrDefault("PORT", "8080"),
                             "spellsource.root.logger.level"           : "DEBUG",
                             "games.defaultNoActivityTimeout"          : "999999000",
                             "vertx.logger-delegate-factory-class-name": "io.vertx.core.logging.SLF4JLogDelegateFactory"]


application {
    mainClassName = defaultMainClass
}

jar {
    manifest {
        attributes 'Main-Class': defaultMainClass
    }
}

jlink {
    options.addAll(['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages'])
    launcher {
        name = 'spellsource_server'
        jvmArgs = ['--add-opens', 'java.base/java.util.concurrent.atomic=kryo', '--add-opens', 'java.base/java.lang=co.paralleluniverse.quasar.core']
    }
}


shadowJar {
    mergeServiceFiles()
    zip64 true
    manifest {
        attributes 'Main-Class': defaultMainClass
    }
}

artifacts {
    archives shadowJar
}

repositories {
    maven {
        url 'http://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        url 'https://jitpack.io'
    }
    jcenter()
}

configurations.runtime {
    exclude group: 'com.google.code.findbugs', module: 'jsr305'
    exclude group: 'javax.ws.rs', module: 'jsr311-api'
}

dependencies {
    runtimeOnly group: 'org.codehaus.groovy', name: 'groovy', version: '3.0.0-rc-2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.10.2'
    implementation 'com.fasterxml.jackson.module:jackson-module-afterburner:2.10.2'
    implementation 'io.github.classgraph:classgraph:4.8.59'
    implementation group: 'joda-time', name: 'joda-time', version: '2.10.2'
    implementation group: 'com.lambdaworks', name: 'scrypt', version: '1.4.0'
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.6'
    api group: 'io.vertx', name: 'vertx-core', version: '3.8.3'
    implementation group: 'io.vertx', name: 'vertx-mongo-client', version: '3.8.3'
    implementation group: 'io.vertx', name: 'vertx-web-client', version: '3.8.3'
    implementation group: 'io.vertx', name: 'vertx-service-discovery', version: '3.8.3'
    implementation group: 'io.vertx', name: 'vertx-web', version: '3.8.3'
    implementation group: 'io.vertx', name: 'vertx-auth-common', version: '3.8.3'
    implementation group: 'io.vertx', name: 'vertx-rx-java2', version: '3.8.3'
    implementation group: 'io.vertx', name: 'vertx-mail-client', version: '3.8.3'
    implementation 'io.dropwizard.metrics:metrics-core:4.1.2'
    implementation('io.vertx:vertx-dropwizard-metrics:3.8.3') {
        exclude group: 'io.dropwizard.metrics', module: 'metrics-core'
    }
    implementation 'org.jetbrains:annotations:16.0.2'
    implementation('io.jaegertracing:jaeger-client:1.0.0')
    implementation 'io.netty:netty-transport-native-epoll:4.1.43.Final:linux-x86_64'
    implementation 'io.netty:netty-transport-native-kqueue:4.1.43.Final:osx-x86_64'

    implementation('com.esotericsoftware:kryo:4.0.2') {
        exclude group: 'org.ow2.asm', module: '*'
        exclude group: 'org.objenesis', module: '*'
    }
    implementation('io.atomix:atomix:3.1.5') {
        exclude group: 'org.objenesis', module: '*'
        exclude group: 'io.github.classgraph', module: 'classgraph'
    }
    implementation('io.atomix:atomix-raft:3.1.5') {
        exclude group: 'org.objenesis', module: '*'
        exclude group: 'io.github.classgraph', module: 'classgraph'
    }
    implementation('io.atomix:atomix-primary-backup:3.1.5') {
        exclude group: 'org.objenesis', module: '*'
        exclude group: 'io.github.classgraph', module: 'classgraph'
    }
    implementation group: 'javax.cache', name: 'cache-api', version: '1.1.1'
    implementation group: 'net.sf.py4j', name: 'py4j', version: '0.10.8.1'
    implementation group: 'ca.pjer', name: 'logback-awslogs-appender', version: '1.0.0'

    implementation project(':cards')
    implementation(project(':client')) {
        exclude group: 'jakarta.activation', module: 'jakarta.activation-api'
        exclude group: 'javax.ws.rs', module: 'jsr311-api'
    }
    implementation project(':game')
    implementation project(':vertx-sync')
    implementation project(':game')

    implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    runtimeOnly 'org.glassfish.jersey.core:jersey-common:2.+'

    testImplementation(platform("org.junit:junit-bom:5.6.0-M1"))
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine") {
        because 'allows JUnit 3 and JUnit 4 tests to run'
    }

    testRuntimeOnly("org.junit.platform:junit-platform-launcher") {
        because 'allows tests to run from IDEs that bundle older version of launcher'
    }

    testImplementation project(':testutils')
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'io.vertx:vertx-core:3.8.3:tests'
    testImplementation('org.powermock:powermock-module-junit4:2.0.2') {
        exclude group: 'org.objenesis', module: '*'
    }
    testImplementation('org.powermock:powermock-api-mockito2:2.0.2') {
        exclude group: 'org.objenesis', module: '*'
    }
    testImplementation group: 'io.vertx', name: 'vertx-unit', version: '3.8.3'
    testImplementation(group: 'org.jboss.resteasy', name: 'resteasy-client', version: '3.9.3.Final') {
        exclude group: 'javax.activation', module: 'activation'
        exclude group: 'org.jboss.spec.javax.annotation', module: '*'
        exclude group: 'org.jboss.spec.javax.ws.rs', module: '*'
        exclude group: 'org.jboss.spec.javax.xml.bind', module: '*'
    }
    testImplementation(group: 'org.asynchttpclient', name: 'async-http-client', version: '2.4.9') {
        exclude group: 'com.sun.activation', module: '*'
    }
    testImplementation group: 'com.neovisionaries', name: 'nv-websocket-client', version: '2.6'
}

run {
    moduleOptions {
        addOpens = ['java.base/java.util.concurrent.atomic': 'kryo', 'java.base/java.lang': 'co.paralleluniverse.quasar.core']
    }
    setSystemProperties(debugSystemProperties)
    main = localMainClassName
}

task(runDebug, dependsOn: 'classes', type: JavaExec) {
    setSystemProperties(debugSystemProperties)
    main = localMainClassName
    setJvmArgs(["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"] as List<String>)
    classpath = sourceSets.main.runtimeClasspath
}

test {
    setSystemProperties(debugSystemProperties)
    useJUnitPlatform()
    maxParallelForks = 1
    enableAssertions = false

    moduleOptions {
        addOpens = ['java.base/java.util.concurrent.atomic': 'kryo', 'java.base/java.lang': 'co.paralleluniverse.quasar.core']
    }

    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }

    if (System.properties.containsKey("exclude-tests")) {
        exclude(System.properties.getProperty("exclude-tests").split(","))
    }
}